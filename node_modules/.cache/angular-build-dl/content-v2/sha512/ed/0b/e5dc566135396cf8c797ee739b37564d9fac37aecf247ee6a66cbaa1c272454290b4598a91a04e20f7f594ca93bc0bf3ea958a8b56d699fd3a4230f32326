{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Question.ts","webpack:///src/app/answer.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/averageRatings.ts","webpack:///src/app/components/data-collected/data-collected.component.ts","webpack:///src/app/components/data-collected/data-collected.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/latest-posts/latest-posts.component.ts","webpack:///src/app/components/latest-posts/latest-posts.component.html","webpack:///src/app/components/module-list-subcomponents/main-board/main-board.component.ts","webpack:///src/app/components/module-list-subcomponents/main-board/main-board.component.html","webpack:///src/app/components/module-list-subcomponents/refinement-list/refinement-list.component.ts","webpack:///src/app/components/module-list-subcomponents/refinement-list/refinement-list.component.html","webpack:///src/app/components/module-list-subcomponents/refinement-table/refinement-table.component.ts","webpack:///src/app/components/module-list-subcomponents/refinement-table/refinement-table.component.html","webpack:///src/app/components/module-list/module-list.component.ts","webpack:///src/app/components/module-list/module-list.component.html","webpack:///src/app/components/module-subcomponents/module-description/module-description.component.ts","webpack:///src/app/components/module-subcomponents/module-description/module-description.component.html","webpack:///src/app/components/module-subcomponents/question-list/question-list.component.ts","webpack:///src/app/components/module-subcomponents/question-list/question-list.component.html","webpack:///src/app/components/module-subcomponents/review-list/review-list.component.ts","webpack:///src/app/components/module-subcomponents/review-list/review-list.component.html","webpack:///src/app/components/module/module.component.ts","webpack:///src/app/components/module/module.component.html","webpack:///src/app/components/my-modules/my-modules.component.ts","webpack:///src/app/components/my-modules/my-modules.component.html","webpack:///src/app/components/post-review-subcomponents/extra-info/extra-info.component.ts","webpack:///src/app/components/post-review-subcomponents/extra-info/extra-info.component.html","webpack:///src/app/components/post-review-subcomponents/module-info/module-info.component.ts","webpack:///src/app/components/post-review-subcomponents/module-info/module-info.component.html","webpack:///src/app/components/post-review-subcomponents/review-and-ratings/review-and-ratings.component.ts","webpack:///src/app/components/post-review-subcomponents/review-and-ratings/review-and-ratings.component.html","webpack:///src/app/components/post-review/post-review.component.ts","webpack:///src/app/components/post-review/post-review.component.html","webpack:///src/app/extraInfo.ts","webpack:///src/app/module.ts","webpack:///src/app/moduleInfo.ts","webpack:///src/app/refinementList.ts","webpack:///src/app/reviewAndRatings.ts","webpack:///src/app/reviewPost.ts","webpack:///src/app/services/average-ratings.service.ts","webpack:///src/app/services/module-list.service.ts","webpack:///src/app/services/my-modules.service.ts","webpack:///src/app/services/post-list.service.ts","webpack:///src/app/services/question-list.service.ts","webpack:///src/app/services/refinement-list.service.ts","webpack:///src/app/services/search.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Question","content","date","time","moduleCode","answerList","Answer","questionId","routes","path","component","children","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AverageRatings","averageGeneral","averageDifficulty","averageWorkload","averageRecommend","emptyAverageRatings","DataCollectedComponent","searchService","postListService","numberOfModules","numberOfReviews","getFullModuleList","subscribe","moduleList","length","getPostList","postList","FooterComponent","HeaderComponent","route","navigate","goHome","goModuleList","goPostReviews","goLatestPosts","goMyModules","HomeComponent","searchInput","moduleListShown","inputStatus","search","selectedModule","goModule","navigationExtras","queryParams","emptyRefinementList","searchResult","slice","inputStatusOn","goModuleListWithNoInput","general","difficulty","workload","recommend","LatestPostsComponent","snackBar","postListShown","userName","postListLike","postListDislike","resetHoverOn","reverse","updatePostListLikeAndDislike","hoverOnShareBtn","hoverOnShareBox","event","start","pageIndex","getPostListLike","getPostListDislike","post","postId","includes","numOfDislikes","numOfLikes","cancelDislikePost","post_1","likePost","post_2","cancelLikePost","dislikePost","copyContent","numOfShares","oInput","document","createElement","value","body","appendChild","select","execCommand","style","display","open","duration","sharePost","key","setTimeout","updatePostListShown","MainBoardComponent","refinementList","selectorList","prof","acadYear","filteredModuleList","sortOption","searchInputFromFather","sort","getSortMethod","updateNumOfReviews","a","b","parseInt","arrOfCountRes","forEach","push","countPostList","listOfNumOfReviews","index","numOfReviews","sortFilteredModuleList","updateRefinementList","reverseFilteredModuleList","updateModuleListShown","RefinementListComponent","refinementListService","sendRefinementList","getRefinementList","emit","refinement","deleteRefinement","RefinementTableComponent","facultyList","more","Faculty","Department","conditionList","initialList","departmentList","fullList","sendMore","sendCloseDrawer","addRefinement","resetMore","closeDrawer","ModuleListComponent","widthOfDrawer","widthOfMain","hasBackdrop","status","opened","data","updateWidthOfMain","updateWidthOfDrawer","updateOpened","updateMore","ModuleDescriptionComponent","activatedRoute","http","description","getModule","getElementsByTagName","setAttribute","QuestionListComponent","questionListService","questionList","questionListShown","questionEntered","answerEntered","ifPostAnAnswer","ifAskAQuestion","map","question","updateQuestionList","getQuestionListOfModule","quesitonList","ans","Date","toLocaleDateString","toLocaleTimeString","httpOptions","headers","answer","resetAnswerForm","countNumOfQuestions","numOfQuesitons","addQuestion","unshift","resetQuestionForm","showQuestionForm","updateQuestionListShown","ReviewListComponent","reviewList","reviewListShown","getPostListOfModule","addReviews","updateReviewListShown","ModuleComponent","myModuleService","moduleListService","averageRatingsService","activeBtn","averageRatings","moreModuleList","getAverageRatingsByReviewList","getMoreModuleList","addModule","verticalPosition","location","pathname","addToMyModules","loadReviewList","loadQuestionList","loadDescription","MyModulesComponent","myModulesService","myModuleList","listOfAverageRatings","getMyModuleList","getAverageRatingsByModuleCode","deleteModule","ExtraInfoComponent","extraInfo","ModuleInfoComponent","semester","undefined","ReviewAndRatingsComponent","reviewAndRatings","PostReviewComponent","ModuleInfo","moduleInfo","countNumOfPosts","numOfPosts","reviewPost","ReviewAndRatings","ExtraInfo","toTimeString","addPost","onSubmit","gradeExpected","gradeObtained","Module","moduleCredit","department","faculty","RefinementList","ModuleCredit","Level","review","ReviewPost","AverageRatingsService","toFixed","pipe","providedIn","ModuleListService","cachedModuleList","get","localStorage","setItem","JSON","stringify","getItem","parse","updateLocalStorage","MyModulesService","filter","PostListService","cachedPostList","put","QuestionListService","RefinementListService","subject","next","splice","indexOf","SearchService","belongsToFaculty","flag","i","levelList","level","charAt","levelOfModule","replace","moduleCreditList","getModuleList","isEmpty","belongsToDepartment","hasModuleCredit","belongsToLevel","uppercaseSearchInput","toUpperCase","uppercaseModuleTitle","moduleFound","findIndex","item","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Answer } from './answer';\n\nexport class Question {\n    public content: string;\n    public date: string;\n    public time: string;\n    public moduleCode: string;\n    public id: number;\n    public answerList: Answer[];\n    constructor(content: string, date: string,\n        time: string, moduleCode: string, id: number) { \n            this.content = content;\n            this.date = date;\n            this.time = time;\n            this.moduleCode = moduleCode;\n            this.id = id;\n            this.answerList = [];\n        }\n}","export class Answer {\n    constructor(public content: string,\n        public date: string,\n        public time: string,\n        public questionId: number) {}\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LatestPostsComponent } from './components/latest-posts/latest-posts.component';\nimport { MyModulesComponent } from './components/my-modules/my-modules.component';\nimport { ModuleComponent } from './components/module/module.component';\nimport { ModuleListComponent } from './components/module-list/module-list.component';\nimport { PostReviewComponent } from './components/post-review/post-review.component';\nimport { ModuleDescriptionComponent } from './components/module-subcomponents/module-description/module-description.component';\nimport { QuestionListComponent } from './components/module-subcomponents/question-list/question-list.component';\nimport { ReviewListComponent } from './components/module-subcomponents/review-list/review-list.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'ModuleList', component: ModuleListComponent},\n  {path: 'PostReview', component: PostReviewComponent},\n  {path: 'LatestPosts', component: LatestPostsComponent},\n  {path: 'Module', component: ModuleComponent, children: [\n    {path: 'Description', component: ModuleDescriptionComponent},\n    {path: 'QuestionList', component: QuestionListComponent},\n    {path: 'ReviewList', component: ReviewListComponent},\n  ]},\n  {path: 'MyModules', component: MyModulesComponent},\n  {path: 'Module', redirectTo: 'Module/Description'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'nusmods';\n}\n","<div class=\"container\">\n  <header>\n      <app-header></app-header>\n  </header>\n  \n  <main>\n      <router-outlet></router-outlet>\n  </main>\n</div>\n\n<footer>\n  <app-footer></app-footer>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LatestPostsComponent } from './components/latest-posts/latest-posts.component';\nimport { DataCollectedComponent } from './components/data-collected/data-collected.component';\nimport { MyModulesComponent } from './components/my-modules/my-modules.component';\nimport { ModuleComponent } from './components/module/module.component';\nimport { ModuleListComponent } from './components/module-list/module-list.component';\nimport { MainBoardComponent } from './components/module-list-subcomponents/main-board/main-board.component';\nimport { RefinementListComponent } from './components/module-list-subcomponents/refinement-list/refinement-list.component';\nimport { RefinementTableComponent } from './components/module-list-subcomponents/refinement-table/refinement-table.component';\nimport { PostReviewComponent } from './components/post-review/post-review.component';\nimport { ExtraInfoComponent } from './components/post-review-subcomponents/extra-info/extra-info.component';\nimport { ModuleInfoComponent } from './components/post-review-subcomponents/module-info/module-info.component';\nimport { ReviewAndRatingsComponent } from './components/post-review-subcomponents/review-and-ratings/review-and-ratings.component';\nimport { ModuleDescriptionComponent } from './components/module-subcomponents/module-description/module-description.component';\nimport { QuestionListComponent } from './components/module-subcomponents/question-list/question-list.component';\nimport { ReviewListComponent } from './components/module-subcomponents/review-list/review-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LatestPostsComponent,\n    DataCollectedComponent,\n    MyModulesComponent,\n    ModuleComponent,\n    ModuleListComponent,\n    MainBoardComponent,\n    RefinementListComponent,\n    RefinementTableComponent,\n    PostReviewComponent,\n    ExtraInfoComponent,\n    ModuleInfoComponent,\n    ReviewAndRatingsComponent,\n    ModuleDescriptionComponent,\n    QuestionListComponent,\n    ReviewListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatCardModule,\n    MatDividerModule,\n    MatSidenavModule,\n    MatAutocompleteModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class AverageRatings {\n    constructor(public averageGeneral: string,\n        public averageDifficulty: string,\n        public averageWorkload: string,\n        public averageRecommend: string,) {}\n\n    static emptyAverageRatings = new AverageRatings('0', '0', '0', '0');\n}","import { Component, OnInit } from '@angular/core';\nimport { SearchService } from '../../services/search.service';\nimport { PostListService } from '../../services/post-list.service';\nimport { Module } from '../../module';\nimport { ReviewPost } from 'src/app/reviewPost';\n\n@Component({\n  selector: 'app-data-collected',\n  templateUrl: './data-collected.component.html',\n  styleUrls: ['./data-collected.component.css']\n})\nexport class DataCollectedComponent implements OnInit {\n\n  public numberOfModules: number = 0;\n  public numberOfReviews: number = 0;\n\n  constructor(public searchService: SearchService, public postListService: PostListService) { }\n\n  ngOnInit(): void {\n    this.searchService.getFullModuleList().subscribe((moduleList: Module[]) => {\n      this.numberOfModules = moduleList.length;\n    })\n\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.numberOfReviews = postList.length;\n    })\n  }\n}\n","<mat-card>\n    <mat-card-title>Data collected</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n        <div class=\"data-collected\">Number of modules: {{numberOfModules}}</div>\n        <div class=\"data-collected\">Number of reviews: {{numberOfReviews}}</div>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"mat-caption\">\n        Made By Cao Peng & Li Zhuoran, June 2020\n    </div>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public route: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goHome() {\n    this.route.navigate(['/']);\n  }\n\n  goModuleList() {\n    this.route.navigate(['/ModuleList']);\n  }\n\n  goPostReviews() {\n    this.route.navigate(['/PostReview']);\n  }\n\n  goLatestPosts() {\n    this.route.navigate(['/LatestPosts']);\n  }\n\n  goMyModules() {\n    this.route.navigate(['/MyModules']);\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"nusmods\">\n        <button mat-button>\n            <span class=\"mat-h1\" (click)=\"goHome()\">Home</span>\n        </button>\n    </div>\n\n    <div class=\"btns\">\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goModuleList()\">Module List</span>\n        </button>\n\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goPostReviews()\">Post Reviews</span>\n        </button>\n\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goLatestPosts()\">Latest Posts</span>\n        </button>\n    </div>\n\n    <div class=\"my-modules\">\n        <button mat-raised-button (click)=\"goMyModules()\">My Modules</button>\n    </div>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationExtras, NavigationEnd } from '@angular/router';\nimport { SearchService } from '../../services/search.service';\nimport { Module } from '../../module';\nimport { RefinementList } from '../../refinementList';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public searchInput: string = '';\n\n  public selectedModule: Module;\n\n  public moduleListShown: Module[] = [];\n\n  public inputStatus: boolean = false;\n\n  constructor(public route: Router, public searchService: SearchService) { }\n\n  ngOnInit(): void {\n    this.search();\n  }\n\n  select(module: Module) {\n    this.selectedModule = module;\n    this.goModule(module.moduleCode);\n  }\n  \n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  search() {\n    this.searchService.search(this.searchInput, RefinementList.emptyRefinementList).subscribe((searchResult: Module[]) => {\n      this.moduleListShown = searchResult.slice(0, 10);\n    })\n  }\n\n  goModuleList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        searchInput: this.searchInput\n      }\n    }\n    this.route.navigate(['/ModuleList'], navigationExtras);\n  }\n\n  goModuleListWithNoInput() {\n    this.route.navigate(['/ModuleList']);\n  }\n\n  goPostReviews() {\n    this.route.navigate(['/PostReview']);\n  }\n\n  goLatestPosts() {\n    this.route.navigate(['/LatestPosts']);\n  }\n\n  inputStatusOn() {\n    this.inputStatus = true;\n  }\n\n}\n","<div>\n    <div class=\"headline mat-display-1\">ModuleReviewsSharing@NUS</div>\n    <div class=\"mat-caption\">reviews | ratings | recommend</div>\n    <div class=\"search-box\">\n        <mat-icon>search</mat-icon>\n        <mat-form-field>\n            <input type=\"text\" autocomplete=\"off\" matInput placeholder=\"Module code or title\"\n                (input)=\"search(); inputStatusOn()\" [(ngModel)]=\"searchInput\">\n            <button mat-button *ngIf=\"searchInput\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"searchInput=''; search()\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-form-field>\n    </div>\n    <div class=\"scrollable-container\" cdkScrollable *ngIf=\"inputStatus\">\n        <mat-option *ngFor=\"let module of moduleListShown\" (click)=\"select(module)\">\n            <div class=\"module-info\">\n                <div class=\"mat-h4\">{{module.moduleCode}} - {{module.title}} </div>\n                <div class=\"mat-caption\"> {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}MCs </div>\n            </div>\n        </mat-option>\n        <button class=\"more-btn\" mat-button color=\"primary\" (click)=\"goModuleList()\">More</button>\n    </div>\n    <div class=\"flex-container\">\n        <button mat-button (click)=\"goModuleListWithNoInput()\" class=\"colored-btn\">Module List</button>\n        <button mat-raised-button (click)=\"goPostReviews()\" color=\"primary\">Post Reviews</button>\n        <button mat-button (click)=\"goLatestPosts()\" class=\"colored-btn\">Latest Posts</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PostListService } from '../../services/post-list.service';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-latest-posts',\n  templateUrl: './latest-posts.component.html',\n  styleUrls: ['./latest-posts.component.css']\n})\nexport class LatestPostsComponent implements OnInit {\n\n  public postList: ReviewPost[] = [];\n\n  public postListShown: ReviewPost[] = [];\n\n  public userName: string = \"Anonymous\";\n\n  public postListLike: number[] = [];\n\n  public postListDislike: number[] = [];\n\n  public hoverOnShareBtn: boolean[];\n  \n  public hoverOnShareBox: boolean[];\n\n  constructor(public postListService: PostListService, public route: Router, public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.resetHoverOn();\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.postList = postList.reverse();\n      this.postListShown = postList.slice(0, 5);\n    });\n    this.updatePostListLikeAndDislike();\n  }\n\n  goModule(moduleCode: String) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  resetHoverOn() {\n    this.hoverOnShareBtn = [false, false, false, false, false];\n    this.hoverOnShareBox = [false, false, false, false, false];\n  }\n\n  updatePostListShown(event: any) {\n    var start = event.pageIndex * 5;\n    this.resetHoverOn();\n    this.postListShown = this.postList.slice(start, start + 5);\n  }\n\n  updatePostListLikeAndDislike() {\n    this.postListLike = this.postListService.getPostListLike();\n    this.postListDislike = this.postListService.getPostListDislike();\n  }\n\n  onClickLikePost(post: ReviewPost) {\n    var postId = post.id;\n    if (this.postListDislike.includes(postId)) {\n      post.numOfDislikes--;\n      post.numOfLikes++;\n      this.postListService.cancelDislikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.likePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n          \n        });\n      });\n    } else if (!this.postListLike.includes(postId)) {\n      post.numOfLikes++;\n      this.postListService.likePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfLikes--;\n      this.postListService.cancelLikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onClickDislikePost(post: ReviewPost) {\n    var postId = post.id;\n    if (this.postListLike.includes(postId)) {\n      post.numOfLikes--;\n      post.numOfDislikes++;\n      this.postListService.cancelLikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListDislike.includes(postId)) {\n      post.numOfDislikes++;\n      this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfDislikes--;\n      this.postListService.cancelDislikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onCopyPost(post: ReviewPost, copyContent: string) {\n    post.numOfShares++;\n    const oInput = document.createElement('input');\n    var postId = post.id;\n    // var reviewPost = post.moduleInfo.moduleCode + ' - ' + post.moduleInfo.title + \n    // ' taken by Anonymous\\n' + 'under Prof ' + post.moduleInfo.prof + ', ' + post.moduleInfo.acadYear + ' / ' +\n    // post.moduleInfo.semester + ':\\n\\n' + post.reviewAndRatings.review + '\\n\\n' +\n    // 'general: ' + post.reviewAndRatings.general + ' / ' + 10 + ' (10 for most satisfied)\\n' + \n    // 'general: ' + post.reviewAndRatings.difficulty + ' / ' + 10 + ' (10 for most difficulty)\\n' + \n    // 'general: ' + post.reviewAndRatings.workload + ' / ' + 10 + ' (10 for heaviest workload)\\n' + \n    // 'general: ' + post.reviewAndRatings.recommend + ' / ' + 10 + ' (10 for most willing to recommend)'; \n    oInput.value = copyContent;\n    document.body.appendChild(oInput);\n    oInput.select();\n    document.execCommand('Copy');\n    oInput.style.display = 'none';\n    this.snackBar.open('Review post copied!', '', {\n      duration: 2000,\n    });\n    this.postListService.sharePost(postId).subscribe((post_1: ReviewPost) => {\n    });\n  } \n\n  ifLike(postId: number) {\n    return this.postListLike.includes(postId);\n  }\n\n  ifDislike(postId: number) {\n    return this.postListDislike.includes(postId);\n  }\n\n  mouseLeaveShareBtn(key: number) {\n    setTimeout(() => this.hoverOnShareBtn[key] = false, 200);\n  }\n\n}\n","<main class=\"flex-container\">\n    <div class=\"left-panel\">\n        <div class=\"mat-display-1\">Latest Posts</div>\n        <mat-card class=\"no-reviews-yet mat-h1\" *ngIf=\"postList.length==0\">\n            No reviews yet!\n            <mat-icon>sentiment_very_dissatisfied</mat-icon>\n        </mat-card>\n        <mat-card *ngFor=\"let post of postListShown; let key=index\">\n\n            <mat-card-title class=\"flex-container\">\n                <div class=\"header\">\n                    {{post.moduleInfo.moduleCode}} - {{post.moduleInfo.title}}\n                    <span class=\"mat-caption\">Under Prof {{post.moduleInfo.prof}}, {{post.moduleInfo.acadYear}} /\n                        {{post.moduleInfo.semester}}</span>\n                </div>\n                <div class=\"view-btn\">\n                    <button mat-icon-button matTooltip=\"view\" (click)=\"goModule(post.moduleInfo.moduleCode)\">\n                        <mat-icon>search</mat-icon>\n                    </button>\n                </div>\n            </mat-card-title>\n\n            <mat-card-subtitle>\n                {{post.date}} - {{post.time}} by {{userName}}\n            </mat-card-subtitle>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-content>\n                <div class=\"review\">\n                    <pre class=\"mat-body\">\n                        {{post.reviewAndRatings.review}}\n                    </pre>\n                </div>\n\n                <div class=\"extra-info mat-caption\">\n                    Expected Grade: {{post.extraInfo.gradeExpected}}\n                </div>\n\n                <div class=\"extra-info mat-caption\">\n                    Grade Obtained: {{post.extraInfo.gradeObtained}}\n                </div>\n            </mat-card-content>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-actions class=\"flex-container\">\n                <div class=\"flex-container ratings\">\n                    <div matTooltip=\"10 for most satisfied\">\n                        general: {{post.reviewAndRatings.general}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>2&&post.reviewAndRatings.general<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>4&&post.reviewAndRatings.general<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>6&&post.reviewAndRatings.general<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most difficult\">\n                        difficulty: {{post.reviewAndRatings.difficulty}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>6&&post.reviewAndRatings.difficulty<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>4&&post.reviewAndRatings.difficulty<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>2&&post.reviewAndRatings.difficulty<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty<3\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for heaviest workload\">\n                        workload: {{post.reviewAndRatings.workload}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>6&&post.reviewAndRatings.workload<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>4&&post.reviewAndRatings.workload<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>2&&post.reviewAndRatings.workload<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most willing to recommend\">\n                        recommend: {{post.reviewAndRatings.recommend}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>2&&post.reviewAndRatings.recommend<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>4&&post.reviewAndRatings.recommend<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>6&&post.reviewAndRatings.recommend<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>8\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"btns\">\n                    <button mat-icon-button matTooltip=\"like\" (click)=\"onClickLikePost(post)\">\n                        <mat-icon [ngClass]=\"{'pink-color': ifLike(post.id)}\">thumb_up</mat-icon>\n                        {{post.numOfLikes}}\n                    </button>\n                    <button mat-icon-button matTooltip=\"dislike\" (click)=\"onClickDislikePost(post)\">\n                        <mat-icon [ngClass]=\"{'pink-color': ifDislike(post.id)}\">thumb_down</mat-icon>\n                        {{post.numOfDislikes}}\n                    </button>\n                    <button mat-icon-button matTooltip=\"share\" \n                    (mouseover)=\"hoverOnShareBtn[key] = true\"\n                    (mouseleave)=\"mouseLeaveShareBtn(key)\">\n                        <mat-icon>share</mat-icon>\n                        {{post.numOfShares}}\n                    </button>\n                    <mat-card class=\"share-box\" *ngIf=\"hoverOnShareBtn[key]||hoverOnShareBox[key]\"\n                    (mouseover)=\"hoverOnShareBox[key]=true\"\n                    (mouseleave)=\"hoverOnShareBox[key]=false\">\n                    <mat-card-title>\n                        Copy & Share\n                        <button mat-icon-button (click)=\"onCopyPost(post, copyContent.value)\" class=\"copy-btn\" matTooltip=\"copy review post\">\n                            <mat-icon>\n                                content_copy\n                            </mat-icon>\n                        </button>\n                    </mat-card-title>\n                    <mat-card-content>\n                        <pre class=\"mat-body\" #copyContent>\n{{post.moduleInfo.moduleCode}} - {{post.moduleInfo.title}} taken by {{userName}}\nunder {{post.moduleInfo.prof}}, {{post.moduleInfo.acadYear}} / {{post.moduleInfo.semester}}:\n\n{{post.reviewAndRatings.review}}\n\ngeneral: {{post.reviewAndRatings.general}} / 10 (10 for most satisfied)\ndifficulty: {{post.reviewAndRatings.difficulty}} / 10 (10 for most difficult)\nworkload: {{post.reviewAndRatings.workload}} / 10 (10 for heaviest workload)\nrecommend: {{post.reviewAndRatings.recommend}} / 10 (10 for most willing to recommend)\n                        </pre>\n                    </mat-card-content>\n                    </mat-card>\n                </div>\n            </mat-card-actions>\n        </mat-card>\n        <mat-paginator [length]=\"postList.length\" pageSize=\"5\" showFirstLastButtons=\"true\" hidePageSize=\"true\"\n            (page)=\"updatePostListShown($event)\"></mat-paginator>\n    </div>\n    <div class=\"right-panel\">\n        <app-data-collected></app-data-collected>\n    </div>\n</main>","import { Component, OnInit, Input } from '@angular/core';\nimport { SearchService } from '../../../services/search.service';\nimport { PostListService } from '../../../services/post-list.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { RefinementList } from '../../../refinementList';\nimport { Module } from '../../../module';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-main-board',\n  templateUrl: './main-board.component.html',\n  styleUrls: ['./main-board.component.css']\n})\nexport class MainBoardComponent implements OnInit {\n\n  public refinementList: RefinementList = new RefinementList([], [], [], []);\n\n  public selectorList: any = ['Faculty', 'Department', 'ModuleCredit', 'Level'];\n\n  public searchInput: string = '';\n\n  public prof: string = '';\n\n  public acadYear: string = '';\n\n  public filteredModuleList: Module[] = [];\n\n  public moduleListShown: Module[] = [];\n\n  public sortOption: string = 'moduleCode';\n\n  @Input('searchInput') searchInputFromFather: string;\n\n  constructor(public searchService: SearchService,\n    public route: Router,\n    public postListService: PostListService) { }\n\n  ngOnInit(): void {\n    if (this.searchInputFromFather) {\n      this.searchInput = this.searchInputFromFather;\n    }\n    this.search();\n  }\n\n  sortFilteredModuleList() {\n    this.filteredModuleList.sort(this.getSortMethod(this.sortOption));\n    this.moduleListShown = this.filteredModuleList.slice(0, 15);\n    this.updateNumOfReviews();\n  }\n\n  getSortMethod(key: string) {\n    if (key == 'moduleCredit') {\n      return (a: Module, b: Module) => {\n        return parseInt(a[key]) > parseInt(b[key]) ? 1 : -1;\n      }\n    } else {\n      return (a: Module, b: Module) => {\n        return a[key] > b[key] ? 1 : -1;\n      }\n    }\n  }\n\n  updateNumOfReviews() {\n    var arrOfCountRes = [];\n    this.moduleListShown.forEach((module: Module) => {\n      arrOfCountRes.push(this.postListService.countPostList(module.moduleCode));\n    })\n    forkJoin(arrOfCountRes).subscribe((listOfNumOfReviews: number[]) => {\n      this.moduleListShown.forEach((module: Module, index: number) => {\n        module.numOfReviews = listOfNumOfReviews[index];\n      })\n    })\n  }\n\n  goPostReviews(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/PostReview'], navigationExtras);\n  }\n\n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  updateRefinementList(refinementList: RefinementList) {\n    this.refinementList = refinementList;\n    this.search();\n  }\n\n  search() {\n    this.searchService.search(this.searchInput, this.refinementList).subscribe((searchResult: Module[]) => {\n      this.filteredModuleList = searchResult;\n      this.moduleListShown = this.filteredModuleList.slice(0, 15);\n      this.filteredModuleList.forEach((module: Module) => {\n        module.numOfReviews = 0;\n      })\n      this.updateNumOfReviews();\n      this.sortFilteredModuleList();\n    });\n  }\n\n  reverseFilteredModuleList() {\n    this.filteredModuleList = this.filteredModuleList.reverse()\n    this.moduleListShown = this.filteredModuleList.slice(0, 15);\n    this.updateNumOfReviews();\n  }\n\n  updateModuleListShown(event: any) {\n    var start = event.pageIndex * 15;\n    this.moduleListShown = this.filteredModuleList.slice(start, start + 15);\n  }\n}\n","<div class=\"main-board\">\n    <app-refinement-list (sendRefinementList)=\"updateRefinementList($event)\"></app-refinement-list>\n    <div class=\"header\">\n        <div class=\"search-box\">\n            <mat-icon>search</mat-icon>\n            <mat-form-field>\n                <mat-label>Module Code or Title</mat-label>\n                <input type=\"text\" class=\"mat-h3\" matInput [(ngModel)]=\"searchInput\" placeholder=\"CS2100\"\n                    (input)=\"search(); paginator.firstPage()\">\n                <button mat-button *ngIf=\"searchInput\" matSuffix mat-icon-button aria-label=\"Clear\"\n                    (click)=\"searchInput=''; search()\">\n                    <mat-icon>close</mat-icon>\n                </button>\n            </mat-form-field>\n        </div>\n\n    </div>\n    <mat-divider></mat-divider>\n\n\n    <div class=\"search-result\">\n        <div class=\"flex-container\">\n            <div class=\"number-of-modules-found\">\n                {{filteredModuleList.length}} Modules Found\n            </div>\n\n            <div class=\"sort-options\">\n                <mat-form-field>\n                    <mat-label>Sort by:</mat-label>\n                    <mat-select [(ngModel)]=\"sortOption\" name=\"sortOption\" (selectionChange)=\"sortFilteredModuleList()\">\n                        <mat-option value=\"moduleCode\">\n                            module code\n                        </mat-option>\n                        <mat-option value=\"title\">\n                            module title\n                        </mat-option>\n                        <mat-option value=\"moduleCredit\">\n                            module credit\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <button mat-icon-button (click)=\"reverseFilteredModuleList()\">\n                    <mat-icon matTooltip=\"reverse\">refresh</mat-icon>\n                </button>\n            </div>\n        </div>\n        <mat-card class=\"module-list\">\n            <div *ngFor=\"let module of moduleListShown; let key=index\" class=\"flex-container\">\n                <button mat-button class=\"module-btn\" (click)=\"goModule(module.moduleCode)\">\n                    <mat-icon>search</mat-icon>\n                    <span>{{module.moduleCode}} - {{module.title}}</span>\n                    <span class=\"mat-caption\">\n                        {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}\n                    </span>\n                </button>\n                <div class=\"review-action flex-container\">\n                    <span class=\"number-of-reviews\">{{module.numOfReviews}}</span>\n                    <button mat-icon-button class=\"add-btn\" (click)=\"goPostReviews(module.moduleCode)\"\n                        matTooltip=\"add reviews\">\n                        <mat-icon>add_circle</mat-icon>\n                    </button>\n                </div>\n            </div>\n            <div *ngIf=\"moduleListShown.length<15\" class=\"bottom\">\n                Already at the bottom!\n            </div>\n        </mat-card>\n        <mat-paginator [length]=\"filteredModuleList.length\" pageSize=\"15\" showFirstLastButtons=\"true\"\n            hidePageSize=\"true\" (page)=\"updateModuleListShown($event)\" #paginator></mat-paginator>\n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { RefinementListService } from '../../../services/refinement-list.service';\nimport { RefinementList } from 'src/app/refinementList';\n\n@Component({\n  selector: 'app-refinement-list',\n  templateUrl: './refinement-list.component.html',\n  styleUrls: ['./refinement-list.component.css']\n})\nexport class RefinementListComponent implements OnInit {\n\n  public refinementList: RefinementList = new RefinementList([], [], [], []);\n\n  public selectorList: any = ['Faculty', 'Department', 'ModuleCredit', 'Level'];\n\n  @Output() sendRefinementList = new EventEmitter();\n\n  constructor(public refinementListService: RefinementListService) { }\n\n  ngOnInit(): void {\n    this.refinementListService.getRefinementList().subscribe((refinementList: RefinementList) => {\n      this.refinementList = refinementList;\n      this.sendRefinementList.emit(this.refinementList);\n    });\n  }\n\n  deleteRefinement(selector: string, refinement: string) {\n    this.refinementListService.deleteRefinement(selector, refinement);\n  }\n}\n","<div class=\"refinement-list\" *ngIf=\"!refinementList.isEmpty()\">\n    <div *ngFor=\"let selector of selectorList\" class=\"refinement-container\">\n        <span *ngIf=\"refinementList[selector].length>0\">\n            <span class=\"mat-h3\">{{selector}}: </span>\n            <button mat-button (click)=\"deleteRefinement(selector, refinement)\"\n                *ngFor=\"let refinement of refinementList[selector]\">\n                {{refinement}}\n                <mat-icon>cancel</mat-icon>\n            </button>\n        </span>\n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { RefinementListService } from '../../../services/refinement-list.service';\n\n@Component({\n  selector: 'app-refinement-table',\n  templateUrl: './refinement-table.component.html',\n  styleUrls: ['./refinement-table.component.css']\n})\nexport class RefinementTableComponent implements OnInit {\n\n  public selectorList: string[] = ['Faculty', 'Department', 'ModuleCredit', 'Level'];\n\n  public facultyList: any = {\n    'A':['Arts and Social Science'],\n    'C':['Computing', 'Cont and Lifelong Education'],\n    'D':['Dentistry', 'Design and Environment', 'Duke-NUS Medical School'],\n    'E':['Engineering'],\n    'I':['Institute of Systems Science'],\n    'L':['LKY School of Public Policy',\n    'Logistics Inst-Asia Pac'],\n    'M':['Multi Disciplinary Programme'],\n    'N':['NUS',\n    'NUS Business School',\n    'NUS Graduate Sch for Int Science and Engineering'],\n    'R':['Residential College',\n    'Risk Management Institute',],\n    'S':['Science',\n    'SSH School of Public Health',],\n    'T':['Temasek Defence Sys. Institute',],\n    'U':['University Scholars Programme',],\n    'Y':['Yale-NUS College',\n    'Yong Loo Lin Sch of Medicine',\n    'YST Conservatory of Music']\n  }\n\n  public more: any = {\n    Faculty: false,\n    Department: false\n  }\n\n  public conditionList: any = {\n    'Department': [\n      'Accounting',\n      'Architecture',\n      'Chemistry',\n      'Civil and Environmental Engineering',\n      'Computer Science',\n      'Mathematics',\n      'Mechanical Engineering',\n      'Pharmacy',\n    ],\n    'Faculty': [\n      'Arts and Social Science',\n      'NUS Business School',\n      'Computing',\n      'Dentistry',\n      'Engineering',\n      'Law',\n      'Science',\n    ],\n    'ModuleCredit': [\n      '0-3 MC', '4 MC', '5-8 MC', 'More than 8 MC'\n    ],\n    'Level': [\n      '1000', '2000', '3000', '4000', '5000', '6000'\n    ]\n  };\n\n\n  public initialList: any = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', \n    'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\n  public departmentList: any = {\n    'A':\n      ['Accounting',\n        'Alice Lee Center for Nursing Studies',\n        'Analytics and Operations',\n        'Anatomy',\n        'Architecture',],\n    'B':\n      ['Biochemistry',\n        'Biological Sciences',\n        'Biomedical Engineering',\n        'BIZ Dean\\'s Office',\n        'Building'],\n    'C':\n      ['Center for Engl Lang Comms',\n        'Center for Quantum Technologies',\n        'Centre for Language Studies',\n        'Chemical and Biomolecular Engineering',\n        'Chemistry',\n        'Chinese Studies',\n        'Chua Thian Poh Comm Leader Center',\n        'Civil & Environmental Engineering',\n        'College of Alice and Peter Tan',\n        'Communications and New Media',\n        'Computer Science',\n        'Computing and Engineering Programme',],\n    'D':\n      ['Division of Graduate Dental Studies',\n        'Division of Graduate Medical Studies',\n        'Duke-NUS Dean\\'s Office'],\n    'E':\n      ['Economics',\n        'Electrical and Computer Engineering',\n        'Engineering Science Programme',\n        'English Language and Literature',],\n    'F':\n    [\n    'FASS Dean\\'s Office/Office of Programmes',\n        'Finance',\n        'FoD Dean\\'s Office',\n        'FoE Dean\\'s Office',\n        'FoL Dean\\'s Office',\n        'Food Science and Technology',\n        'FoS Dean\\'s Office',\n      ],\n    'G':\n      ['Geography'],\n    'H':\n      [\n        'History',],\n    'I':\n        ['Industrial Design',\n        'Industrial Systems Engineering and Management',\n        'Information Systems and Analytics',\n        'Institute of Systems Science'],\n    'J':\n      ['Japanese Studies'],\n    'L':\n      ['LKYSPP Dean\\'s Office',\n        'Logistics Inst - Asia Pac'],\n    'M':\n      ['Malay Studies',\n        'Management and Organisation',\n        'Marketing',\n        'Materials Science and Engineering',\n        'Mathematics',\n        'Mechanical Engineering',\n        'Mechanobiology Institute (MBI)',\n        'Microbiology and Immunology'],\n    'N':\n      ['NGS Dean\\'s Office',\n        'NUS Entrepreneurship Centre',\n        'NUS Medicine Dean\\'s Office'],\n    'O':\n      ['Office of Sr Dy Pres and Provost'],\n    'P':\n      ['Pathology',\n        'Pharmacology',\n        'Pharmacy',\n        'Philosophy',\n        'Physics',\n        'Physiology',\n        'Political Science',\n        'Psychology'],\n    'R':\n      ['Real Estate',\n        'Residential College 4',\n        'Risk Management Institute'],\n    'S':\n        ['SCALE Dean\\'s Office',\n        'SDE Dean\\'s Office',\n        'SoC Dean\\'s Office',\n        'Social Work',\n        'Sociology',\n        'South Asian Studies',\n        'Southeast Asian Studies',\n        'SSH School of Public Health Dean\\'s Office',\n        'Statistics and Applied Probability',\n        'Strategy and Policy'],\n    'T':\n      [\n        'Temasek Defence Systems Inst',\n        'Tembusu College'\n      ],\n    'U':\n        ['University Scholars Programme'],\n    'Y':\n      ['Yale-NUS College',\n    'YSTCM Dean\\'s Office'],\n  }\n\n  public fullList: any = {\n    Faculty: this.facultyList,\n    Department: this.departmentList\n  }\n\n\n  @Output() sendMore = new EventEmitter<string>();\n  @Output() sendCloseDrawer = new EventEmitter();\n\n  constructor(public refinementListService: RefinementListService) { }\n\n  ngOnInit(): void {\n  }\n\n  addRefinement(selector: string, refinement: string) {\n    this.refinementListService.addRefinement(selector, refinement);\n  }\n\n  showMore(selector: string) {\n    this.more[selector] = true; \n    this.sendMore.emit(this.more);\n  }\n\n  showLess(selector: string) {\n    this.more[selector] = false; \n    this.sendMore.emit(this.more);\n  }\n\n  closeDrawer() {\n    this.sendCloseDrawer.emit();\n    this.resetMore();\n  }\n\n  resetMore() {\n    this.more = {\n      'Department': false,\n      'Faculty': false\n    }\n    this.sendMore.emit(this.more);\n  }\n}\n","<div class=\"flex-container\">\n    <div>\n        <div class=\"selector-container\" *ngFor=\"let selector of selectorList; let key=index\">\n            <span class=\"mat-h1\">{{selector}}</span>\n            <div *ngIf=\"!more[selector]\">\n                <button mat-button (click)=\"addRefinement(selector, condition)\" *ngFor=\"let condition of conditionList[selector]\">\n                    {{condition}}\n                </button>\n            </div>\n            <div *ngIf=\"more[selector]\">\n                <div *ngFor=\"let initial of initialList\">\n                    <span *ngIf=\"fullList[selector][initial]\">\n                        <div class=\"mat-h3\"> {{initial}} </div>\n                        <div>\n                            <button (click)=\"addRefinement(selector, refinement)\" *ngFor=\"let refinement of fullList[selector][initial]\"\n                                mat-button>\n                                {{refinement}}\n                            </button>\n                        </div>\n                    </span>\n                </div>\n            </div>\n            <div class=\"more-btn\" *ngIf=\"selector=='Faculty' || selector=='Department'\">\n                <button mat-button color=\"primary\" *ngIf=\"!more[selector]\" (click)=\"showMore(selector)\">\n                    More</button>\n                <button mat-button color=\"primary\" *ngIf=\"more[selector]\" (click)=\"showLess(selector)\">Less</button>\n            </div>\n\n            <mat-divider *ngIf=\"key!=selectorList.length - 1\"></mat-divider>\n        </div>\n    </div>\n    <div class=\"btn-container\">\n        <button mat-button class=\"back-btn\" (click)=\"closeDrawer()\">\n            <mat-icon>arrow_back_ios</mat-icon>\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  public widthOfDrawer: string = '40%';\n  public widthOfMain: string = '100%';\n\n  public hasBackdrop: boolean = false;\n\n  public status: any = {\n    opened: false,\n    more: {\n      'Faculty': false,\n      'Department': false\n    }\n  }\n\n  public searchInput: string = '';\n\n  constructor(public route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(data => {\n      if (data) {\n        this.searchInput = data.searchInput;\n      }\n    })\n  }\n\n  updateOpened() {\n    this.status.opened = !this.status.opened;\n    this.updateWidthOfMain();\n  }\n\n\n  updateMore(more: any) {\n    this.status.more = more;\n    this.updateWidthOfDrawer(more);\n  }\n\n  updateWidthOfDrawer(more: any) {\n    if (more['Department']) {\n      this.widthOfDrawer = '70%';\n      this.hasBackdrop = true;\n    } else {\n      this.widthOfDrawer = '40%';\n      this.hasBackdrop = false;\n    }\n  }\n\n  updateWidthOfMain() {\n    if (this.status.opened) {\n      this.widthOfMain = '60%';\n    } else {\n      this.widthOfMain = '100%';\n    }\n  }\n}\n","<mat-drawer-container [hasBackdrop]=\"hasBackdrop\">\n    <mat-drawer #drawer mode=\"push\" [style.width]=\"widthOfDrawer\" (openedChange)=\"updateOpened()\">\n        <app-refinement-table #RefinementTable (sendMore)=\"updateMore($event)\" (sendCloseDrawer)=\"drawer.toggle()\">\n        </app-refinement-table>\n    </mat-drawer>\n    <main [style.width]=\"widthOfMain\">\n        <button mat-button class=\"forward-btn\" (click)=\"drawer.toggle()\" *ngIf=\"!drawer.opened\">\n            <mat-icon>arrow_forward_ios</mat-icon>\n        </button>\n        <div>\n            <app-main-board [searchInput]=\"searchInput\"></app-main-board>\n        </div>\n    </main>\n</mat-drawer-container>","import { Component, OnInit } from '@angular/core';\nimport { Module } from 'src/app/module';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from \"@angular/common/http\";\nimport { SearchService } from \"../../../services/search.service\";\n\n@Component({\n  selector: 'app-module-description',\n  templateUrl: './module-description.component.html',\n  styleUrls: ['./module-description.component.css']\n})\nexport class ModuleDescriptionComponent implements OnInit {\n\n  public module: Module = new Module('', '', '', '', '', '', 0);\n\n  public description: string = '';\n\n  constructor(public activatedRoute: ActivatedRoute, \n    public http: HttpClient,\n    public searchService: SearchService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n      this.searchService.getModule(data.moduleCode).subscribe((module: Module) => {\n        this.module = module;\n        this.description = this.module.description;\n        document.getElementsByTagName('a')[0].\n        setAttribute('href', 'https://nusmods.com/modules/' + this.module.moduleCode + '/' + this.module.title)\n      })\n    })\n  }\n\n}\n","<mat-card>\n    <div class=\"mat-body\">\n        {{description}}\n    </div>\n</mat-card>\n<div class=\"mat-caption\">For more official information, please go to <a class=\"https://nusmods.com/modules?sem[0]=1&sem[1]=2&sem[2]=3&sem[3]=4\">NUSMods</a>.</div>","import { Component, OnInit } from '@angular/core';\nimport { Module } from 'src/app/module';\nimport { ActivatedRoute } from '@angular/router';\nimport { Answer } from 'src/app/answer';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { QuestionListService } from \"../../../services/question-list.service\";\nimport { Question } from 'src/app/Question';\n\n@Component({\n  selector: 'app-question-list',\n  templateUrl: './question-list.component.html',\n  styleUrls: ['./question-list.component.css']\n})\nexport class QuestionListComponent implements OnInit {\n\n  public moduleCode: string = '';\n\n  public questionList: Question[] = [];\n\n  public questionListShown: Question[] = [];\n\n  public questionEntered: string = '';\n\n  public answerEntered: string = '';\n\n  public ifPostAnAnswer: boolean[] = [];\n\n  public ifAskAQuestion: boolean = false;\n\n  public userName: string = 'Anonymous';\n\n  constructor(public activatedRoute: ActivatedRoute, \n    public http: HttpClient,\n    public questionListService: QuestionListService) { }\n\n  ngOnInit(): void {\n    this.ifPostAnAnswer = this.questionList.map((question: Question) => false);\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n      this.moduleCode = data.moduleCode;\n      this.updateQuestionList();\n    })\n  }\n\n  updateQuestionList() {\n    this.questionListService.getQuestionListOfModule(this.moduleCode).subscribe((quesitonList: Question[]) => {\n      this.questionList = quesitonList;\n      this.questionListShown = this.questionList.slice(0, 3);\n    })\n  }\n\n  showQuestionForm() {\n    this.ifAskAQuestion = true;\n  }\n\n  showAnswerForm(key: number) {\n    this.ifPostAnAnswer[key] = true;\n  }\n\n  updateQuestionListShown(event: any) {\n    var start = 3 * event.pageIndex;\n    this.questionListShown = this.questionList.slice(start, start + 3);\n  }\n\n  onSubmitAnAnswer(question: Question, key:number) {\n    var ans = new Answer(this.answerEntered, new Date().toLocaleDateString(), new Date().toLocaleTimeString().slice(0, 8), question.id);\n    question.answerList.push(ans);\n    var httpOptions = {\n      headers: new HttpHeaders({'Content-Type': 'application/json'})\n    };\n    this.http.post('/answers', ans, httpOptions).subscribe((answer: Answer) => {\n      this.resetAnswerForm(key);\n    });\n  }\n\n  onSubmitAQuestion() {\n    this.questionListService.countNumOfQuestions().subscribe((numOfQuesitons: number) => {\n      var question = new Question(\n        this.questionEntered, \n        new Date().toLocaleDateString(),\n        new Date().toLocaleTimeString().slice(0, 8),\n        this.moduleCode,\n        numOfQuesitons\n      );\n      this.questionListService.addQuestion(question).subscribe((question: Question) => {\n        this.updateQuestionList();\n        this.ifPostAnAnswer.unshift(false);\n        this.resetQuestionForm();\n      });\n    })\n  }\n\n  resetAnswerForm(key:number) {\n    this.ifPostAnAnswer[key] = false;\n    this.answerEntered = '';\n  }\n\n  resetQuestionForm() {\n    this.ifAskAQuestion = false;\n    this.questionEntered = '';\n  }\n}\n","<div class=\"subheader\">\n    <div class=\"mat-body\">\n        number of questions: {{questionList.length}}\n    </div>\n    <div class=\"add-questions-btn\">\n        <button mat-icon-button (click)=\"showQuestionForm()\" matTooltip=\"ask a question\">\n            <mat-icon>add_circle</mat-icon>\n        </button>\n    </div>\n</div>\n\n<div class=\"form\" *ngIf=\"ifAskAQuestion\">\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Clearly state your question and keep it short.</mat-label>\n        <input type=\"text\" matInput [(ngModel)]=\"questionEntered\" name=\"questionEntered\" minlength=\"3\" required>\n    </mat-form-field>\n    <div class=\"form-actions\">\n        <button mat-raised-button (click)=\"resetQuestionForm()\" color=\"warn\">cancel</button>\n        <button mat-raised-button (click)=\"onSubmitAQuestion(); paginator.firstPage()\" color=\"primary\">submit</button>\n    </div>\n</div>\n\n<mat-card class=\"no-questions-yet mat-h1\" *ngIf=\"questionList.length==0\">\n    <mat-card-content>\n        <span class=\"mat-h3\">No questions yet!</span>\n        <mat-icon class=\"no-questions-icon\">sentiment_very_dissatisfied</mat-icon>\n    </mat-card-content>\n</mat-card>\n\n<mat-card class=\"question-container\" *ngFor=\"let question of questionListShown; let key=index\">\n    <mat-card-title>\n        <mat-icon>question_answer</mat-icon>\n        {{question.content}}\n    </mat-card-title>\n\n    <mat-card-subtitle>\n        {{question.date}} - {{question.time}} by {{userName}}\n    </mat-card-subtitle>\n\n    <mat-card-content>\n        <div class=\"no-answers-yet mat-h1\" *ngIf=\"question.answerList.length==0\">\n            <mat-card-content>\n                <span class=\"mat-h3\">No answers yet!</span>\n                <mat-icon class=\"no-answers-icon\">sentiment_very_dissatisfied</mat-icon>\n            </mat-card-content>\n        </div>\n\n        <ol>\n            <li class=\"answer-container\" *ngFor=\"let answer of question.answerList\">\n                {{answer.content}}\n                <div class=\"answer-caption mat-caption\">\n                    {{answer.date}} - {{answer.time}} by {{userName}}\n                </div>\n            </li>\n        </ol>\n\n        <div class=\"form\" *ngIf=\"ifPostAnAnswer[key]\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Clearly state your answer.</mat-label>\n                <input type=\"text\" \n                    matInput \n                    [(ngModel)]=\"answerEntered\" \n                    name=\"answerEntered\" \n                    minlength=\"3\" \n                    required>\n            </mat-form-field>\n\n            <div class=\"form-actions\">\n                <button mat-raised-button (click)=\"resetAnswerForm(key)\" color=\"warn\">cancel</button>\n                <button mat-raised-button (click)=\"onSubmitAnAnswer(question, key)\" color=\"primary\">submit</button>\n            </div>\n        </div>\n    </mat-card-content>\n\n    <mat-card-actions *ngIf=\"!ifPostAnAnswer[key]\">\n        <button mat-raised-button color=\"primary\" (click)=\"showAnswerForm(key)\" matTooltip=\"post an answer\">I have an\n            answer!</button>\n    </mat-card-actions>\n\n</mat-card>\n\n<mat-paginator [length]=\"questionList.length\" pageSize=\"3\" showFirstLastButtons=\"true\" hidePageSize=\"true\"\n    (page)=\"updateQuestionListShown($event)\" #paginator></mat-paginator>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { Module } from '../../../module';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { SearchService } from \"../../../services/search.service\";\nimport { PostListService } from \"../../../services/post-list.service\";\n\n@Component({\n  selector: 'app-review-list',\n  templateUrl: './review-list.component.html',\n  styleUrls: ['./review-list.component.css']\n})\nexport class ReviewListComponent implements OnInit {\n\n  public module: Module = new Module('', '', '', '', '', '', 0);\n\n  public reviewList: ReviewPost[] = [];\n\n  public reviewListShown: ReviewPost[] = [];\n\n  public userName: string = 'Anonymous';\n\n  public postListLike: number[] = [];\n\n  public postListDislike: number[] = [];\n\n  constructor(public route: Router,\n    public activatedRoute: ActivatedRoute,\n    public searchService: SearchService,\n    public postListService: PostListService) { }\n\n  ngOnInit(): void {\n    this.updatePostListLikeAndDislike();\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n      this.searchService.getModule(data.moduleCode).subscribe((module: Module) => {\n        this.module = module;\n      })\n\n      this.postListService.getPostListOfModule(data.moduleCode).subscribe((reviewList: ReviewPost[]) => {\n        this.reviewList = reviewList.reverse();\n        this.reviewListShown = this.reviewList.slice(0, 5);\n      })\n    })\n  }\n\n  addReviews() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.route.navigate(['/PostReview'], navigationExtras);\n  }\n\n  updateReviewListShown(event: any) {\n    var start = event.pageIndex * 5;\n    this.reviewListShown = this.reviewList.slice(start, start + 5);\n  }\n\n  updatePostListLikeAndDislike() {\n    this.postListLike = this.postListService.getPostListLike();\n    this.postListDislike = this.postListService.getPostListDislike();\n  }\n\n  onClickLikePost(post: ReviewPost) {\n    var postId = post.id;\n    if (this.postListDislike.includes(postId)) {\n      post.numOfDislikes--;\n      post.numOfLikes++;\n      this.postListService.cancelDislikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.likePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n          \n        });\n      });\n    } else if (!this.postListLike.includes(postId)) {\n      post.numOfLikes++;\n      this.postListService.likePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfLikes--;\n      this.postListService.cancelLikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onClickDislikePost(post: ReviewPost) {\n    var postId = post.id;\n    if (this.postListLike.includes(postId)) {\n      post.numOfLikes--;\n      post.numOfDislikes++;\n      this.postListService.cancelLikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListDislike.includes(postId)) {\n      post.numOfDislikes++;\n      this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfDislikes--;\n      this.postListService.cancelDislikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onClickSharePost(post: ReviewPost) {\n    var postId = post.id;\n    post.numOfShares++;\n    this.postListService.sharePost(postId).subscribe((post_1: ReviewPost) => {\n    });\n  } \n\n  ifLike(postId: number) {\n    return this.postListLike.includes(postId);\n  }\n\n  ifDislike(postId: number) {\n    return this.postListDislike.includes(postId);\n  }\n}\n","<div class=\"subheader\">\n    <div class=\"mat-body\">\n        number of reviews: {{reviewList.length}}\n    </div>\n    <div class=\"add-reviews-btn\">\n        <button mat-icon-button (click)=\"addReviews()\" matTooltip=\"add reviews\">\n            <mat-icon>add_circle</mat-icon>\n        </button>\n    </div>\n</div>\n<mat-card class=\"no-reviews-yet mat-h1\" *ngIf=\"reviewList.length==0\">\n    <mat-card-content>\n        <span class=\"mat-h3\">No reviews yet!</span>\n        <mat-icon class=\"no-reviews-icon\">sentiment_very_dissatisfied</mat-icon>\n    </mat-card-content>\n</mat-card>\n<mat-card *ngFor=\"let review of reviewListShown\" class=\"review-container\">\n    <mat-card-header>\n        <div mat-card-avatar class=\"header-image\"></div>\n        <mat-card-title>\n            <span class=\"user-name\">\n                {{userName}}\n                <span class=\"mat-caption\">Under Prof {{review.moduleInfo.prof}}, {{review.moduleInfo.acadYear}} / {{review.moduleInfo.semester}}</span>\n            </span>\n        </mat-card-title>\n        <mat-card-subtitle>\n            {{review.date}} - {{review.time}}\n        </mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-divider></mat-divider>\n\n    <mat-card-content>\n        <div class=\"review\">\n            <pre class=\"mat-body\">\n                {{review.reviewAndRatings.review}}\n            </pre>\n        </div>\n        <div class=\"extra-info mat-caption\">\n            Expected Grade: {{review.extraInfo.gradeExpected}}\n        </div>\n\n        <div class=\"extra-info mat-caption\">\n            Grade Obtained: {{review.extraInfo.gradeObtained}}\n        </div>\n\n    </mat-card-content>\n    <mat-divider></mat-divider>\n\n    <mat-card-actions>\n        <div class=\"flex-container ratings\">\n            <div matTooltip=\"10 for most satisfied\">\n                general: {{review.reviewAndRatings.general}} / 10\n                <div class=\"icon\">\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general<3\">sentiment_very_dissatisfied\n                    </mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general>2&&review.reviewAndRatings.general<5\">\n                        sentiment_dissatisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general>4&&review.reviewAndRatings.general<7\">\n                        sentiment_satisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general>6&&review.reviewAndRatings.general<9\">\n                        sentiment_satisfied_alt</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n                </div>\n            </div>\n            <div matTooltip=\"10 for most difficult\">\n                difficulty: {{review.reviewAndRatings.difficulty}} / 10\n                <div class=\"icon\">\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied\n                    </mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>6&&review.reviewAndRatings.difficulty<9\">\n                        sentiment_dissatisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>4&&review.reviewAndRatings.difficulty<7\">\n                        sentiment_satisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>2&&review.reviewAndRatings.difficulty<5\">\n                        sentiment_satisfied_alt</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty<3\">sentiment_very_satisfied\n                    </mat-icon>\n                </div>\n            </div>\n            <div matTooltip=\"10 for heaviest workload\">\n                workload: {{review.reviewAndRatings.workload}} / 10\n                <div class=\"icon\">\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload>8\">sentiment_very_dissatisfied\n                    </mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload>6&&review.reviewAndRatings.workload<9\">\n                        sentiment_dissatisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload>4&&review.reviewAndRatings.workload<7\">\n                        sentiment_satisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload>2&&review.reviewAndRatings.workload<5\">\n                        sentiment_satisfied_alt</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n                </div>\n            </div>\n            <div matTooltip=\"10 for most willing to recommend\">\n                recommend: {{review.reviewAndRatings.recommend}} / 10\n                <div class=\"icon\">\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend<3\">sentiment_very_dissatisfied\n                    </mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend>2&&review.reviewAndRatings.recommend<5\">\n                        sentiment_dissatisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend>4&&review.reviewAndRatings.recommend<7\">\n                        sentiment_satisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend>6&&review.reviewAndRatings.recommend<9\">\n                        sentiment_satisfied_alt</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend>8\">sentiment_very_satisfied\n                    </mat-icon>\n                </div>\n            </div>\n        </div>\n        <div class=\"btns\">\n            <button mat-icon-button matTooltip=\"like\" (click)=\"onClickLikePost(review)\">\n                <mat-icon [ngClass]=\"{'pink-color': ifLike(review.id)}\">thumb_up</mat-icon>\n                {{review.numOfLikes}}\n            </button>\n            <button mat-icon-button matTooltip=\"dislike\" (click)=\"onClickDislikePost(review)\">\n                <mat-icon [ngClass]=\"{'pink-color': ifDislike(review.id)}\">thumb_down</mat-icon>\n                {{review.numOfDislikes}}\n            </button>\n            <button mat-icon-button matTooltip=\"share\" (click)=\"onClickSharePost(review)\">\n                <mat-icon>share</mat-icon>\n                {{review.numOfShares}}\n            </button>\n        </div>\n    </mat-card-actions>\n\n</mat-card>\n<mat-paginator [length]=\"reviewList.length\" pageSize=\"5\" showFirstLastButtons=\"true\" hidePageSize=\"true\"\n    (page)=\"updateReviewListShown($event)\"></mat-paginator>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { SearchService } from '../../services/search.service';\nimport { MyModulesService } from '../../services/my-modules.service';\nimport { ModuleListService } from '../../services/module-list.service';\nimport { Module } from 'src/app/module';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ReviewPost } from \"../../reviewPost\";\nimport { PostListService } from '../../services/post-list.service';\nimport { AverageRatingsService } from '../../services/average-ratings.service';\n\n@Component({\n  selector: 'app-module',\n  templateUrl: './module.component.html',\n  styleUrls: ['./module.component.css']\n})\nexport class ModuleComponent implements OnInit {\n\n  public module: Module = new Module('', '', '', '', '', '', 0);\n\n  public reviewListShown: ReviewPost[] = [];\n\n  public reviewList: ReviewPost[] = [];\n\n  public userName: string = 'Anonymous';\n\n  public activeBtn: string = 'Reviews';\n\n  public averageRatings: any = {\n    averageGeneral: 0,\n    averageDifficulty: 0,\n    averageWorkload: 0,\n    averageRecommend: 0,\n  };\n\n  public moreModuleList: Module[] = [];\n\n  constructor(public route: Router, \n    public activatedRoute: ActivatedRoute, \n    public searchService: SearchService,\n    public myModuleService: MyModulesService,\n    public moduleListService: ModuleListService,\n    private snackBar: MatSnackBar,\n    public postListService: PostListService,\n    public averageRatingsService: AverageRatingsService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n\n      this.searchService.getModule(data.moduleCode).subscribe((module: Module) => {\n        this.module = module;\n        this.postListService.countPostList(module.moduleCode).subscribe((numOfReviews:number) => {\n          this.module.numOfReviews = numOfReviews;\n        })\n      });\n\n      this.postListService.getPostListOfModule(data.moduleCode).subscribe((postList: ReviewPost[]) => {\n        this.reviewList = postList;\n        this.averageRatings = this.averageRatingsService.getAverageRatingsByReviewList(this.reviewList);\n        this.reviewListShown = this.reviewList.slice(0, 5);\n      });\n\n      this.searchService.getMoreModuleList(data.moduleCode).subscribe((moreModuleList: Module[]) => {\n        this.moreModuleList = moreModuleList;\n      })\n    })\n  }\n\n  addToMyModules() {\n    this.myModuleService.addModule(this.module);\n    this.snackBar.open('Successfully added to my modules!', 'Close', {\n      verticalPosition: 'top',\n      duration: 1000\n    });\n  }\n\n  addReviews() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.route.navigate(['/PostReview'], navigationExtras);\n  }\n\n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  updateReviewListShown(event: any) {\n    var start = event.pageIndex * 5;\n    this.reviewListShown = this.reviewList.slice(start, start + 5);\n  }\n\n  loadReviewList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.activeBtn = 'Reviews';\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  loadDescription() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.activeBtn = 'Description';\n    this.route.navigate(['/Module/Description'], navigationExtras);\n  }\n\n  loadQuestionList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.activeBtn = 'Questions';\n    this.route.navigate(['/Module/QuestionList'], navigationExtras);\n  }\n\n  isReviewsActive() {\n    return location.pathname.includes('ReviewList');\n  }\n\n  isQuestionsActive() {\n    return location.pathname.includes('QuestionList');\n  }\n\n  isDescriptionActive() {\n    return location.pathname.includes('Description');\n  }\n\n}\n","<main>\n    <div class=\"left-panel\">\n        <div class=\"mat-display-1\">{{module.moduleCode}} - {{module.title}}\n            <button mat-icon-button (click)=\"addToMyModules()\" matTooltip=\"add to my modules\">\n                <mat-icon>add_box</mat-icon>\n            </button>\n        </div>\n        <mat-divider></mat-divider>\n\n        <div class=\"flex-container\">\n            <button mat-button (click)=\"loadReviewList()\" [ngClass]=\"{'navigation-btn': 'true', 'active-btn': isReviewsActive()}\">Reviews</button>\n            <button mat-button (click)=\"loadQuestionList()\" [ngClass]=\"{'navigation-btn': 'true', 'active-btn': isQuestionsActive()}\">Questions</button>\n            <button mat-button (click)=\"loadDescription()\" [ngClass]=\"{'navigation-btn': 'true', 'active-btn': isDescriptionActive()}\">Description</button>\n        </div>\n        <mat-divider></mat-divider>\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"right-panel\">\n        <mat-card>\n            <mat-card-title>\n                Average Ratings:\n            </mat-card-title>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-content>\n                <div class=\"flex-container\">\n                    <div class=\"average-rating\" matTooltip=\"10 for most satisfied\">\n                        general: {{averageRatings.averageGeneral}} / 10\n                    </div>\n                    <div class=\"average-rating\" matTooltip=\"10 for most difficult\">\n                        difficulty: {{averageRatings.averageDifficulty}} / 10\n                    </div>\n                </div>\n                <div class=\"flex-container\">\n                    <div class=\"average-rating\" matTooltip=\"10 for heaviest workload\">\n                        workload: {{averageRatings.averageWorkload}} / 10\n                    </div>\n                    <div class=\"average-rating\" matTooltip=\"10 for most willing to recommend\">\n                        recommend: {{averageRatings.averageRecommend}} / 10\n                    </div>\n                </div>\n                <div class=\"mat-hint\">\n                    number of reviews: {{module.numOfReviews}}\n                </div>\n            </mat-card-content>\n        </mat-card>\n\n        <mat-card>\n            <mat-card-title>\n                To see more:\n            </mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content class=\"more-module-list-container\">\n                <div *ngFor=\"let module of moreModuleList\">\n                    <mat-option class=\"more-module-option\" (click)=\"goModule(module.moduleCode)\" [matTooltip]=\"module.title\">\n                        <div class=\"module-title\">{{module.moduleCode}} - {{module.title}}</div>\n                        <div class=\"module-info\">\n                            {{module.faculty}} - {{module.department}} - {{module.moduleCredit}} MCs\n                        </div>\n                    </mat-option>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { MyModulesService } from '../../services/my-modules.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Module } from 'src/app/module';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { PostListService } from \"../../services/post-list.service\";\nimport { AverageRatingsService } from \"../../services/average-ratings.service\";\nimport { AverageRatings } from 'src/app/averageRatings';\n\n@Component({\n  selector: 'app-my-modules',\n  templateUrl: './my-modules.component.html',\n  styleUrls: ['./my-modules.component.css']\n})\nexport class MyModulesComponent implements OnInit {\n\n  public myModuleList: Module[] = [];\n\n  public listOfAverageRatings: any[] = [];\n\n  public listOfNumOfReviews: number[] = [];\n\n  constructor(public myModulesService: MyModulesService,\n    public route: Router,\n    private snackBar: MatSnackBar,\n    public postListService: PostListService,\n    public averageRatingsService: AverageRatingsService) { }\n\n  ngOnInit(): void {\n    this.myModuleList = this.myModulesService.getMyModuleList();\n    this.myModuleList.forEach((module: Module) => {\n      this.listOfNumOfReviews.push(0);\n      this.listOfAverageRatings.push(AverageRatings.emptyAverageRatings);\n    })\n    this.myModuleList.forEach((module: Module, index: number) => {\n      this.postListService.countPostList(module.moduleCode).subscribe((numOfReviews: number) => {\n        this.listOfNumOfReviews[index] = numOfReviews;\n      })\n    })\n    this.myModuleList.forEach((module: Module, index: number) => {\n      this.averageRatingsService.getAverageRatingsByModuleCode(module.moduleCode).subscribe((averageRatings: any) => {\n        this.listOfAverageRatings[index] = averageRatings;\n      })\n    })\n  }\n\n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  deleteModule(moduleCode: string) {\n    this.myModulesService.deleteModule(moduleCode);\n    this.myModuleList = this.myModulesService.getMyModuleList();\n    this.snackBar.open('Successfully deleted from my modules!', 'Close', {\n      verticalPosition: 'top',\n      duration: 1000\n    });\n  }\n\n  goModuleList() {\n    this.route.navigate(['ModuleList']);\n  }\n\n}\n","<main>\n    <mat-card *ngFor=\"let module of myModuleList; let key=index\">\n        <mat-card-title>\n            {{module.moduleCode}} - {{module.title}}\n        </mat-card-title>\n\n        <mat-card-subtitle>\n            {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}\n        </mat-card-subtitle>\n\n        <mat-card-content>\n            Average Ratings:\n            <div class=\"average-ratings-container\">\n                <div class=\"average-rating\" matTooltip=\"10 for most satisfied\">\n                    general: {{listOfAverageRatings[key].averageGeneral}} / 10\n                </div>\n                <div class=\"average-rating\" matTooltip=\"10 for most difficult\">\n                    difficulty: {{listOfAverageRatings[key].averageDifficulty}} / 10\n                </div>\n            </div>\n            <div class=\"average-ratings-container\">\n                <div class=\"average-rating\" matTooltip=\"10 for heaviest workload\">\n                    workload: {{listOfAverageRatings[key].averageWorkload}} / 10\n                </div>\n                <div class=\"average-rating\" matTooltip=\"10 for most willing to recommend\">\n                    recommend: {{listOfAverageRatings[key].averageRecommend}} / 10\n                </div>\n            </div>\n\n            <div class=\"mat-caption\">\n                number of reviews: {{listOfNumOfReviews[key]}}\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions>\n            <button mat-icon-button (click)=\"goModule(module.moduleCode)\">\n                <mat-icon matTooltip=\"view\">search</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)=\"deleteModule(module.moduleCode)\">\n                <mat-icon matTooltip=\"delete\">cancel</mat-icon>\n            </button>\n        </mat-card-actions>\n\n    </mat-card>\n\n    <mat-card class=\"no-modules-added-yet\" *ngIf=\"myModuleList.length==0\">\n        <mat-card-content>\n            <span class=\"mat-h1\">No modules added yet!</span>\n            <mat-icon>sentiment_very_dissatisfied</mat-icon>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button (click)=goModuleList() color=\"primary\">\n                Go to add my modules\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { ExtraInfo } from 'src/app/extraInfo';\n\n@Component({\n  selector: 'app-extra-info',\n  templateUrl: './extra-info.component.html',\n  styleUrls: ['./extra-info.component.css']\n})\nexport class ExtraInfoComponent implements OnInit {\n\n  public extraInfo: ExtraInfo = new ExtraInfo('', '');\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div class=\"mat-h1\">Extra Info:</div>\n    <div class=\"mat-hint\">(All your information will remain anonymous)</div>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Grade expected</mat-label>\n        <mat-select [(ngModel)]=\"extraInfo.gradeExpected\">\n            <mat-option value=\"A+\">A+</mat-option>\n            <mat-option value=\"A\">A</mat-option>\n            <mat-option value=\"A-\">A-</mat-option>\n            <mat-option value=\"B+\">B+</mat-option>\n            <mat-option value=\"B\">B</mat-option>\n            <mat-option value=\"B-\">B-</mat-option>\n            <mat-option value=\"C+\">C+</mat-option>\n            <mat-option value=\"C\">C</mat-option>\n            <mat-option value=\"C-\">C-</mat-option>\n            <mat-option value=\"F\">F</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Grade obtained</mat-label>\n        <mat-select [(ngModel)]=\"extraInfo.gradeObtained\">\n            <mat-option value=\"A+\">A+</mat-option>\n            <mat-option value=\"A\">A</mat-option>\n            <mat-option value=\"A-\">A-</mat-option>\n            <mat-option value=\"B+\">B+</mat-option>\n            <mat-option value=\"B\">B</mat-option>\n            <mat-option value=\"B-\">B-</mat-option>\n            <mat-option value=\"C+\">C+</mat-option>\n            <mat-option value=\"C\">C</mat-option>\n            <mat-option value=\"C-\">C-</mat-option>\n            <mat-option value=\"F\">F</mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { SearchService } from '../../../services/search.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { of } from 'rxjs';\nimport { RefinementList } from '../../../refinementList';\nimport { Module } from 'src/app/module';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-module-info',\n  templateUrl: './module-info.component.html',\n  styleUrls: ['./module-info.component.css']\n})\nexport class ModuleInfoComponent implements OnInit {\n\n  public prof = '';\n\n  public acadYear = '2019-2020';\n\n  public semester = 'Semester 1';\n\n  public selectedModule: Module;\n\n  public moduleListShown: Module[] = [];\n\n  public searchInput: string = '';\n\n  @Input() moduleCode: any;\n\n  constructor(public searchService: SearchService, public route: Router, public http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.searchService.search(this.searchInput, RefinementList.emptyRefinementList).subscribe((searchResult: Module[]) => {\n      this.moduleListShown = searchResult.slice(0, 10);\n    });\n    this.searchInput = this.moduleCode;\n  }\n\n  select(module: Module) {\n    this.selectedModule = module;\n    this.searchInput = module.moduleCode;\n  }\n\n  goModuleList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        searchInput: this.searchInput\n      }\n    }\n    this.route.navigate(['./ModuleList'], navigationExtras);\n  }\n\n  search() {\n    this.searchService.search(this.searchInput, RefinementList.emptyRefinementList).subscribe((searchResult: Module[]) => {\n      this.moduleListShown = searchResult.slice(0, 20);\n    });\n    this.selectedModule = undefined;\n  }\n\n  getModule() {\n    if (this.selectedModule) {\n      return of(this.selectedModule);\n    } else {\n      return this.searchService.getModule(this.searchInput);\n    }\n  }\n\n}\n","<div>\n    <div class=\"mat-h1\">Module Info:</div>\n    <mat-form-field class=\"module-code\" appearance=\"outline\">\n        <mat-label>Module Code or Title</mat-label>\n        <input matInput [matAutocomplete]=\"auto\" [(ngModel)]=\"searchInput\" (input)=\"search()\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let module of moduleListShown\" (click)=\"select(module)\">\n                <div class=\"module-info\">\n                    <div class=\"mat-h4\">{{module.moduleCode}} - {{module.title}} </div>\n                    <div class=\"mat-caption\"> {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}MCs </div>\n                </div>\n            </mat-option>\n            <button mat-button class=\"more-btn\" color=\"primary\" (click)=\"goModuleList()\">More</button>\n        </mat-autocomplete>\n      </mat-form-field>\n\n    <mat-form-field class=\"prof\" appearance=\"fill\">\n        <mat-label>Prof</mat-label>\n        <input type=\"text\" name=\"prof\" placeholder=\"Tan Eng Chye\" [(ngModel)]=\"prof\" matInput required>\n    </mat-form-field>\n\n    <mat-form-field class=\"acad-year\" appearance=\"fill\">\n        <mat-label>AcadYear</mat-label>\n        <mat-select [(ngModel)]=\"acadYear\">\n            <mat-option value=\"2019-2020\">19 - 20</mat-option>\n            <mat-option value=\"2018-2019\">18 - 19</mat-option>\n            <mat-option value=\"2017-2018\">17 - 18</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"semester\" appearance=\"fill\">\n        <mat-label>Semester</mat-label>\n        <mat-select [(ngModel)]=\"semester\">\n            <mat-option value=\"Semester 1\">Semester 1</mat-option>\n            <mat-option value=\"Semester 2\">Semester 2</mat-option>\n            <mat-option value=\"Special Term 1\">Special Term 1</mat-option>\n            <mat-option value=\"Special Term 2\">Special Term 2</mat-option>\n        </mat-select>\n    </mat-form-field>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ReviewAndRatings } from 'src/app/reviewAndRatings';\n\n@Component({\n  selector: 'app-review-and-ratings',\n  templateUrl: './review-and-ratings.component.html',\n  styleUrls: ['./review-and-ratings.component.css']\n})\nexport class ReviewAndRatingsComponent implements OnInit {\n\n  public reviewAndRatings: ReviewAndRatings = new ReviewAndRatings('\\nWorkload and Difficulty:\\nProf and Teaching method:\\nOther complaints and commendations:\\n', 5, 5, 5, 5);\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div class=\"mat-h1\">Review and Ratings:</div>\n    <div class=\"slider-box\">\n        <div class=\"mat-body-1\">general: {{reviewAndRatings.general}} / 10 <span class=\"mat-caption\">(10 for most satisfied)</span></div>\n        <mat-slider max=10 min=1 thumbLabel=true step=1 [(ngModel)]=\"reviewAndRatings.general\">\n        </mat-slider>\n        <mat-icon *ngIf=\"reviewAndRatings.general<3\">sentiment_very_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.general==3||reviewAndRatings.general==4\">sentiment_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.general==5||reviewAndRatings.general==6\">sentiment_satisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.general==7||reviewAndRatings.general==8\">sentiment_satisfied_alt</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n    </div>\n\n    <div class=\"slider-box\">\n        <div class=\"mat-body-1\">difficulty: {{reviewAndRatings.difficulty}} / 10 <span class=\"mat-caption\">(10 for most difficult)</span></div>\n        <mat-slider max=10 min=1 thumbLabel=true step=1 [(ngModel)]=\"reviewAndRatings.difficulty\">\n        </mat-slider>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty==7||reviewAndRatings.difficulty==8\">sentiment_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty==5||reviewAndRatings.difficulty==6\">sentiment_satisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty==3||reviewAndRatings.difficulty==4\">sentiment_satisfied_alt</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty<3\">sentiment_very_satisfied</mat-icon>\n    </div>\n\n    <div class=\"slider-box\">\n        <div class=\"mat-body-1\">workload: {{reviewAndRatings.workload}} / 10 <span class=\"mat-caption\">(10 for heaviest workload)</span></div>\n        <mat-slider max=10 min=1 thumbLabel=true step=1 [(ngModel)]=\"reviewAndRatings.workload\">\n        </mat-slider>\n        <mat-icon *ngIf=\"reviewAndRatings.workload>8\">sentiment_very_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.workload==7||reviewAndRatings.workload==8\">sentiment_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.workload==5||reviewAndRatings.workload==6\">sentiment_satisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.workload==3||reviewAndRatings.workload==4\">sentiment_satisfied_alt</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n    </div>\n\n    <div class=\"slider-box\">\n        <div class=\"mat-body-1\">recommend: {{reviewAndRatings.recommend}} / 10 <span class=\"mat-caption\">(10 for most willing to recommend)</span></div>\n        <mat-slider max=10 min=1 thumbLabel=true step=1 [(ngModel)]=\"reviewAndRatings.recommend\">\n        </mat-slider>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend<3\">sentiment_very_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend==3||reviewAndRatings.recommend==4\">sentiment_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend==5||reviewAndRatings.recommend==6\">sentiment_satisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend==7||reviewAndRatings.recommend==8\">sentiment_satisfied_alt</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend>8\">sentiment_very_satisfied</mat-icon>\n    </div>\n\n    <mat-form-field class=\"review\" appearance=\"fill\">\n        <mat-label>Review</mat-label>\n        <textarea name=\"review\" rows=\"20\" placeholder=\"Any other things you want to share about this module\" [(ngModel)]=\"reviewAndRatings.review\" matInput></textarea>\n    </mat-form-field>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PostListService } from '../../services/post-list.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SearchService } from '../../services/search.service';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { ModuleInfo } from '../../moduleInfo';\nimport { Module } from '../../module';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-post-review',\n  templateUrl: './post-review.component.html',\n  styleUrls: ['./post-review.component.css']\n})\nexport class PostReviewComponent implements OnInit {\n\n  @ViewChild('ModuleInfo') ModuleInfo: any;\n  @ViewChild('ExtraInfo') ExtraInfo: any;\n  @ViewChild('ReviewAndRatings') ReviewAndRatings: any;\n\n  public reviewPost: ReviewPost;\n\n  public moduleCode: string = '';\n\n  constructor(public postListService: PostListService,\n    public route: Router,\n    public activatedRoute: ActivatedRoute,\n    public searchService: SearchService,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(data => {\n      if (data.moduleCode) {\n        this.moduleCode = data.moduleCode;\n      }\n    })\n  }\n\n  onSubmit() {\n    this.ModuleInfo.getModule().subscribe((module: Module) => {\n      if (module) {\n        var moduleInfo = new ModuleInfo(module.moduleCode, module.title, this.ModuleInfo.prof, this.ModuleInfo.acadYear, this.ModuleInfo.semester);\n        this.postListService.countNumOfPosts().subscribe((numOfPosts: number) => {\n          this.reviewPost = new ReviewPost(\n            moduleInfo,\n            this.ReviewAndRatings.reviewAndRatings,\n            this.ExtraInfo.extraInfo,\n            new Date().toLocaleDateString(),\n            new Date().toTimeString().slice(0, 8),\n            numOfPosts\n          );\n          this.postListService.addPost(this.reviewPost).subscribe((post: ReviewPost) => {\n            this.route.navigate(['/LatestPosts']);\n          });\n        })\n      } else {\n        this.snackBar.open('Please choose a valid module!', 'Close', {\n          verticalPosition: 'top',\n          duration: 2000\n        })\n      }\n    });\n  }\n\n}\n","<main>\n    <mat-card class=\"left-panel\">\n        <app-module-info #ModuleInfo [moduleCode]=\"moduleCode\"></app-module-info>\n        <mat-divider></mat-divider>\n        <app-review-and-ratings #ReviewAndRatings></app-review-and-ratings>\n        <mat-divider></mat-divider>\n        <app-extra-info #ExtraInfo></app-extra-info>\n        <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"onSubmit()\">submit</button>\n    </mat-card>\n    \n    <div class=\"right-panel\">\n        <app-data-collected></app-data-collected>\n    </div>\n</main>","export class ExtraInfo {\n    constructor(public gradeExpected: string, public gradeObtained: string){}\n}","export class Module {\n    constructor(\n        public moduleCode: string,\n        public title: string,\n        public moduleCredit: string,\n        public department: string,\n        public faculty: string,\n        public description: string,\n        public numOfReviews: number\n      ) { }\n}","export class ModuleInfo {\n    constructor(public moduleCode: String, public title: string, public prof: string, public acadYear: string, public semester: string) {}\n}","export class RefinementList {\n    static emptyRefinementList = new RefinementList([], [], [], []);\n    constructor(public Faculty: string[], \n        public Department: string[], \n        public ModuleCredit: string[], \n        public Level: string[]) {}\n    \n    isEmpty() {\n        return this.Faculty.length == 0 \n            && this.Department.length == 0 \n            && this.ModuleCredit.length == 0 \n            && this.Level.length == 0;\n    }\n}","export class ReviewAndRatings {\n    constructor(public review: string, \n        public general: number, \n        public difficulty: number, \n        public workload: number, \n        public recommend: number) {}\n}","import { ModuleInfo } from './moduleInfo';\nimport { ReviewAndRatings } from './reviewAndRatings';\nimport { ExtraInfo } from './extraInfo';\n\nexport class ReviewPost {\n    public moduleInfo: ModuleInfo;\n    public reviewAndRatings: ReviewAndRatings;\n    public extraInfo: ExtraInfo;\n    public date: string;\n    public time: string;\n    public id: number;\n    public numOfLikes: number;\n    public numOfDislikes: number;\n    public numOfShares: number;\n    constructor(\n        moduleInfo: ModuleInfo,\n        reviewAndRatings: ReviewAndRatings,\n        extraInfo: ExtraInfo,\n        date: string,\n        time: string,\n        id: number) { \n            this.moduleInfo = moduleInfo;\n            this.reviewAndRatings = reviewAndRatings;\n            this.extraInfo = extraInfo;\n            this.date = date;\n            this.time = time;\n            this.id = id;\n            this.numOfDislikes = 0;\n            this.numOfLikes = 0;\n            this.numOfShares = 0;\n        }\n}","import { Injectable } from '@angular/core';\nimport { PostListService } from './post-list.service';\nimport { ReviewPost } from '../reviewPost';\nimport { Module } from '../module';\nimport { map } from \"rxjs/operators\";\nimport { AverageRatings } from '../averageRatings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AverageRatingsService {\n\n  constructor(public postListService: PostListService) { }\n\n  public getAverageRatingsByReviewList(reviewList: ReviewPost[]) {\n\n    var averageRatings = new AverageRatings('0', '0', '0', '0');\n\n    var general = 0;\n    var difficulty = 0;\n    var workload = 0;\n    var recommend = 0;\n\n    if (reviewList.length > 0) {\n      reviewList.forEach((review: ReviewPost) => {\n        general = general + review.reviewAndRatings.recommend;\n        difficulty = difficulty + review.reviewAndRatings.difficulty;\n        workload = workload + review.reviewAndRatings.workload;\n        recommend = recommend + review.reviewAndRatings.general;\n      })\n\n      averageRatings.averageRecommend = (recommend / reviewList.length).toFixed(2);\n      averageRatings.averageDifficulty = (difficulty / reviewList.length).toFixed(2);\n      averageRatings.averageWorkload = (workload / reviewList.length).toFixed(2);\n      averageRatings.averageGeneral = (general / reviewList.length).toFixed(2);\n    }\n\n    return averageRatings;\n  }\n\n  public getAverageRatingsByModuleCode(moduleCode: string) {\n    return this.postListService.getPostListOfModule(moduleCode).pipe(\n      map((reviewList: ReviewPost[]) => {\n        return this.getAverageRatingsByReviewList(reviewList);\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Module } from '../module';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { PostListService } from '../services/post-list.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleListService {\n\n  public cachedModuleList: Module[] = [];\n\n  constructor(public http: HttpClient, public postListService: PostListService) { }\n\n  updateLocalStorage() {\n    this.http.get('/modules').subscribe((moduleList: Module[]) => {\n      localStorage.setItem('moduleList', JSON.stringify(moduleList));\n      this.cachedModuleList = moduleList;\n    });\n  }\n\n  getModuleList() {\n    if (this.cachedModuleList.length > 0) {\n      return of(this.cachedModuleList);\n    } else if (localStorage.getItem('moduleList')) {\n      this.cachedModuleList = JSON.parse(localStorage.getItem('moduleList'));\n      return of(this.cachedModuleList);\n    } else {\n      this.updateLocalStorage();\n      return this.http.get('/modules');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Module } from '../module';\nimport { SearchService } from './search.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyModulesService {\n\n  public myModuleList: Module[] = [];\n\n  constructor(public searchService: SearchService) { }\n\n  getMyModuleList() {\n    if (this.myModuleList.length == 0) {\n      if (localStorage.getItem('myModuleList')) {\n        this.myModuleList = JSON.parse(localStorage.getItem('myModuleList'));\n      } else {\n        this.updateLocalStorage();\n      }\n    } \n    return this.myModuleList;\n  }\n\n  addModule(module: Module) {\n    this.myModuleList.push(module);\n    this.updateLocalStorage();\n  }\n\n  deleteModule(moduleCode: string) {\n    this.myModuleList = this.myModuleList.filter((module: Module) => {\n      return module.moduleCode != moduleCode;\n    })\n    this.updateLocalStorage();\n  }\n\n  updateLocalStorage() {\n    localStorage.setItem('myModuleList', JSON.stringify(this.myModuleList));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ReviewPost } from \"../reviewPost\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { of } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostListService {\n\n  public cachedPostList: ReviewPost[] = [];\n\n  constructor(public http: HttpClient) { }\n\n  getPostList() {\n    if (this.cachedPostList.length > 0) {\n      return of(JSON.parse(JSON.stringify(this.cachedPostList)));\n    } else {\n      return this.http.get('/posts').pipe(\n        map((postList: ReviewPost[]) => {\n          this.cachedPostList = postList;\n          return JSON.parse(JSON.stringify(this.cachedPostList));\n        })\n      );\n    }\n  }\n\n  likePost(postId: number) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList[postId].numOfLikes++;\n    })\n    var postListLike = this.getPostListLike();\n    postListLike.push(postId);\n    localStorage.setItem('postListLike', JSON.stringify(postListLike));\n    return this.http.put('/posts/like/' + postId, null);\n  }\n\n  cancelLikePost(postId: number) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList[postId].numOfLikes--;\n    })\n    localStorage.setItem('postListLike', JSON.stringify(this.getPostListLike().filter((id: number) => id != postId)));\n    return this.http.put('/posts/like/cancel/' + postId, null);\n  }\n\n  dislikePost(postId: number) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList[postId].numOfDislikes++;\n    })\n    var postListDislike = this.getPostListDislike();\n    postListDislike.push(postId);\n    localStorage.setItem('postListDislike', JSON.stringify(postListDislike));\n    return this.http.put('/posts/dislike/' + postId, null);\n  }\n\n  cancelDislikePost(postId: number) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList[postId].numOfDislikes--;\n    })\n    localStorage.setItem('postListDislike', JSON.stringify(this.getPostListDislike().filter((id: number) => id != postId)));\n    return this.http.put('/posts/dislike/cancel/' + postId, null);\n  }\n\n  sharePost(postId: number) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList[postId].numOfShares++;\n    })\n    return this.http.put('/posts/share/' + postId, null);\n  }\n\n  getPostListLike() {\n    if (!localStorage.getItem('postListLike')) {\n      localStorage.setItem('postListLike', JSON.stringify([]));\n    } \n    return JSON.parse(localStorage.getItem('postListLike'));\n  }\n  \n  getPostListDislike() {\n    if (!localStorage.getItem('postListDislike')) {\n      localStorage.setItem('postListDislike', JSON.stringify([]));\n    } \n    return JSON.parse(localStorage.getItem('postListDislike'));\n  }\n\n  countNumOfPosts() {\n    return this.http.get('/posts/count');\n  }\n\n  addPost(post: ReviewPost) {\n    this.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.cachedPostList.push(post);\n    })\n    var httpOptions = { \n      headers: new HttpHeaders({\"Content-Type\": \"application/json\"}) \n    };\n    return this.http.post('/posts', post, httpOptions);\n  }\n\n  countPostList(moduleCode: string) {\n    return this.http.get('/posts/' + moduleCode + '/count');\n  }\n\n  getPostListOfModule(moduleCode: string) {\n    return this.http.get('/posts/' + moduleCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Question } from '../Question';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionListService {\n\n  constructor(public http: HttpClient) { }\n\n  getQuestionListOfModule(moduleCode: string) {\n    return this.http.get('/questions/' + moduleCode);\n  }\n\n  countNumOfQuestions() {\n    return this.http.get('/questions/count');\n  }\n\n  addQuestion(question: Question) {\n    var httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }\n    return this.http.post('/questions', question, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { RefinementList } from '../refinementList';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RefinementListService {\n\n  public refinementList: RefinementList = new RefinementList([], [], ['4 MC'], []);\n\n  public subject = new BehaviorSubject(this.refinementList);\n\n  constructor() { }\n\n  addRefinement(selector: string, refinement: string) {\n    if (!this.includes(selector, refinement)) {\n      this.refinementList[selector].push(refinement);\n      this.subject.next(this.refinementList);\n    }\n  }\n\n  getRefinementList() {\n    return this.subject;\n  }\n\n  deleteRefinement(selector: string, refinement: string) {\n    this.refinementList[selector].splice(this.refinementList[selector].indexOf(refinement), 1);\n    this.subject.next(this.refinementList);\n  }\n\n  includes(selector: string, refinement: string) {\n    return this.refinementList[selector].includes(refinement);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ModuleListService } from \"./module-list.service\";\nimport { RefinementList } from '../refinementList';\nimport { map } from \"rxjs/operators\";\nimport { Module } from \"../module\";\nimport { PostListService } from '../services/post-list.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  constructor(public moduleListService: ModuleListService,\n    public postListService: PostListService) { }\n\n  private belongsToFaculty = (module: Module, facultyList: string[]) => {\n    var flag = false;\n    for (let i = 0; i < facultyList.length; i++) {\n      if (module.faculty == facultyList[i]) {\n        flag = true;\n        break;\n      }\n    }\n    return facultyList.length == 0 || flag;\n  }\n\n  private belongsToDepartment(module: Module, departmentList: string[]) {\n    var flag = false;\n    for (let i = 0; i < departmentList.length; i++) {\n      if (module.department == departmentList[i]) {\n        flag = true;\n        break;\n      }\n    }\n    return departmentList.length == 0 || flag;\n  }\n\n  public belongsToLevel(module: Module, levelList: string[]) {\n    var flag = false;\n    for (let i = 0; i < levelList.length; i++) {\n      let level = levelList[i].charAt(0);\n      let levelOfModule = module.moduleCode.replace(/^[A-Z]+/, '').charAt(0);\n      if (level == levelOfModule) {\n        flag = true;\n        break;\n      }\n    }\n    return levelList.length == 0 || flag;\n  }\n\n  public hasModuleCredit(module: Module, moduleCreditList: string[]) {\n    var flag = false;\n    for (let i = 0; i < moduleCreditList.length; i++) {\n      let moduleCredit = parseInt(module.moduleCredit);\n      switch (moduleCreditList[i]) {\n        case '0-3 MC': flag = moduleCredit < 4; break;\n        case '4 MC': flag = moduleCredit == 4; break;\n        case '5-8 MC': flag = moduleCredit < 9 && moduleCredit > 4; break;\n        case 'More than 8 MC': flag = moduleCredit > 8; break;\n      }\n      if (flag) break;\n    }\n    return moduleCreditList.length == 0 || flag;\n  }\n\n  getFullModuleList() {\n    return this.moduleListService.getModuleList();\n  }\n\n  search(searchInput: string, refinementList: RefinementList) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        if (refinementList.isEmpty()) {\n          return moduleList;\n        } else {\n          return moduleList.filter((module: Module) => {\n            return this.belongsToFaculty(module, refinementList.Faculty) &&\n              this.belongsToDepartment(module, refinementList.Department) &&\n              this.hasModuleCredit(module, refinementList.ModuleCredit) &&\n              this.belongsToLevel(module, refinementList.Level);\n          })\n        }\n      }),\n      map((moduleList: Module[]) => {\n        if (searchInput == '') {\n          return moduleList;\n        } else {\n          let uppercaseSearchInput = searchInput.toUpperCase();\n          return moduleList.filter((module: Module) => {\n            let uppercaseModuleTitle = module.title.toUpperCase();\n            return uppercaseModuleTitle.search(uppercaseSearchInput) != -1 || module.moduleCode.search(uppercaseSearchInput) != -1;\n          });\n        }\n      })\n    );\n  }\n\n  getModule(moduleCode: string) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        let moduleFound: Module;\n        for (var i = 0; i < moduleList.length; i++) {\n          if (moduleList[i].moduleCode == moduleCode) {\n            moduleFound = moduleList[i];\n            break;\n          }\n        }\n        return moduleFound;\n      })\n    )\n  }\n\n  getMoreModuleList(moduleCode: String) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        let index = moduleList.map((module: Module) => {\n          return module.moduleCode;\n        }).findIndex((item: string) => item == moduleCode);\n        let start = index - 5 < 0\n          ? 0\n          : index + 5 > moduleList.length - 1\n            ? moduleList.length - 11\n            : index - 5;\n        return moduleList.slice(start, start + 11).filter((module: Module) => module.moduleCode != moduleCode);\n      })\n    )\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}