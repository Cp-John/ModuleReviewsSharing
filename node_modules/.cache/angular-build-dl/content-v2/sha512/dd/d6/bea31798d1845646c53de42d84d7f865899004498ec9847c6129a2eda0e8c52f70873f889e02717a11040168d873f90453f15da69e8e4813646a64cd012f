{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Question.ts","webpack:///src/app/adminAccount.ts","webpack:///src/app/answer.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/averageRatings.ts","webpack:///src/app/components/admin-account-create/admin-account-create.component.ts","webpack:///src/app/components/admin-account-create/admin-account-create.component.html","webpack:///src/app/components/admin-account-login/admin-account-login.component.ts","webpack:///src/app/components/admin-account-login/admin-account-login.component.html","webpack:///src/app/components/data-collected/data-collected.component.ts","webpack:///src/app/components/data-collected/data-collected.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/latest-posts/latest-posts.component.ts","webpack:///src/app/components/latest-posts/latest-posts.component.html","webpack:///src/app/components/module-list-subcomponents/main-board/main-board.component.ts","webpack:///src/app/components/module-list-subcomponents/main-board/main-board.component.html","webpack:///src/app/components/module-list-subcomponents/refinement-list/refinement-list.component.ts","webpack:///src/app/components/module-list-subcomponents/refinement-list/refinement-list.component.html","webpack:///src/app/components/module-list-subcomponents/refinement-table/refinement-table.component.ts","webpack:///src/app/components/module-list-subcomponents/refinement-table/refinement-table.component.html","webpack:///src/app/components/module-list/module-list.component.ts","webpack:///src/app/components/module-list/module-list.component.html","webpack:///src/app/components/module-subcomponents/module-description/module-description.component.ts","webpack:///src/app/components/module-subcomponents/module-description/module-description.component.html","webpack:///src/app/components/module-subcomponents/question-list/question-list.component.ts","webpack:///src/app/components/module-subcomponents/question-list/question-list.component.html","webpack:///src/app/components/module-subcomponents/review-list/review-list.component.ts","webpack:///src/app/components/module-subcomponents/review-list/review-list.component.html","webpack:///src/app/components/module/module.component.ts","webpack:///src/app/components/module/module.component.html","webpack:///src/app/components/my-modules/my-modules.component.ts","webpack:///src/app/components/my-modules/my-modules.component.html","webpack:///src/app/components/post-review-subcomponents/extra-info/extra-info.component.ts","webpack:///src/app/components/post-review-subcomponents/extra-info/extra-info.component.html","webpack:///src/app/components/post-review-subcomponents/module-info/module-info.component.ts","webpack:///src/app/components/post-review-subcomponents/module-info/module-info.component.html","webpack:///src/app/components/post-review-subcomponents/review-and-ratings/review-and-ratings.component.ts","webpack:///src/app/components/post-review-subcomponents/review-and-ratings/review-and-ratings.component.html","webpack:///src/app/components/post-review-subcomponents/select-header-image/select-header-image.component.ts","webpack:///src/app/components/post-review-subcomponents/select-header-image/select-header-image.component.html","webpack:///src/app/components/post-review/post-review.component.ts","webpack:///src/app/components/post-review/post-review.component.html","webpack:///src/app/components/report/report.component.ts","webpack:///src/app/components/report/report.component.html","webpack:///src/app/extraInfo.ts","webpack:///src/app/module.ts","webpack:///src/app/moduleInfo.ts","webpack:///src/app/refinementList.ts","webpack:///src/app/report.ts","webpack:///src/app/reviewAndRatings.ts","webpack:///src/app/reviewPost.ts","webpack:///src/app/services/admin-account.service.ts","webpack:///src/app/services/average-ratings.service.ts","webpack:///src/app/services/module-list.service.ts","webpack:///src/app/services/my-modules.service.ts","webpack:///src/app/services/post-list.service.ts","webpack:///src/app/services/question-list.service.ts","webpack:///src/app/services/refinement-list.service.ts","webpack:///src/app/services/report-list.service.ts","webpack:///src/app/services/search.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Question","content","date","time","moduleCode","answerList","_id","AdminAccount","accountName","password","Answer","questionId","routes","path","component","children","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AverageRatings","averageGeneral","averageDifficulty","averageWorkload","averageRecommend","emptyAverageRatings","AdminAccountCreateComponent","adminAccountService","route","snackBar","isSuccessfulLogin","showErrorMessage","newAdminAccount","showSpinner","passwordFormControl","required","minLength","maxLength","accountNameFormControl","getAdminAccount","navigate","getAdminAccountList","subscribe","adminAccountList","map","adminAccount","includes","length","createAccount","open","duration","general","difficulty","workload","recommend","AdminAccountLoginComponent","postListService","activatedRoute","reportListService","reportList","report","pageIndex","postListLike","postListDislike","userName","hoverOnShareBtn","hoverOnShareBox","updatePostListLikeAndDislike","getReportList","updateReportShown","login","isSuccessful","logout","reportId","deleteReport","filter","post","getPostList","postList","deletePost","reviewPost","navigationExtras","queryParams","getPostListLike","getPostListDislike","postId","numOfDislikes","numOfLikes","cancelDislikePost","post_1","likePost","post_2","cancelLikePost","dislikePost","copyContent","numOfShares","oInput","document","createElement","value","body","appendChild","select","execCommand","style","display","sharePost","setTimeout","getPostById","undefined","event","DataCollectedComponent","searchService","numberOfModules","numberOfReviews","getFullModuleList","moduleList","FooterComponent","HeaderComponent","goHome","goModuleList","goPostReviews","goLatestPosts","goMyModules","goAdminAccountLogin","HomeComponent","searchInput","moduleListShown","inputStatus","search","selectedModule","goModule","emptyRefinementList","searchResult","slice","inputStatusOn","goModuleListWithNoInput","LatestPostsComponent","postListShown","resetHoverOn","data","start","reverse","key","updatePostListShown","MainBoardComponent","refinementList","selectorList","prof","acadYear","filteredModuleList","sortOption","searchInputFromFather","sort","getSortMethod","updateNumOfReviews","a","b","parseInt","arrOfCountRes","forEach","push","countPostList","listOfNumOfReviews","index","numOfReviews","sortFilteredModuleList","updateRefinementList","reverseFilteredModuleList","updateModuleListShown","RefinementListComponent","refinementListService","sendRefinementList","getRefinementList","emit","refinement","deleteRefinement","RefinementTableComponent","facultyList","more","Faculty","Department","conditionList","initialList","departmentList","fullList","sendMore","sendCloseDrawer","addRefinement","resetMore","closeDrawer","ModuleListComponent","widthOfDrawer","widthOfMain","hasBackdrop","status","opened","updateWidthOfMain","updateWidthOfDrawer","updateOpened","updateMore","ModuleDescriptionComponent","http","description","getModule","getElementsByTagName","setAttribute","QuestionListComponent","questionListService","questionList","questionListShown","questionEntered","answerEntered","ifPostAnAnswer","ifAskAQuestion","question","updateQuestionList","getQuestionListOfModule","quesitonList","ans","Date","toLocaleDateString","toLocaleTimeString","httpOptions","headers","answer","resetAnswerForm","answerId","deleteQuestion","addQuestion","unshift","resetQuestionForm","showQuestionForm","updateQuestionListShown","ReviewListComponent","reviewList","reviewListShown","getPostListOfModule","postReview","review","console","log","addReviews","updateReviewListShown","ModuleComponent","myModuleService","moduleListService","averageRatingsService","activeBtn","averageRatings","moreModuleList","myModuleList","getAverageRatingsByReviewList","getMoreModuleList","updateMyModuleList","getMyModuleList","addModule","verticalPosition","deleteModule","location","pathname","loadReviewList","loadQuestionList","loadDescription","MyModulesComponent","myModulesService","listOfAverageRatings","getAverageRatingsByModuleCode","ExtraInfoComponent","extraInfo","ModuleInfoComponent","semester","ReviewAndRatingsComponent","reviewAndRatings","SelectHeaderImageComponent","pictureUrlList","selectedHeaderImage","url","PostReviewComponent","ModuleInfo","moduleInfo","ReviewAndRatings","ExtraInfo","HeaderImage","toTimeString","addPost","onSubmit","ReportComponent","isNotFound","newReport","addReport","submitReport","gradeExpected","gradeObtained","Module","moduleCredit","department","faculty","RefinementList","ModuleCredit","Level","Report","ReviewPost","headerImage","AdminAccountService","cachedAdminAccountList","get","pipe","filteredAdminAccountList","providedIn","AverageRatingsService","toFixed","ModuleListService","cachedModuleList","localStorage","setItem","JSON","stringify","getItem","parse","updateLocalStorage","MyModulesService","PostListService","cachedPostList","put","find","QuestionListService","RefinementListService","subject","next","splice","indexOf","ReportListService","SearchService","belongsToFaculty","flag","i","levelList","level","charAt","levelOfModule","replace","moduleCreditList","getModuleList","isEmpty","belongsToDepartment","hasModuleCredit","belongsToLevel","uppercaseSearchInput","toUpperCase","uppercaseModuleTitle","moduleFound","findIndex","item","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Answer } from './answer';\n\nexport class Question {\n    public content: string;\n    public date: string;\n    public time: string;\n    public moduleCode: string;\n    public answerList: Answer[];\n    public _id: string;\n    constructor(content: string, date: string,\n        time: string, moduleCode: string) { \n            this.content = content;\n            this.date = date;\n            this.time = time;\n            this.moduleCode = moduleCode;\n            this.answerList = [];\n            this._id = '';\n        }\n}","export class AdminAccount {\n    public accountName: string;\n    public password: string;\n\n    constructor(accountName: string, password: string) {\n        this.accountName = accountName;\n        this.password = password;\n    }\n}","export class Answer {\n    public content: string;\n    public date: string;\n    public time: string;\n    public questionId: string;\n    public _id: string\n    constructor(\n        content: string,\n        date: string,\n        time: string,\n        questionId: string,\n    ) { \n        this.content = content;\n        this.date = date;\n        this.time = time;\n        this.questionId = questionId;\n        this._id = '';\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LatestPostsComponent } from './components/latest-posts/latest-posts.component';\nimport { MyModulesComponent } from './components/my-modules/my-modules.component';\nimport { ModuleComponent } from './components/module/module.component';\nimport { ModuleListComponent } from './components/module-list/module-list.component';\nimport { PostReviewComponent } from './components/post-review/post-review.component';\nimport { ModuleDescriptionComponent } from './components/module-subcomponents/module-description/module-description.component';\nimport { QuestionListComponent } from './components/module-subcomponents/question-list/question-list.component';\nimport { ReviewListComponent } from './components/module-subcomponents/review-list/review-list.component';\nimport { AdminAccountLoginComponent } from './components/admin-account-login/admin-account-login.component';\nimport { AdminAccountCreateComponent } from './components/admin-account-create/admin-account-create.component';\nimport { ReportComponent } from './components/report/report.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'ModuleList', component: ModuleListComponent},\n  {path: 'PostReview', component: PostReviewComponent},\n  {path: 'LatestPosts', component: LatestPostsComponent},\n  {path: 'Module', component: ModuleComponent, children: [\n    {path: 'Description', component: ModuleDescriptionComponent},\n    {path: 'QuestionList', component: QuestionListComponent},\n    {path: 'ReviewList', component: ReviewListComponent},\n  ]},\n  {path: 'MyModules', component: MyModulesComponent},\n  {path: 'AdminAccountLogin', component: AdminAccountLoginComponent},\n  {path: 'AdminAccountCreate', component: AdminAccountCreateComponent},\n  {path: 'Report', component: ReportComponent},\n  {path: 'Module', redirectTo: 'Module/Description'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'nusmods';\n}\n","<div class=\"container\">\n  <header>\n      <app-header></app-header>\n  </header>\n  \n  <main>\n      <router-outlet></router-outlet>\n  </main>\n</div>\n\n<footer>\n  <app-footer></app-footer>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LatestPostsComponent } from './components/latest-posts/latest-posts.component';\nimport { DataCollectedComponent } from './components/data-collected/data-collected.component';\nimport { MyModulesComponent } from './components/my-modules/my-modules.component';\nimport { ModuleComponent } from './components/module/module.component';\nimport { ModuleListComponent } from './components/module-list/module-list.component';\nimport { MainBoardComponent } from './components/module-list-subcomponents/main-board/main-board.component';\nimport { RefinementListComponent } from './components/module-list-subcomponents/refinement-list/refinement-list.component';\nimport { RefinementTableComponent } from './components/module-list-subcomponents/refinement-table/refinement-table.component';\nimport { PostReviewComponent } from './components/post-review/post-review.component';\nimport { ExtraInfoComponent } from './components/post-review-subcomponents/extra-info/extra-info.component';\nimport { ModuleInfoComponent } from './components/post-review-subcomponents/module-info/module-info.component';\nimport { ReviewAndRatingsComponent } from './components/post-review-subcomponents/review-and-ratings/review-and-ratings.component';\nimport { ModuleDescriptionComponent } from './components/module-subcomponents/module-description/module-description.component';\nimport { QuestionListComponent } from './components/module-subcomponents/question-list/question-list.component';\nimport { ReviewListComponent } from './components/module-subcomponents/review-list/review-list.component';\nimport { AdminAccountLoginComponent } from './components/admin-account-login/admin-account-login.component';\nimport { AdminAccountCreateComponent } from './components/admin-account-create/admin-account-create.component';\nimport { SelectHeaderImageComponent } from './components/post-review-subcomponents/select-header-image/select-header-image.component';\nimport { ReportComponent } from './components/report/report.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LatestPostsComponent,\n    DataCollectedComponent,\n    MyModulesComponent,\n    ModuleComponent,\n    ModuleListComponent,\n    MainBoardComponent,\n    RefinementListComponent,\n    RefinementTableComponent,\n    PostReviewComponent,\n    ExtraInfoComponent,\n    ModuleInfoComponent,\n    ReviewAndRatingsComponent,\n    ModuleDescriptionComponent,\n    QuestionListComponent,\n    ReviewListComponent,\n    AdminAccountLoginComponent,\n    AdminAccountCreateComponent,\n    SelectHeaderImageComponent,\n    ReportComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatCardModule,\n    MatDividerModule,\n    MatSidenavModule,\n    MatAutocompleteModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    FormsModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class AverageRatings {\n    constructor(public averageGeneral: string,\n        public averageDifficulty: string,\n        public averageWorkload: string,\n        public averageRecommend: string,) {}\n\n    static emptyAverageRatings = new AverageRatings('0', '0', '0', '0');\n}","import { Component, OnInit } from '@angular/core';\nimport { AdminAccountService } from 'src/app/services/admin-account.service';\nimport { Router } from \"@angular/router\";\nimport { AdminAccount } from 'src/app/adminAccount';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormControl, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-admin-account-create',\n  templateUrl: './admin-account-create.component.html',\n  styleUrls: ['./admin-account-create.component.css']\n})\nexport class AdminAccountCreateComponent implements OnInit {\n\n  public isSuccessfulLogin: boolean = false;\n  public showErrorMessage: boolean = false;\n  public newAdminAccount: AdminAccount = new AdminAccount('', '');\n\n  public showSpinner: boolean = false;\n\n  public passwordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(4),\n    Validators.maxLength(11),\n  ])\n\n  public accountNameFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(20),\n  ])\n\n  constructor(public adminAccountService: AdminAccountService,\n    public route: Router,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    if (this.adminAccountService.getAdminAccount()) {\n      this.isSuccessfulLogin = true;\n    }\n  }\n\n  goAdminAccountLogin() {\n    this.route.navigate(['/AdminAccountLogin']);\n  }\n\n  register() {\n    this.adminAccountService.getAdminAccountList().subscribe((adminAccountList: AdminAccount[]) => {\n      if (adminAccountList.map((adminAccount: AdminAccount) => adminAccount.accountName).includes(this.newAdminAccount.accountName)) {\n        this.showErrorMessage = true;\n      } else if (this.newAdminAccount.accountName.length > 2 && this.newAdminAccount.accountName.length < 21 &&\n        this.newAdminAccount.password.length > 3 && this.newAdminAccount.password.length < 12) {\n        this.adminAccountService.createAccount(this.newAdminAccount).subscribe((adminAccount: AdminAccount) => {\n          this.route.navigate(['/AdminAccountLogin']);\n          this.snackBar.open('Admin account ' + this.newAdminAccount.accountName + \" is successfully registered!\", '', {\n            duration: 2000\n          });\n        });\n      }\n    })\n  }\n}\n","<mat-card *ngIf=\"isSuccessfulLogin\" class=\"container\">\n    <mat-card-header>\n        <mat-card-title>Register</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form>\n            <table cellspacing=\"0\">\n                <tr>\n                    <td>\n                        <mat-form-field class=\"full-width\">\n                            <input matInput placeholder=\"AccountName\" \n                                [formControl]=\"accountNameFormControl\"\n                                [(ngModel)]=\"newAdminAccount.accountName\" name=\"accountName\"\n                                (input)=\"showErrorMessage=false\" required>\n                            <mat-error *ngIf=\"accountNameFormControl.hasError('required') || accountNameFormControl.hasError('minLength') || accountNameFormControl.hasError('maxLength')\">\n                                Please enter a valid accountName\n                            </mat-error>\n                            <mat-hint>\n                                minLength: 3; maxLength: 20\n                            </mat-hint>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <mat-form-field class=\"full-width\">\n                            <input matInput placeholder=\"Password\" [(ngModel)]=\"newAdminAccount.password\"\n                                [formControl]=\"passwordFormControl\"\n                                (input)=\"showErrorMessage=false\" type=\"password\" name=\"password\" required>\n                            <mat-error *ngIf=\"passwordFormControl.hasError('required') || passwordFormControl.hasError('minLength') || passwordFormControl.hasError('maxLength')\">\n                                Please enter a valid password\n                            </mat-error>\n                            <mat-hint>\n                                minLength: 4; maxLength: 11\n                            </mat-hint>\n                        </mat-form-field>\n                    </td>\n                </tr>\n            </table>\n            <mat-hint *ngIf=\"showErrorMessage\" style=\"color: red; margin-left: 12%;\">The account name already exists!</mat-hint>\n        </form>\n        <mat-spinner [style.display]=\"showSpinner ? 'block' : 'none'\"></mat-spinner>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"primary\" (click)=\"register()\">Register</button>\n    </mat-card-actions>\n</mat-card>\n\n<mat-card *ngIf=\"!isSuccessfulLogin\" class=\"container\">\n    <mat-card-header>\n        <mat-card-title>Please login first!</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-actions>\n        <button mat-raised-button (click)=\"goAdminAccountLogin()\" color=\"primary\">Login</button>\n    </mat-card-actions>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { AdminAccountService } from 'src/app/services/admin-account.service';\nimport { Router, ActivatedRoute, NavigationExtras } from \"@angular/router\";\nimport { Report } from 'src/app/report';\nimport { ReportListService } from 'src/app/services/report-list.service';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { PostListService } from 'src/app/services/post-list.service';\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\n@Component({\n  selector: 'app-admin-account-login',\n  templateUrl: './admin-account-login.component.html',\n  styleUrls: ['./admin-account-login.component.css']\n})\nexport class AdminAccountLoginComponent implements OnInit {\n\n  public password: string = '';\n\n  public accountName: string = '';\n\n  public showSpinner: boolean = false;\n\n  public showErrorMessage: boolean = false;\n\n  public isSuccessfulLogin: boolean = false;\n\n  public reportList: Report[] = [];\n\n  public report: Report = new Report('', '', '', '');\n\n  public post: ReviewPost;\n\n  public pageIndex: number = 0;\n\n  public postListLike: string[] = [];\n\n  public postListDislike: string[] = [];\n\n  public userName: string = 'Anonymous';\n\n  public hoverOnShareBtn: boolean = false;\n  \n  public hoverOnShareBox: boolean = false;\n\n  constructor(public adminAccountService: AdminAccountService, \n    public route: Router, \n    public postListService: PostListService, \n    public activatedRoute: ActivatedRoute,\n    public snackBar: MatSnackBar,\n    public reportListService: ReportListService) { }\n\n  ngOnInit(): void {\n    this.updatePostListLikeAndDislike();\n    if (this.adminAccountService.getAdminAccount()) {\n      this.isSuccessfulLogin = true;\n      this.accountName = this.adminAccountService.getAdminAccount().accountName;\n    }\n    this.reportListService.getReportList().subscribe((reportList: Report[]) => {\n      this.reportList = reportList;\n      this.updateReportShown();\n    })\n  }\n\n  login() {\n    this.showSpinner = true;\n    this.adminAccountService.login(this.accountName, this.password).subscribe((isSuccessful: boolean) => {\n      this.showSpinner = false;\n      if (isSuccessful) {\n        this.isSuccessfulLogin = true;\n      } else {\n        this.showErrorMessage = true;\n      }\n    })\n  }\n\n  logout() {\n    this.adminAccountService.logout();\n    this.isSuccessfulLogin = false;\n    this.password = '';\n  }\n\n  goAdminAccountCreate() {\n    this.route.navigate(['/AdminAccountCreate']);\n  }\n\n  deleteReport(reportId: string) {\n    this.reportListService.deleteReport(reportId).subscribe((report: Report) => {\n      this.reportList = this.reportList.filter((report: Report) => {\n        return report._id != reportId;\n      })\n      if (this.post) {\n        this.postListService.deleteReport(this.post._id);\n      }\n      this.updateReportShown();\n      this.snackBar.open('Report successfully deleted!', '', {\n        duration: 2000\n      })\n    })\n  }\n\n  deletePost(reportId: string) {\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.postListService.deletePost(this.post._id).subscribe((reviewPost: ReviewPost) => {\n        this.deleteReport(reportId);\n      })\n    })\n  }\n\n  goModule(moduleCode: String) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  updatePostListLikeAndDislike() {\n    this.postListLike = this.postListService.getPostListLike();\n    this.postListDislike = this.postListService.getPostListDislike();\n  }\n\n  onClickLikePost(post: ReviewPost) {\n    var postId = post._id;\n    if (this.postListDislike.includes(postId)) {\n      post.numOfDislikes--;\n      post.numOfLikes++;\n      this.postListService.cancelDislikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.likePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListLike.includes(postId)) {\n      post.numOfLikes++;\n      this.postListService.likePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfLikes--;\n      this.postListService.cancelLikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onClickDislikePost(post: ReviewPost) {\n    var postId = post._id;\n    if (this.postListLike.includes(postId)) {\n      post.numOfLikes--;\n      post.numOfDislikes++;\n      this.postListService.cancelLikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListDislike.includes(postId)) {\n      post.numOfDislikes++;\n      this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfDislikes--;\n      this.postListService.cancelDislikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onCopyPost(post: ReviewPost, copyContent: string) {\n    post.numOfShares++;\n    const oInput = document.createElement('textarea');\n    var postId = post._id;\n    oInput.value = copyContent + '\\n@ModuleReviewsSharing';\n    document.body.appendChild(oInput);\n    oInput.select();\n    document.execCommand('Copy');\n    oInput.style.display = 'none';\n    this.snackBar.open('Review post copied!', '', {\n      duration: 2000,\n    });\n    this.postListService.sharePost(postId).subscribe((post_1: ReviewPost) => {\n    });\n  } \n\n  ifLike(postId: string) {\n    return this.postListLike.includes(postId);\n  }\n\n  ifDislike(postId: string) {\n    return this.postListDislike.includes(postId);\n  }\n\n  mouseLeaveShareBtn() {\n    setTimeout(() => this.hoverOnShareBtn = false, 200);\n  }\n\n  updateReportShown() {\n    if (this.reportList[this.pageIndex]) {\n      this.report = this.reportList[this.pageIndex];\n      this.postListService.getPostById(this.reportList[this.pageIndex].postId).subscribe((post: ReviewPost) => {\n        this.post = post;\n      })\n    } else {\n      this.post = undefined;\n    }\n  }\n\n  onPageChange(event: any) {\n    this.pageIndex = event.pageIndex;\n    this.updateReportShown();\n  }\n}","<mat-card class=\"container\" *ngIf=\"!isSuccessfulLogin\">\n    <mat-card-header>\n        <mat-card-title>Login</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form>\n            <table cellspacing=\"0\">\n                <tr>\n                    <td>\n                        <mat-form-field class=\"full-width\">\n                            <input matInput placeholder=\"AccountName\" [(ngModel)]=\"accountName\" name=\"accountName\"\n                                (input)=\"showErrorMessage=false\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <mat-form-field class=\"full-width\">\n                            <input matInput placeholder=\"Password\" [(ngModel)]=\"password\"\n                                (input)=\"showErrorMessage=false\" type=\"password\" name=\"password\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n            </table>\n            <mat-hint *ngIf=\"showErrorMessage\" style=\"color: red; margin-left: 12%;\">The account name or password is\n                incorrect!</mat-hint>\n        </form>\n        <mat-spinner [style.display]=\"showSpinner ? 'block' : 'none'\"></mat-spinner>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button (click)=\"login()\" color=\"primary\">Login</button>\n    </mat-card-actions>\n</mat-card>\n\n<div class=\"successful-login-container\" *ngIf=\"isSuccessfulLogin\">\n    <div class=\"left-panel\">\n        <mat-card class=\"successful-login-card\">\n            <mat-card-header>\n                <mat-card-title>Welcome, {{accountName}}!</mat-card-title>\n            </mat-card-header>\n\n            <mat-card-content>\n                <pre class=\"mat-body\">\n            <strong>What an admin stuff can do:</strong>\n                1.Delete a review post, a question, and an answer;\n                2.<a (click)=\"goAdminAccountCreate()\" routerLink=\"/AdminAccountCreate\">Create another admin account</a>;\n            </pre>\n            </mat-card-content>\n\n            <mat-card-actions>\n                <button mat-raised-button (click)=\"logout()\" color=\"primary\">Logout</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n\n    <div class=\"right-panel\">\n        <div class=\"mat-h1\">\n            Reports\n        </div>\n        <mat-divider></mat-divider>\n        <div class=\"delete-report-btn-wrapper\">\n            <button mat-icon-button class=\"icon-btn delete-report-btn\"\n                (click)=\"deleteReport(report._id)\"\n                matTooltip=\"delete report\"\n                *ngIf=\"reportList[pageIndex]\">\n                <mat-icon>\n                    delete_forever\n                </mat-icon>\n            </button>\n        </div>\n\n        <mat-card class=\"no-reports mat-h1\" *ngIf=\"!reportList[pageIndex]\">\n            No more reports!\n        </mat-card>\n\n        <mat-card class=\"post-does-not-exist mat-h1\" *ngIf=\"reportList[pageIndex] && !post\">\n            The post does not exist!\n        </mat-card>\n        <mat-card *ngIf=\"post\">\n            <mat-card-header class=\"flex-container\">\n                <div mat-card-avatar class=\"header-image\" [style.background-image]=\"'url(' + post.headerImage + ')'\">\n                </div>\n                <mat-card-title class=\"flex-container\">\n                    <span class=\"header\">\n                        {{post.moduleInfo.moduleCode}} - {{post.moduleInfo.title}}\n                        <span class=\"mat-caption\">Under Prof {{post.moduleInfo.prof}}, {{post.moduleInfo.acadYear}} /\n                            {{post.moduleInfo.semester}}\n                        </span>\n                    </span>\n                </mat-card-title>\n                <div class=\"view-btn\">\n                    <button mat-icon-button matTooltip=\"view\" (click)=\"goModule(post.moduleInfo.moduleCode)\">\n                        <mat-icon class=\"icon-btn\">search</mat-icon>\n                    </button>\n                    <button mat-icon-button matTooltip=\"delete\" (click)=\"deletePost(report._id)\">\n                        <mat-icon class=\"icon-btn\">delete</mat-icon>\n                    </button>\n                </div>\n                <mat-card-subtitle>\n                    {{post.date}} - {{post.time}} by {{userName}}\n                </mat-card-subtitle>\n            </mat-card-header>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-content>\n                <div class=\"review\">\n                    <pre class=\"mat-body\">\n                            {{post.reviewAndRatings.review}}\n                        </pre>\n                </div>\n\n                <div class=\"extra-info mat-caption\">\n                    Expected Grade: {{post.extraInfo.gradeExpected}}\n                </div>\n\n                <div class=\"extra-info mat-caption\">\n                    Grade Obtained: {{post.extraInfo.gradeObtained}}\n                </div>\n            </mat-card-content>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-actions class=\"flex-container\">\n                <div class=\"flex-container ratings\">\n                    <div matTooltip=\"10 for most satisfied\">\n                        general: {{post.reviewAndRatings.general}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>2&&post.reviewAndRatings.general<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>4&&post.reviewAndRatings.general<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>6&&post.reviewAndRatings.general<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most difficult\">\n                        difficulty: {{post.reviewAndRatings.difficulty}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>6&&post.reviewAndRatings.difficulty<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>4&&post.reviewAndRatings.difficulty<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>2&&post.reviewAndRatings.difficulty<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty<3\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for heaviest workload\">\n                        workload: {{post.reviewAndRatings.workload}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>6&&post.reviewAndRatings.workload<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>4&&post.reviewAndRatings.workload<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>2&&post.reviewAndRatings.workload<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most willing to recommend\">\n                        recommend: {{post.reviewAndRatings.recommend}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>2&&post.reviewAndRatings.recommend<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>4&&post.reviewAndRatings.recommend<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>6&&post.reviewAndRatings.recommend<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>8\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"btns\">\n                    <button mat-icon-button matTooltip=\"like\" (click)=\"onClickLikePost(post)\">\n                        <mat-icon class=\"icon-btn\" [ngClass]=\"{'blue-color': ifLike(post._id)}\">thumb_up</mat-icon>\n                        {{post.numOfLikes}}\n                    </button>\n                    <button mat-icon-button matTooltip=\"dislike\" (click)=\"onClickDislikePost(post)\">\n                        <mat-icon class=\"icon-btn\" [ngClass]=\"{'blue-color': ifDislike(post._id)}\">thumb_down</mat-icon>\n                        {{post.numOfDislikes}}\n                    </button>\n                    <button mat-icon-button matTooltip=\"share\" (mouseover)=\"hoverOnShareBtn = true\"\n                        (mouseleave)=\"mouseLeaveShareBtn()\">\n                        <mat-icon class=\"icon-btn\">share</mat-icon>\n                        {{post.numOfShares}}\n                    </button>\n                    <mat-card class=\"share-box\" *ngIf=\"hoverOnShareBtn||hoverOnShareBox\"\n                        (mouseover)=\"hoverOnShareBox=true\" (mouseleave)=\"hoverOnShareBox=false\">\n                        <mat-card-title>\n                            Copy & Share\n                            <button mat-icon-button (click)=\"onCopyPost(post, copyContent.innerHTML)\" class=\"copy-btn\"\n                                matTooltip=\"copy review post\">\n                                <mat-icon class=\"icon-btn\">\n                                    content_copy\n                                </mat-icon>\n                            </button>\n                        </mat-card-title>\n                        <mat-card-content>\n                            <pre class=\"mat-body\" #copyContent>\n            {{post.moduleInfo.moduleCode}} - {{post.moduleInfo.title}} taken by {{userName}}\n            under {{post.moduleInfo.prof}}, {{post.moduleInfo.acadYear}} / {{post.moduleInfo.semester}}:\n                {{post.reviewAndRatings.review}}\n            general: {{post.reviewAndRatings.general}} / 10 (10 for most satisfied)         difficulty: {{post.reviewAndRatings.difficulty}} / 10 (10 for most difficult)\n            workload: {{post.reviewAndRatings.workload}} / 10 (10 for heaviest workload)    recommend: {{post.reviewAndRatings.recommend}} / 10 (10 for most willing to recommend)\n                            </pre>\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n            </mat-card-actions>\n        </mat-card>\n\n        <div class=\"report-content\" *ngIf=\"reportList[pageIndex]\">\n            {{report.content}}\n        </div>\n\n        <div class=\"report-footer mat-hint\">\n            {{report.date}} - {{report.time}} by Anonymous\n        </div>\n\n        <mat-paginator [length]=\"reportList.length\" \n            pageSize=\"1\" showFirstLastButtons=\"true\" hidePageSize=\"true\"\n            [pageIndex]=\"pageIndex\"\n            (page)=\"onPageChange($event)\"></mat-paginator>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SearchService } from '../../services/search.service';\nimport { PostListService } from '../../services/post-list.service';\nimport { Module } from '../../module';\nimport { ReviewPost } from 'src/app/reviewPost';\n\n@Component({\n  selector: 'app-data-collected',\n  templateUrl: './data-collected.component.html',\n  styleUrls: ['./data-collected.component.css']\n})\nexport class DataCollectedComponent implements OnInit {\n\n  public numberOfModules: number = 0;\n  public numberOfReviews: number = 0;\n\n  constructor(public searchService: SearchService, public postListService: PostListService) { }\n\n  ngOnInit(): void {\n    this.searchService.getFullModuleList().subscribe((moduleList: Module[]) => {\n      this.numberOfModules = moduleList.length;\n    })\n\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.numberOfReviews = postList.length;\n    })\n  }\n}\n","<mat-card>\n    <mat-card-title>Data collected</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n        <div class=\"data-collected\">Number of modules: {{numberOfModules}}</div>\n        <div class=\"data-collected\">Number of reviews: {{numberOfReviews}}</div>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"mat-caption\">\n        Made By Cao Peng & Li Zhuoran, June 2020\n    </div>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public route: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goHome() {\n    this.route.navigate(['/']);\n  }\n\n  goModuleList() {\n    this.route.navigate(['/ModuleList']);\n  }\n\n  goPostReviews() {\n    this.route.navigate(['/PostReview']);\n  }\n\n  goLatestPosts() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        pageIndex: 0\n      }\n    }\n    this.route.navigate(['/LatestPosts'], navigationExtras);\n  }\n\n  goMyModules() {\n    this.route.navigate(['/MyModules']);\n  }\n  \n  goAdminAccountLogin() {\n    this.route.navigate(['/AdminAccountLogin']);\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"nusmods\">\n        <button mat-button>\n            <span class=\"mat-h1\" (click)=\"goHome()\">Home</span>\n        </button>\n    </div>\n\n    <div class=\"btns\">\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goModuleList()\">Module List</span>\n        </button>\n\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goPostReviews()\">Post Reviews</span>\n        </button>\n\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goLatestPosts()\">Latest Posts</span>\n        </button>\n    </div>\n\n    <div class=\"my-modules-and-admin-login\">\n        <button mat-raised-button (click)=\"goMyModules()\">My Modules</button>\n        <button mat-icon-button (click)=\"goAdminAccountLogin()\">\n            <mat-icon matTooltip=\"admin account login\" class=\"icon-button\">\n                admin_panel_settings\n            </mat-icon>\n        </button>\n    </div>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationExtras, NavigationEnd } from '@angular/router';\nimport { SearchService } from '../../services/search.service';\nimport { Module } from '../../module';\nimport { RefinementList } from '../../refinementList';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public searchInput: string = '';\n\n  public selectedModule: Module;\n\n  public moduleListShown: Module[] = [];\n\n  public inputStatus: boolean = false;\n\n  constructor(public route: Router, public searchService: SearchService) { }\n\n  ngOnInit(): void {\n    this.search();\n  }\n\n  select(module: Module) {\n    this.selectedModule = module;\n    this.goModule(module.moduleCode);\n  }\n  \n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  search() {\n    this.searchService.search(this.searchInput, RefinementList.emptyRefinementList).subscribe((searchResult: Module[]) => {\n      this.moduleListShown = searchResult.slice(0, 10);\n    })\n  }\n\n  goModuleList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        searchInput: this.searchInput\n      }\n    }\n    this.route.navigate(['/ModuleList'], navigationExtras);\n  }\n\n  goModuleListWithNoInput() {\n    this.route.navigate(['/ModuleList']);\n  }\n\n  goPostReviews() {\n    this.route.navigate(['/PostReview']);\n  }\n\n  goLatestPosts() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        pageIndex: 0\n      }\n    }\n    this.route.navigate(['/LatestPosts'], navigationExtras);\n  }\n\n  inputStatusOn() {\n    this.inputStatus = true;\n  }\n\n}\n","<div>\n    <div class=\"headline mat-display-1\">ModuleReviewsSharing@NUS</div>\n    <div class=\"mat-caption\">reviews | ratings | recommend</div>\n    <div class=\"search-box\">\n        <mat-icon>search</mat-icon>\n        <mat-form-field>\n            <input type=\"text\" autocomplete=\"off\" matInput placeholder=\"Module code or title\"\n                (input)=\"search(); inputStatusOn()\" [(ngModel)]=\"searchInput\">\n            <button mat-button *ngIf=\"searchInput\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"searchInput=''; search()\">\n                <mat-icon class=\"icon-btn\">close</mat-icon>\n            </button>\n        </mat-form-field>\n    </div>\n    <div class=\"scrollable-container\" cdkScrollable *ngIf=\"inputStatus\">\n        <mat-option *ngFor=\"let module of moduleListShown\" (click)=\"select(module)\">\n            <div class=\"module-info\">\n                <div class=\"mat-h4\">{{module.moduleCode}} - {{module.title}} </div>\n                <div class=\"mat-caption\"> {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}MCs </div>\n            </div>\n        </mat-option>\n        <button class=\"more-btn\" mat-button color=\"primary\" (click)=\"goModuleList()\">More</button>\n    </div>\n    <div class=\"flex-container\">\n        <button mat-button (click)=\"goModuleListWithNoInput()\" class=\"colored-btn\">Module List</button>\n        <button mat-raised-button (click)=\"goPostReviews()\" color=\"primary\">Post Reviews</button>\n        <button mat-button (click)=\"goLatestPosts()\" class=\"colored-btn\">Latest Posts</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PostListService } from '../../services/post-list.service';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { AdminAccountService } from 'src/app/services/admin-account.service';\n\n@Component({\n  selector: 'app-latest-posts',\n  templateUrl: './latest-posts.component.html',\n  styleUrls: ['./latest-posts.component.css']\n})\nexport class LatestPostsComponent implements OnInit {\n\n  public postList: ReviewPost[] = [];\n\n  public postListShown: ReviewPost[] = [];\n\n  public userName: string = \"Anonymous\";\n\n  public postListLike: string[] = [];\n\n  public postListDislike: string[] = [];\n\n  public hoverOnShareBtn: boolean[];\n  \n  public hoverOnShareBox: boolean[];\n\n  public isSuccessfulLogin: boolean = false;\n\n  public pageIndex: number = 0;\n\n\n  constructor(public postListService: PostListService, \n    public route: Router, \n    public snackBar: MatSnackBar,\n    public adminAccountService: AdminAccountService,\n    public activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.resetHoverOn();\n    this.activatedRoute.queryParams.subscribe((data) => {\n      if (data.pageIndex) {\n        this.pageIndex = data.pageIndex;\n      }\n      var start = this.pageIndex * 5;\n      this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n        this.postList = postList.reverse();\n        this.postListShown = postList.slice(start, start + 5);\n      });\n    })\n    this.updatePostListLikeAndDislike();\n    if (this.adminAccountService.getAdminAccount()) {\n      this.isSuccessfulLogin = true;\n    }\n  }\n\n  goModule(moduleCode: String) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  goReport(postId: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        postId: postId\n      }\n    }\n    this.route.navigate(['/Report'], navigationExtras);\n  }\n\n  resetHoverOn() {\n    this.hoverOnShareBtn = [false, false, false, false, false];\n    this.hoverOnShareBox = [false, false, false, false, false];\n  }\n\n  updatePostListShown(event: any) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        pageIndex: event.pageIndex\n      }\n    }\n    this.route.navigate(['/LatestPosts'], navigationExtras);\n  }\n\n  delete(postId: string) {\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.postListService.deletePost(postId).subscribe((reviewPost: ReviewPost) => {\n        this.postList = this.postList.filter((reviewPost: ReviewPost) => {\n          return reviewPost._id != postId;\n        });\n        var start = this.pageIndex * 5;\n        this.postListShown = this.postList.slice(start, start + 5);\n      })\n    })\n  }\n\n  updatePostListLikeAndDislike() {\n    this.postListLike = this.postListService.getPostListLike();\n    this.postListDislike = this.postListService.getPostListDislike();\n  }\n\n  onClickLikePost(post: ReviewPost) {\n    var postId = post._id;\n    if (this.postListDislike.includes(postId)) {\n      post.numOfDislikes--;\n      post.numOfLikes++;\n      this.postListService.cancelDislikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.likePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListLike.includes(postId)) {\n      post.numOfLikes++;\n      this.postListService.likePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfLikes--;\n      this.postListService.cancelLikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onClickDislikePost(post: ReviewPost) {\n    var postId = post._id;\n    if (this.postListLike.includes(postId)) {\n      post.numOfLikes--;\n      post.numOfDislikes++;\n      this.postListService.cancelLikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListDislike.includes(postId)) {\n      post.numOfDislikes++;\n      this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfDislikes--;\n      this.postListService.cancelDislikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onCopyPost(post: ReviewPost, copyContent: string) {\n    post.numOfShares++;\n    const oInput = document.createElement('textarea');\n    var postId = post._id;\n    oInput.value = copyContent + '\\n@ModuleReviewsSharing';\n    document.body.appendChild(oInput);\n    oInput.select();\n    document.execCommand('Copy');\n    oInput.style.display = 'none';\n    this.snackBar.open('Review post copied!', '', {\n      duration: 2000,\n    });\n    this.postListService.sharePost(postId).subscribe((post_1: ReviewPost) => {\n    });\n  } \n\n  ifLike(postId: string) {\n    return this.postListLike.includes(postId);\n  }\n\n  ifDislike(postId: string) {\n    return this.postListDislike.includes(postId);\n  }\n\n  mouseLeaveShareBtn(key: number) {\n    setTimeout(() => this.hoverOnShareBtn[key] = false, 200);\n  }\n\n}\n","<main class=\"flex-container\">\n    <div class=\"left-panel\">\n        <div class=\"mat-display-1\">Latest Posts</div>\n        <mat-card class=\"no-reviews-yet mat-h1\" *ngIf=\"postList.length==0\">\n            No reviews yet!\n            <mat-icon>sentiment_very_dissatisfied</mat-icon>\n        </mat-card>\n        <mat-card *ngFor=\"let post of postListShown; let key=index\">\n            <mat-card-header class=\"flex-container\">\n                <div mat-card-avatar class=\"header-image\" [style.background-image]=\"'url(' + post.headerImage + ')'\">\n                </div>\n                <mat-card-title class=\"flex-container\">\n                    <span class=\"header\">\n                        {{post.moduleInfo.moduleCode}} - {{post.moduleInfo.title}}\n                        <span class=\"mat-caption\">Under Prof {{post.moduleInfo.prof}}, {{post.moduleInfo.acadYear}} /\n                            {{post.moduleInfo.semester}}\n                        </span>\n                    </span>\n                </mat-card-title>\n                <div class=\"view-btn\">\n                    <button mat-icon-button matTooltip=\"view\" (click)=\"goModule(post.moduleInfo.moduleCode)\">\n                        <mat-icon class=\"icon-btn\">search</mat-icon>\n                    </button>\n\n                    <button mat-icon-button matTooltip=\"report\" (click)=\"goReport(post._id)\" *ngIf=\"post.reportList.length==0\">\n                        <mat-icon class=\"icon-btn\">add_alert</mat-icon>\n                    </button>\n\n                    <button mat-icon-button matTooltip=\"Errors were reported in this post!\" *ngIf=\"post.reportList.length>0\">\n                        <mat-icon style=\"color:red\">\n                            priority_high\n                        </mat-icon>\n                    </button>\n\n                    <button mat-icon-button matTooltip=\"delete\" (click)=\"delete(post._id)\" *ngIf=\"isSuccessfulLogin\">\n                        <mat-icon class=\"icon-btn\">delete</mat-icon>\n                    </button>\n                </div>\n                <mat-card-subtitle>\n                    {{post.date}} - {{post.time}} by {{userName}}\n                </mat-card-subtitle>\n            </mat-card-header>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-content>\n                <div class=\"review\">\n                    <pre class=\"mat-body\">\n                        {{post.reviewAndRatings.review}}\n                    </pre>\n                </div>\n\n                <div class=\"extra-info mat-caption\">\n                    Expected Grade: {{post.extraInfo.gradeExpected}}\n                </div>\n\n                <div class=\"extra-info mat-caption\">\n                    Grade Obtained: {{post.extraInfo.gradeObtained}}\n                </div>\n            </mat-card-content>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-actions class=\"flex-container\">\n                <div class=\"flex-container ratings\">\n                    <div matTooltip=\"10 for most satisfied\">\n                        general: {{post.reviewAndRatings.general}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>2&&post.reviewAndRatings.general<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>4&&post.reviewAndRatings.general<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>6&&post.reviewAndRatings.general<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most difficult\">\n                        difficulty: {{post.reviewAndRatings.difficulty}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>6&&post.reviewAndRatings.difficulty<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>4&&post.reviewAndRatings.difficulty<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>2&&post.reviewAndRatings.difficulty<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty<3\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for heaviest workload\">\n                        workload: {{post.reviewAndRatings.workload}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>6&&post.reviewAndRatings.workload<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>4&&post.reviewAndRatings.workload<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>2&&post.reviewAndRatings.workload<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most willing to recommend\">\n                        recommend: {{post.reviewAndRatings.recommend}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>2&&post.reviewAndRatings.recommend<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>4&&post.reviewAndRatings.recommend<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>6&&post.reviewAndRatings.recommend<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>8\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"btns\">\n                    <button mat-icon-button matTooltip=\"like\" (click)=\"onClickLikePost(post)\">\n                        <mat-icon class=\"icon-btn\" [ngClass]=\"{'blue-color': ifLike(post._id)}\">thumb_up</mat-icon>\n                        {{post.numOfLikes}}\n                    </button>\n                    <button mat-icon-button matTooltip=\"dislike\" (click)=\"onClickDislikePost(post)\">\n                        <mat-icon class=\"icon-btn\" [ngClass]=\"{'blue-color': ifDislike(post._id)}\">thumb_down</mat-icon>\n                        {{post.numOfDislikes}}\n                    </button>\n                    <button mat-icon-button matTooltip=\"share\" (mouseover)=\"hoverOnShareBtn[key] = true\"\n                        (mouseleave)=\"mouseLeaveShareBtn(key)\">\n                        <mat-icon class=\"icon-btn\">share</mat-icon>\n                        {{post.numOfShares}}\n                    </button>\n                    <mat-card class=\"share-box\" *ngIf=\"hoverOnShareBtn[key]||hoverOnShareBox[key]\"\n                        (mouseover)=\"hoverOnShareBox[key]=true\" (mouseleave)=\"hoverOnShareBox[key]=false\">\n                        <mat-card-title>\n                            Copy & Share\n                            <button mat-icon-button (click)=\"onCopyPost(post, copyContent.innerHTML)\" class=\"copy-btn\"\n                                matTooltip=\"copy review post\">\n                                <mat-icon class=\"icon-btn\">\n                                    content_copy\n                                </mat-icon>\n                            </button>\n                        </mat-card-title>\n                        <mat-card-content>\n                            <pre class=\"mat-body\" #copyContent>\n{{post.moduleInfo.moduleCode}} - {{post.moduleInfo.title}} taken by {{userName}}\nunder {{post.moduleInfo.prof}}, {{post.moduleInfo.acadYear}} / {{post.moduleInfo.semester}}:\n{{post.reviewAndRatings.review}}\ngeneral: {{post.reviewAndRatings.general}} / 10 (10 for most satisfied)         difficulty: {{post.reviewAndRatings.difficulty}} / 10 (10 for most difficult)\nworkload: {{post.reviewAndRatings.workload}} / 10 (10 for heaviest workload)    recommend: {{post.reviewAndRatings.recommend}} / 10 (10 for most willing to recommend)\n                        </pre>\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n            </mat-card-actions>\n        </mat-card>\n        <mat-paginator [length]=\"postList.length\" \n            pageSize=\"5\" showFirstLastButtons=\"true\" hidePageSize=\"true\"\n            [pageIndex]=\"pageIndex\"\n            (page)=\"updatePostListShown($event)\"></mat-paginator>\n    </div>\n    <div class=\"right-panel\">\n        <app-data-collected></app-data-collected>\n    </div>\n</main>","import { Component, OnInit, Input } from '@angular/core';\nimport { SearchService } from '../../../services/search.service';\nimport { PostListService } from '../../../services/post-list.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { RefinementList } from '../../../refinementList';\nimport { Module } from '../../../module';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-main-board',\n  templateUrl: './main-board.component.html',\n  styleUrls: ['./main-board.component.css']\n})\nexport class MainBoardComponent implements OnInit {\n\n  public refinementList: RefinementList = new RefinementList([], [], [], []);\n\n  public selectorList: any = ['Faculty', 'Department', 'ModuleCredit', 'Level'];\n\n  public searchInput: string = '';\n\n  public prof: string = '';\n\n  public acadYear: string = '';\n\n  public filteredModuleList: Module[] = [];\n\n  public moduleListShown: Module[] = [];\n\n  public sortOption: string = 'moduleCode';\n\n  public showSpinner: boolean = false;\n\n  @Input('searchInput') searchInputFromFather: string;\n\n  constructor(public searchService: SearchService,\n    public route: Router,\n    public postListService: PostListService) { }\n\n  ngOnInit(): void {\n    if (this.searchInputFromFather) {\n      this.searchInput = this.searchInputFromFather;\n    }\n    this.showSpinner = true;\n    this.search();\n  }\n\n  sortFilteredModuleList() {\n    this.filteredModuleList.sort(this.getSortMethod(this.sortOption));\n    this.moduleListShown = this.filteredModuleList.slice(0, 15);\n    this.updateNumOfReviews();\n  }\n\n  getSortMethod(key: string) {\n    if (key == 'moduleCredit') {\n      return (a: Module, b: Module) => {\n        return parseInt(a[key]) > parseInt(b[key]) ? 1 : -1;\n      }\n    } else {\n      return (a: Module, b: Module) => {\n        return a[key] > b[key] ? 1 : -1;\n      }\n    }\n  }\n\n  updateNumOfReviews() {\n    var arrOfCountRes = [];\n    this.moduleListShown.forEach((module: Module) => {\n      arrOfCountRes.push(this.postListService.countPostList(module.moduleCode));\n    })\n    forkJoin(arrOfCountRes).subscribe((listOfNumOfReviews: number[]) => {\n      this.moduleListShown.forEach((module: Module, index: number) => {\n        module.numOfReviews = listOfNumOfReviews[index];\n      })\n    })\n  }\n\n  goPostReviews(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/PostReview'], navigationExtras);\n  }\n\n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  updateRefinementList(refinementList: RefinementList) {\n    this.refinementList = refinementList;\n    this.search();\n  }\n\n  search() {\n    this.searchService.search(this.searchInput, this.refinementList).subscribe((searchResult: Module[]) => {\n      this.showSpinner = false;\n      this.filteredModuleList = searchResult;\n      this.moduleListShown = this.filteredModuleList.slice(0, 15);\n      this.filteredModuleList.forEach((module: Module) => {\n        module.numOfReviews = 0;\n      })\n      this.updateNumOfReviews();\n      this.sortFilteredModuleList();\n    });\n  }\n\n  reverseFilteredModuleList() {\n    this.filteredModuleList = this.filteredModuleList.reverse()\n    this.moduleListShown = this.filteredModuleList.slice(0, 15);\n    this.updateNumOfReviews();\n  }\n\n  updateModuleListShown(event: any) {\n    var start = event.pageIndex * 15;\n    this.moduleListShown = this.filteredModuleList.slice(start, start + 15);\n  }\n}\n","<div class=\"main-board\">\n    <app-refinement-list (sendRefinementList)=\"updateRefinementList($event)\"></app-refinement-list>\n    <div class=\"header\">\n        <div class=\"search-box\">\n            <mat-icon>search</mat-icon>\n            <mat-form-field>\n                <mat-label>Module Code or Title</mat-label>\n                <input type=\"text\" class=\"mat-h3\" matInput [(ngModel)]=\"searchInput\" placeholder=\"CS2100\"\n                    (input)=\"search(); paginator.firstPage()\">\n                <button mat-button *ngIf=\"searchInput\" matSuffix mat-icon-button aria-label=\"Clear\"\n                    (click)=\"searchInput=''; search()\">\n                    <mat-icon>close</mat-icon>\n                </button>\n            </mat-form-field>\n        </div>\n\n    </div>\n    <mat-divider></mat-divider>\n\n\n    <div class=\"search-result\">\n        <div class=\"flex-container\">\n            <div class=\"number-of-modules-found\">\n                {{filteredModuleList.length}} Modules Found\n            </div>\n\n            <div class=\"sort-options\">\n                <mat-form-field>\n                    <mat-label>Sort by:</mat-label>\n                    <mat-select [(ngModel)]=\"sortOption\" name=\"sortOption\" (selectionChange)=\"sortFilteredModuleList()\">\n                        <mat-option value=\"moduleCode\">\n                            module code\n                        </mat-option>\n                        <mat-option value=\"title\">\n                            module title\n                        </mat-option>\n                        <mat-option value=\"moduleCredit\">\n                            module credit\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <button mat-icon-button (click)=\"reverseFilteredModuleList()\">\n                    <mat-icon matTooltip=\"reverse\" class=\"icon-btn\">refresh</mat-icon>\n                </button>\n            </div>\n        </div>\n        <mat-card class=\"module-list\">\n            <mat-spinner [style.display]=\"showSpinner ? 'block' : 'none'\"></mat-spinner>\n            <div *ngFor=\"let module of moduleListShown; let key=index\" class=\"flex-container\">\n                <button mat-button class=\"module-btn\" (click)=\"goModule(module.moduleCode)\">\n                    <mat-icon>search</mat-icon>\n                    <span>{{module.moduleCode}} - {{module.title}}</span>\n                    <span class=\"mat-caption\">\n                        {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}\n                    </span>\n                </button>\n                <div class=\"review-action flex-container\">\n                    <span class=\"number-of-reviews\" matTooltip=\"number of reviews\">{{module.numOfReviews}}</span>\n                    <button mat-icon-button class=\"add-btn\" (click)=\"goPostReviews(module.moduleCode)\"\n                        matTooltip=\"add reviews\">\n                        <mat-icon class=\"icon-btn\">add_circle</mat-icon>\n                    </button>\n                </div>\n            </div>\n            <div *ngIf=\"moduleListShown.length<15\" class=\"bottom\">\n                Already at the bottom!\n            </div>\n        </mat-card>\n        <mat-paginator [length]=\"filteredModuleList.length\" pageSize=\"15\" showFirstLastButtons=\"true\"\n            hidePageSize=\"true\" (page)=\"updateModuleListShown($event)\" #paginator></mat-paginator>\n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { RefinementListService } from '../../../services/refinement-list.service';\nimport { RefinementList } from 'src/app/refinementList';\n\n@Component({\n  selector: 'app-refinement-list',\n  templateUrl: './refinement-list.component.html',\n  styleUrls: ['./refinement-list.component.css']\n})\nexport class RefinementListComponent implements OnInit {\n\n  public refinementList: RefinementList = new RefinementList([], [], [], []);\n\n  public selectorList: any = ['Faculty', 'Department', 'ModuleCredit', 'Level'];\n\n  @Output() sendRefinementList = new EventEmitter();\n\n  constructor(public refinementListService: RefinementListService) { }\n\n  ngOnInit(): void {\n    this.refinementListService.getRefinementList().subscribe((refinementList: RefinementList) => {\n      this.refinementList = refinementList;\n      this.sendRefinementList.emit(this.refinementList);\n    });\n  }\n\n  deleteRefinement(selector: string, refinement: string) {\n    this.refinementListService.deleteRefinement(selector, refinement);\n  }\n}\n","<div class=\"refinement-list\" *ngIf=\"!refinementList.isEmpty()\">\n    <div *ngFor=\"let selector of selectorList\" class=\"refinement-container\">\n        <span *ngIf=\"refinementList[selector].length>0\">\n            <span class=\"mat-h3\">{{selector}}: </span>\n            <button mat-button (click)=\"deleteRefinement(selector, refinement)\"\n                *ngFor=\"let refinement of refinementList[selector]\">\n                {{refinement}}\n                <mat-icon>cancel</mat-icon>\n            </button>\n        </span>\n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { RefinementListService } from '../../../services/refinement-list.service';\n\n@Component({\n  selector: 'app-refinement-table',\n  templateUrl: './refinement-table.component.html',\n  styleUrls: ['./refinement-table.component.css']\n})\nexport class RefinementTableComponent implements OnInit {\n\n  public selectorList: string[] = ['Faculty', 'Department', 'ModuleCredit', 'Level'];\n\n  public facultyList: any = {\n    'A':['Arts and Social Science'],\n    'C':['Computing', 'Cont and Lifelong Education'],\n    'D':['Dentistry', 'Design and Environment', 'Duke-NUS Medical School'],\n    'E':['Engineering'],\n    'I':['Institute of Systems Science'],\n    'L':['LKY School of Public Policy',\n    'Logistics Inst-Asia Pac'],\n    'M':['Multi Disciplinary Programme'],\n    'N':['NUS',\n    'NUS Business School',\n    'NUS Graduate Sch for Int Science and Engineering'],\n    'R':['Residential College',\n    'Risk Management Institute',],\n    'S':['Science',\n    'SSH School of Public Health',],\n    'T':['Temasek Defence Sys. Institute',],\n    'U':['University Scholars Programme',],\n    'Y':['Yale-NUS College',\n    'Yong Loo Lin Sch of Medicine',\n    'YST Conservatory of Music']\n  }\n\n  public more: any = {\n    Faculty: false,\n    Department: false\n  }\n\n  public conditionList: any = {\n    'Department': [\n      'Accounting',\n      'Architecture',\n      'Chemistry',\n      'Civil and Environmental Engineering',\n      'Computer Science',\n      'Mathematics',\n      'Mechanical Engineering',\n      'Pharmacy',\n    ],\n    'Faculty': [\n      'Arts and Social Science',\n      'NUS Business School',\n      'Computing',\n      'Dentistry',\n      'Engineering',\n      'Law',\n      'Science',\n    ],\n    'ModuleCredit': [\n      '0-3 MC', '4 MC', '5-8 MC', 'More than 8 MC'\n    ],\n    'Level': [\n      '1000', '2000', '3000', '4000', '5000', '6000'\n    ]\n  };\n\n\n  public initialList: any = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', \n    'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\n  public departmentList: any = {\n    'A':\n      ['Accounting',\n        'Alice Lee Center for Nursing Studies',\n        'Analytics and Operations',\n        'Anatomy',\n        'Architecture',],\n    'B':\n      ['Biochemistry',\n        'Biological Sciences',\n        'Biomedical Engineering',\n        'BIZ Dean\\'s Office',\n        'Building'],\n    'C':\n      ['Center for Engl Lang Comms',\n        'Center for Quantum Technologies',\n        'Centre for Language Studies',\n        'Chemical and Biomolecular Engineering',\n        'Chemistry',\n        'Chinese Studies',\n        'Chua Thian Poh Comm Leader Center',\n        'Civil & Environmental Engineering',\n        'College of Alice and Peter Tan',\n        'Communications and New Media',\n        'Computer Science',\n        'Computing and Engineering Programme',],\n    'D':\n      ['Division of Graduate Dental Studies',\n        'Division of Graduate Medical Studies',\n        'Duke-NUS Dean\\'s Office'],\n    'E':\n      ['Economics',\n        'Electrical and Computer Engineering',\n        'Engineering Science Programme',\n        'English Language and Literature',],\n    'F':\n    [\n    'FASS Dean\\'s Office/Office of Programmes',\n        'Finance',\n        'FoD Dean\\'s Office',\n        'FoE Dean\\'s Office',\n        'FoL Dean\\'s Office',\n        'Food Science and Technology',\n        'FoS Dean\\'s Office',\n      ],\n    'G':\n      ['Geography'],\n    'H':\n      [\n        'History',],\n    'I':\n        ['Industrial Design',\n        'Industrial Systems Engineering and Management',\n        'Information Systems and Analytics',\n        'Institute of Systems Science'],\n    'J':\n      ['Japanese Studies'],\n    'L':\n      ['LKYSPP Dean\\'s Office',\n        'Logistics Inst - Asia Pac'],\n    'M':\n      ['Malay Studies',\n        'Management and Organisation',\n        'Marketing',\n        'Materials Science and Engineering',\n        'Mathematics',\n        'Mechanical Engineering',\n        'Mechanobiology Institute (MBI)',\n        'Microbiology and Immunology'],\n    'N':\n      ['NGS Dean\\'s Office',\n        'NUS Entrepreneurship Centre',\n        'NUS Medicine Dean\\'s Office'],\n    'O':\n      ['Office of Sr Dy Pres and Provost'],\n    'P':\n      ['Pathology',\n        'Pharmacology',\n        'Pharmacy',\n        'Philosophy',\n        'Physics',\n        'Physiology',\n        'Political Science',\n        'Psychology'],\n    'R':\n      ['Real Estate',\n        'Residential College 4',\n        'Risk Management Institute'],\n    'S':\n        ['SCALE Dean\\'s Office',\n        'SDE Dean\\'s Office',\n        'SoC Dean\\'s Office',\n        'Social Work',\n        'Sociology',\n        'South Asian Studies',\n        'Southeast Asian Studies',\n        'SSH School of Public Health Dean\\'s Office',\n        'Statistics and Applied Probability',\n        'Strategy and Policy'],\n    'T':\n      [\n        'Temasek Defence Systems Inst',\n        'Tembusu College'\n      ],\n    'U':\n        ['University Scholars Programme'],\n    'Y':\n      ['Yale-NUS College',\n    'YSTCM Dean\\'s Office'],\n  }\n\n  public fullList: any = {\n    Faculty: this.facultyList,\n    Department: this.departmentList\n  }\n\n\n  @Output() sendMore = new EventEmitter<string>();\n  @Output() sendCloseDrawer = new EventEmitter();\n\n  constructor(public refinementListService: RefinementListService) { }\n\n  ngOnInit(): void {\n  }\n\n  addRefinement(selector: string, refinement: string) {\n    this.refinementListService.addRefinement(selector, refinement);\n  }\n\n  showMore(selector: string) {\n    this.more[selector] = true; \n    this.sendMore.emit(this.more);\n  }\n\n  showLess(selector: string) {\n    this.more[selector] = false; \n    this.sendMore.emit(this.more);\n  }\n\n  closeDrawer() {\n    this.sendCloseDrawer.emit();\n    this.resetMore();\n  }\n\n  resetMore() {\n    this.more = {\n      'Department': false,\n      'Faculty': false\n    }\n    this.sendMore.emit(this.more);\n  }\n}\n","<div class=\"flex-container\">\n    <div>\n        <div class=\"selector-container\" *ngFor=\"let selector of selectorList; let key=index\">\n            <span class=\"mat-h1\">{{selector}}</span>\n            <div *ngIf=\"!more[selector]\">\n                <button mat-button (click)=\"addRefinement(selector, condition)\" *ngFor=\"let condition of conditionList[selector]\">\n                    {{condition}}\n                </button>\n            </div>\n            <div *ngIf=\"more[selector]\">\n                <div *ngFor=\"let initial of initialList\">\n                    <span *ngIf=\"fullList[selector][initial]\">\n                        <div class=\"mat-h3\"> {{initial}} </div>\n                        <div>\n                            <button (click)=\"addRefinement(selector, refinement)\" *ngFor=\"let refinement of fullList[selector][initial]\"\n                                mat-button>\n                                {{refinement}}\n                            </button>\n                        </div>\n                    </span>\n                </div>\n            </div>\n            <div class=\"more-btn\" *ngIf=\"selector=='Faculty' || selector=='Department'\">\n                <button mat-button color=\"primary\" *ngIf=\"!more[selector]\" (click)=\"showMore(selector)\">\n                    More</button>\n                <button mat-button color=\"primary\" *ngIf=\"more[selector]\" (click)=\"showLess(selector)\">Less</button>\n            </div>\n\n            <mat-divider *ngIf=\"key!=selectorList.length - 1\"></mat-divider>\n        </div>\n    </div>\n    <div class=\"btn-container\">\n        <button mat-button class=\"back-btn\" (click)=\"closeDrawer()\">\n            <mat-icon>arrow_back_ios</mat-icon>\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  public widthOfDrawer: string = '40%';\n  public widthOfMain: string = '100%';\n\n  public hasBackdrop: boolean = false;\n\n  public status: any = {\n    opened: false,\n    more: {\n      'Faculty': false,\n      'Department': false\n    }\n  }\n\n  public searchInput: string = '';\n\n  constructor(public route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(data => {\n      if (data) {\n        this.searchInput = data.searchInput;\n      }\n    })\n  }\n\n  updateOpened() {\n    this.status.opened = !this.status.opened;\n    this.updateWidthOfMain();\n  }\n\n\n  updateMore(more: any) {\n    this.status.more = more;\n    this.updateWidthOfDrawer(more);\n  }\n\n  updateWidthOfDrawer(more: any) {\n    if (more['Department']) {\n      this.widthOfDrawer = '70%';\n      this.hasBackdrop = true;\n    } else if (more['Faculty']) {\n      this.widthOfDrawer = '45%';\n      this.hasBackdrop = true;\n    } else {\n      this.widthOfDrawer = '40%';\n      this.hasBackdrop = false;\n    }\n  }\n\n  updateWidthOfMain() {\n    if (this.status.opened) {\n      this.widthOfMain = '60%';\n    } else {\n      this.widthOfMain = '100%';\n    }\n  }\n}\n","<mat-drawer-container [hasBackdrop]=\"hasBackdrop\">\n    <mat-drawer #drawer mode=\"push\" [style.width]=\"widthOfDrawer\" (openedChange)=\"updateOpened()\">\n        <app-refinement-table #RefinementTable (sendMore)=\"updateMore($event)\" (sendCloseDrawer)=\"drawer.toggle()\">\n        </app-refinement-table>\n    </mat-drawer>\n    <main [style.width]=\"widthOfMain\">\n        <button mat-button class=\"forward-btn\" (click)=\"drawer.toggle()\" *ngIf=\"!drawer.opened\">\n            <mat-icon>arrow_forward_ios</mat-icon>\n        </button>\n        <div>\n            <app-main-board [searchInput]=\"searchInput\"></app-main-board>\n        </div>\n    </main>\n</mat-drawer-container>","import { Component, OnInit } from '@angular/core';\nimport { Module } from 'src/app/module';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from \"@angular/common/http\";\nimport { SearchService } from \"../../../services/search.service\";\n\n@Component({\n  selector: 'app-module-description',\n  templateUrl: './module-description.component.html',\n  styleUrls: ['./module-description.component.css']\n})\nexport class ModuleDescriptionComponent implements OnInit {\n\n  public module: Module = new Module('', '', '', '', '', '', 0);\n\n  public description: string = '';\n\n  constructor(public activatedRoute: ActivatedRoute, \n    public http: HttpClient,\n    public searchService: SearchService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n      this.searchService.getModule(data.moduleCode).subscribe((module: Module) => {\n        this.module = module;\n        this.description = this.module.description;\n        document.getElementsByTagName('a')[0].\n        setAttribute('href', 'https://nusmods.com/modules/' + this.module.moduleCode + '/' + this.module.title)\n      })\n    })\n  }\n\n}\n","<mat-card>\n    <div class=\"mat-body\">\n        {{description}}\n    </div>\n</mat-card>\n<div class=\"mat-caption\">For more official information, please go to <a class=\"https://nusmods.com/modules?sem[0]=1&sem[1]=2&sem[2]=3&sem[3]=4\">NUSMods</a>.</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Answer } from 'src/app/answer';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { QuestionListService } from \"../../../services/question-list.service\";\nimport { Question } from 'src/app/Question';\nimport { AdminAccountService } from 'src/app/services/admin-account.service';\n\n@Component({\n  selector: 'app-question-list',\n  templateUrl: './question-list.component.html',\n  styleUrls: ['./question-list.component.css']\n})\nexport class QuestionListComponent implements OnInit {\n\n  public moduleCode: string = '';\n\n  public questionList: Question[] = [];\n\n  public questionListShown: Question[] = [];\n\n  public questionEntered: string = '';\n\n  public answerEntered: string = '';\n\n  public ifPostAnAnswer: boolean[] = [];\n\n  public ifAskAQuestion: boolean = false;\n\n  public userName: string = 'Anonymous';\n\n  public isSuccessfulLogin: boolean = false;\n\n  public pageIndex: number = 0;\n\n  constructor(public activatedRoute: ActivatedRoute,\n    public http: HttpClient,\n    public questionListService: QuestionListService,\n    public adminAccountService: AdminAccountService) { }\n\n  ngOnInit(): void {\n    if (this.adminAccountService.getAdminAccount()) {\n      this.isSuccessfulLogin = true;\n    }\n    this.ifPostAnAnswer = this.questionList.map((question: Question) => false);\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n      this.moduleCode = data.moduleCode;\n      this.updateQuestionList();\n    })\n  }\n\n  updateQuestionList() {\n    this.questionListService.getQuestionListOfModule(this.moduleCode).subscribe((quesitonList: Question[]) => {\n      this.questionList = quesitonList;\n      this.questionListShown = this.questionList.slice(0, 3);\n    })\n  }\n\n  showQuestionForm() {\n    this.ifAskAQuestion = true;\n  }\n\n  showAnswerForm(key: number) {\n    this.ifPostAnAnswer[key] = true;\n  }\n\n  updateQuestionListShown(event: any) {\n    this.pageIndex = event.pageIndex;\n    var start = 3 * this.pageIndex;\n    this.questionListShown = this.questionList.slice(start, start + 3);\n  }\n\n  onSubmitAnAnswer(question: Question, key: number) {\n    var ans = new Answer(this.answerEntered, new Date().toLocaleDateString(), new Date().toLocaleTimeString().slice(0, 8), question._id);\n    var httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n    this.http.post('/answers', ans, httpOptions).subscribe((answer: Answer) => {\n      question.answerList.push(answer);\n      this.resetAnswerForm(key);\n    });\n  }\n\n  deleteAnswer(question: Question, answerId: string) {\n    this.http.delete('/answers/delete/' + answerId).subscribe((answer: Answer) => {\n      question.answerList = question.answerList.filter((ans: Answer) => {\n        return ans._id != answerId;\n      })\n    });\n  }\n\n  deleteQuestion(questionId: string) {\n    this.questionListService.deleteQuestion(questionId).subscribe((question: Question) => {\n      this.questionListService.getQuestionListOfModule(this.moduleCode).subscribe((quesitonList: Question[]) => {\n        this.questionList = quesitonList;\n        var start = this.pageIndex * 3;\n        this.questionListShown = this.questionList.slice(start, start + 3);\n      })\n    })\n  }\n\n  onSubmitAQuestion() {\n    var question = new Question(\n      this.questionEntered,\n      new Date().toLocaleDateString(),\n      new Date().toLocaleTimeString().slice(0, 8),\n      this.moduleCode\n    );\n    this.questionListService.addQuestion(question).subscribe((question: Question) => {\n      this.updateQuestionList();\n      this.ifPostAnAnswer.unshift(false);\n      this.resetQuestionForm();\n    });\n  }\n\n  resetAnswerForm(key: number) {\n    this.ifPostAnAnswer[key] = false;\n    this.answerEntered = '';\n  }\n\n  resetQuestionForm() {\n    this.ifAskAQuestion = false;\n    this.questionEntered = '';\n  }\n}\n","<div class=\"subheader\">\n    <div class=\"mat-body\">\n        number of questions: {{questionList.length}}\n    </div>\n    <div class=\"add-questions-btn\">\n        <button mat-icon-button (click)=\"showQuestionForm()\" matTooltip=\"ask a question\">\n            <mat-icon class=\"icon-btn\">add_circle</mat-icon>\n        </button>\n    </div>\n</div>\n\n<div class=\"form\" *ngIf=\"ifAskAQuestion\">\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Clearly state your question and keep it short.</mat-label>\n        <input type=\"text\" matInput [(ngModel)]=\"questionEntered\" name=\"questionEntered\" minlength=\"3\" required>\n    </mat-form-field>\n    <div class=\"form-actions\">\n        <button mat-raised-button (click)=\"resetQuestionForm()\" color=\"warn\">cancel</button>\n        <button mat-raised-button (click)=\"onSubmitAQuestion(); paginator.firstPage()\" color=\"primary\">submit</button>\n    </div>\n</div>\n\n<mat-card class=\"no-questions-yet mat-h1\" *ngIf=\"questionList.length==0\">\n    <mat-card-content>\n        <span class=\"mat-h3\">No questions yet!</span>\n        <mat-icon class=\"no-questions-icon\">sentiment_very_dissatisfied</mat-icon>\n    </mat-card-content>\n</mat-card>\n\n<mat-card class=\"question-container\" *ngFor=\"let question of questionListShown; let key=index\">\n    <mat-card-title class=\"flex-container\">\n        <div class=\"header\">\n            <mat-icon>question_answer</mat-icon>\n            {{question.content}}\n        </div>\n        <div class=\"delete-btn\">\n            <button mat-icon-button matTooltip=\"delete\" (click)=\"deleteQuestion(question._id)\" *ngIf=\"isSuccessfulLogin\">\n                <mat-icon class=\"icon-btn\">delete</mat-icon>\n            </button>\n        </div>\n    </mat-card-title>\n\n    <mat-card-subtitle>\n        {{question.date}} - {{question.time}} by {{userName}}\n    </mat-card-subtitle>\n\n    <mat-card-content>\n        <div class=\"no-answers-yet mat-h1\" *ngIf=\"question.answerList.length==0\">\n            <mat-card-content>\n                <span class=\"mat-h3\">No answers yet!</span>\n                <mat-icon class=\"no-answers-icon\">sentiment_very_dissatisfied</mat-icon>\n            </mat-card-content>\n        </div>\n\n        <ol>\n            <li class=\"answer-container\" *ngFor=\"let answer of question.answerList\">\n                <div class=\"flex-container\">\n                    <div class=\"header\">\n                        {{answer.content}}\n                    </div>\n                    <div class=\"delete-btn\">\n                        <button mat-icon-button matTooltip=\"delete\" (click)=\"deleteAnswer(question, answer._id)\" *ngIf=\"isSuccessfulLogin\">\n                            <mat-icon class=\"icon-btn\">delete</mat-icon>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"answer-caption mat-caption\">\n                    {{answer.date}} - {{answer.time}} by {{userName}}\n                </div>\n            </li>\n        </ol>\n\n        <div class=\"form\" *ngIf=\"ifPostAnAnswer[key]\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Clearly state your answer.</mat-label>\n                <input type=\"text\" \n                    matInput \n                    [(ngModel)]=\"answerEntered\" \n                    name=\"answerEntered\" \n                    minlength=\"3\" \n                    required>\n            </mat-form-field>\n\n            <div class=\"form-actions\">\n                <button mat-raised-button (click)=\"resetAnswerForm(key)\" color=\"warn\">cancel</button>\n                <button mat-raised-button (click)=\"onSubmitAnAnswer(question, key)\" color=\"primary\">submit</button>\n            </div>\n        </div>\n    </mat-card-content>\n\n    <mat-card-actions *ngIf=\"!ifPostAnAnswer[key]\">\n        <button mat-raised-button color=\"primary\" (click)=\"showAnswerForm(key)\" matTooltip=\"post an answer\">I have an\n            answer!</button>\n    </mat-card-actions>\n\n</mat-card>\n\n<mat-paginator [length]=\"questionList.length\" pageSize=\"3\" showFirstLastButtons=\"true\" hidePageSize=\"true\"\n    (page)=\"updateQuestionListShown($event)\" #paginator></mat-paginator>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { Module } from '../../../module';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { SearchService } from \"../../../services/search.service\";\nimport { PostListService } from \"../../../services/post-list.service\";\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminAccountService } from 'src/app/services/admin-account.service';\n\n@Component({\n  selector: 'app-review-list',\n  templateUrl: './review-list.component.html',\n  styleUrls: ['./review-list.component.css']\n})\nexport class ReviewListComponent implements OnInit {\n\n  public module: Module = new Module('', '', '', '', '', '', 0);\n\n  public reviewList: ReviewPost[] = [];\n\n  public reviewListShown: ReviewPost[] = [];\n\n  public userName: string = 'Anonymous';\n\n  public postListLike: string[] = [];\n\n  public postListDislike: string[] = [];\n  \n  public hoverOnShareBtn: boolean[];\n  \n  public hoverOnShareBox: boolean[];\n\n  public isSuccessfulLogin: boolean = false;\n\n  public pageIndex: number = 0;\n\n  constructor(public route: Router,\n    public activatedRoute: ActivatedRoute,\n    public searchService: SearchService,\n    public postListService: PostListService,\n    public snackBar: MatSnackBar,\n    public adminAccountService: AdminAccountService) { }\n\n  ngOnInit(): void {\n    this.updatePostListLikeAndDislike();\n    this.resetHoverOn();\n    if (this.adminAccountService.getAdminAccount()) {\n      this.isSuccessfulLogin = true;\n    }\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n      this.searchService.getModule(data.moduleCode).subscribe((module: Module) => {\n        this.module = module;\n      })\n\n      this.postListService.getPostListOfModule(data.moduleCode).subscribe((reviewList: ReviewPost[]) => {\n        this.reviewList = reviewList.reverse();\n        this.reviewListShown = this.reviewList.slice(0, 5);\n      })\n    })\n  }\n\n  addReviews() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.route.navigate(['/PostReview'], navigationExtras);\n  }\n\n  delete(postId: string) {\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.postListService.deletePost(postId).subscribe((postReview: ReviewPost) => {\n        this.reviewList = this.reviewList.filter((review: ReviewPost) => {\n          return review._id != postId;\n        })\n        var start = this.pageIndex * 5;\n        this.reviewListShown = this.reviewList.slice(start, start + 5);\n      })\n    })\n  }\n\n  updateReviewListShown(event: any) {\n    this.pageIndex = event.pageIndex;\n    var start = this.pageIndex * 5;\n    this.reviewListShown = this.reviewList.slice(start, start + 5);\n  }\n\n  updatePostListLikeAndDislike() {\n    this.postListLike = this.postListService.getPostListLike();\n    this.postListDislike = this.postListService.getPostListDislike();\n  }\n\n  onClickLikePost(post: ReviewPost) {\n    var postId = post._id;\n    if (this.postListDislike.includes(postId)) {\n      post.numOfDislikes--;\n      post.numOfLikes++;\n      this.postListService.cancelDislikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.likePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListLike.includes(postId)) {\n      post.numOfLikes++;\n      this.postListService.likePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfLikes--;\n      this.postListService.cancelLikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n        console.log(this.postListLike);\n      })\n    }\n  }\n\n  onClickDislikePost(post: ReviewPost) {\n    var postId = post._id;\n    if (this.postListLike.includes(postId)) {\n      post.numOfLikes--;\n      post.numOfDislikes++;\n      this.postListService.cancelLikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListDislike.includes(postId)) {\n      post.numOfDislikes++;\n      this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfDislikes--;\n      this.postListService.cancelDislikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onCopyPost(post: ReviewPost, copyContent: string) {\n    post.numOfShares++;\n    const oInput = document.createElement('textarea');\n    var postId = post._id;\n    oInput.value = copyContent;\n    document.body.appendChild(oInput);\n    oInput.select();\n    document.execCommand('Copy');\n    oInput.style.display = 'none';\n    this.snackBar.open('Review post copied!', '', {\n      duration: 2000,\n    });\n    this.postListService.sharePost(postId).subscribe((post_1: ReviewPost) => {\n    });\n  } \n\n  ifLike(postId: string) {\n    return this.postListLike.includes(postId);\n  }\n\n  ifDislike(postId: string) {\n    return this.postListDislike.includes(postId);\n  }\n\n  resetHoverOn() {\n    this.hoverOnShareBtn = [false, false, false, false, false];\n    this.hoverOnShareBox = [false, false, false, false, false];\n  }\n\n  mouseLeaveShareBtn(key: number) {\n    setTimeout(() => this.hoverOnShareBtn[key] = false, 200);\n  }\n\n  goReport(postId: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        postId: postId\n      }\n    }\n    this.route.navigate(['/Report'], navigationExtras);\n  }\n\n}\n","<div class=\"subheader\">\n    <div class=\"mat-body\">\n        number of reviews: {{reviewList.length}}\n    </div>\n    <div class=\"add-reviews-btn\">\n        <button mat-icon-button (click)=\"addReviews()\" matTooltip=\"add reviews\">\n            <mat-icon class=\"icon-btn\">add_circle</mat-icon>\n        </button>\n    </div>\n</div>\n<mat-card class=\"no-reviews-yet mat-h1\" *ngIf=\"reviewList.length==0\">\n    <mat-card-content>\n        <span class=\"mat-h3\">No reviews yet!</span>\n        <mat-icon class=\"no-reviews-icon\">sentiment_very_dissatisfied</mat-icon>\n    </mat-card-content>\n</mat-card>\n<mat-card *ngFor=\"let review of reviewListShown; let key=index\" class=\"review-container\">\n    <mat-card-header>\n        <div mat-card-avatar class=\"header-image\" [style.background-image]=\"'url(' + review.headerImage + ')'\"></div>\n        <mat-card-title class=\"flex-container\">\n            <div class=\"user-name\">\n                {{userName}}\n                <span class=\"mat-caption\">Under Prof {{review.moduleInfo.prof}}, {{review.moduleInfo.acadYear}} /\n                    {{review.moduleInfo.semester}}</span>\n            </div>\n        </mat-card-title>\n\n        <div class=\"header-actions\">\n            <button mat-icon-button matTooltip=\"report\" (click)=\"goReport(review._id)\" *ngIf=\"review.reportList.length==0\">\n                <mat-icon class=\"icon-btn\">add_alert</mat-icon>\n            </button>\n\n            <button mat-icon-button matTooltip=\"Errors were reported in this post!\" *ngIf=\"review.reportList.length>0\">\n                <mat-icon style=\"color:red\">\n                    priority_high\n                </mat-icon>\n            </button>\n\n            <button *ngIf=\"isSuccessfulLogin\" mat-icon-button matTooltip=\"delete\"\n                (click)=\"delete(review._id)\">\n                <mat-icon class=\"icon-btn\">delete</mat-icon>\n            </button>\n        </div>\n        <mat-card-subtitle>\n            {{review.date}} - {{review.time}}\n        </mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-divider></mat-divider>\n\n    <mat-card-content>\n        <div class=\"review\">\n            <pre class=\"mat-body\">\n                {{review.reviewAndRatings.review}}\n            </pre>\n        </div>\n        <div class=\"extra-info mat-caption\">\n            Expected Grade: {{review.extraInfo.gradeExpected}}\n        </div>\n\n        <div class=\"extra-info mat-caption\">\n            Grade Obtained: {{review.extraInfo.gradeObtained}}\n        </div>\n\n    </mat-card-content>\n    <mat-divider></mat-divider>\n\n    <mat-card-actions>\n        <div class=\"flex-container ratings\">\n            <div matTooltip=\"10 for most satisfied\">\n                general: {{review.reviewAndRatings.general}} / 10\n                <div class=\"icon\">\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general<3\">sentiment_very_dissatisfied\n                    </mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general>2&&review.reviewAndRatings.general<5\">\n                        sentiment_dissatisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general>4&&review.reviewAndRatings.general<7\">\n                        sentiment_satisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general>6&&review.reviewAndRatings.general<9\">\n                        sentiment_satisfied_alt</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n                </div>\n            </div>\n            <div matTooltip=\"10 for most difficult\">\n                difficulty: {{review.reviewAndRatings.difficulty}} / 10\n                <div class=\"icon\">\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied\n                    </mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>6&&review.reviewAndRatings.difficulty<9\">\n                        sentiment_dissatisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>4&&review.reviewAndRatings.difficulty<7\">\n                        sentiment_satisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>2&&review.reviewAndRatings.difficulty<5\">\n                        sentiment_satisfied_alt</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty<3\">sentiment_very_satisfied\n                    </mat-icon>\n                </div>\n            </div>\n            <div matTooltip=\"10 for heaviest workload\">\n                workload: {{review.reviewAndRatings.workload}} / 10\n                <div class=\"icon\">\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload>8\">sentiment_very_dissatisfied\n                    </mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload>6&&review.reviewAndRatings.workload<9\">\n                        sentiment_dissatisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload>4&&review.reviewAndRatings.workload<7\">\n                        sentiment_satisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload>2&&review.reviewAndRatings.workload<5\">\n                        sentiment_satisfied_alt</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n                </div>\n            </div>\n            <div matTooltip=\"10 for most willing to recommend\">\n                recommend: {{review.reviewAndRatings.recommend}} / 10\n                <div class=\"icon\">\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend<3\">sentiment_very_dissatisfied\n                    </mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend>2&&review.reviewAndRatings.recommend<5\">\n                        sentiment_dissatisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend>4&&review.reviewAndRatings.recommend<7\">\n                        sentiment_satisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend>6&&review.reviewAndRatings.recommend<9\">\n                        sentiment_satisfied_alt</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend>8\">sentiment_very_satisfied\n                    </mat-icon>\n                </div>\n            </div>\n        </div>\n        <div class=\"btns\">\n            <button mat-icon-button matTooltip=\"like\" (click)=\"onClickLikePost(review)\">\n                <mat-icon class=\"icon-btn\" [ngClass]=\"{'blue-color': ifLike(review._id)}\">thumb_up</mat-icon>\n                {{review.numOfLikes}}\n            </button>\n            <button mat-icon-button matTooltip=\"dislike\" (click)=\"onClickDislikePost(review)\">\n                <mat-icon class=\"icon-btn\" [ngClass]=\"{'blue-color': ifDislike(review._id)}\">thumb_down</mat-icon>\n                {{review.numOfDislikes}}\n            </button>\n            <button mat-icon-button matTooltip=\"share\" (mouseover)=\"hoverOnShareBtn[key] = true\"\n                (mouseleave)=\"mouseLeaveShareBtn(key)\">\n                <mat-icon class=\"icon-btn\">share</mat-icon>\n                {{review.numOfShares}}\n            </button>\n            <mat-card class=\"share-box\" *ngIf=\"hoverOnShareBtn[key]||hoverOnShareBox[key]\"\n                (mouseover)=\"hoverOnShareBox[key]=true\" (mouseleave)=\"hoverOnShareBox[key]=false\">\n                <mat-card-title>\n                    Copy & Share\n                    <button mat-icon-button (click)=\"onCopyPost(review, copyContent.innerHTML)\" class=\"copy-btn\"\n                        matTooltip=\"copy review review\">\n                        <mat-icon class=\"icon-btn\">\n                            content_copy\n                        </mat-icon>\n                    </button>\n                </mat-card-title>\n                <mat-card-content>\n                    <pre class=\"mat-body\" #copyContent>\n{{review.moduleInfo.moduleCode}} - {{review.moduleInfo.title}} taken by {{userName}}\nunder {{review.moduleInfo.prof}}, {{review.moduleInfo.acadYear}} / {{review.moduleInfo.semester}}:\n{{review.reviewAndRatings.review}}\ngeneral: {{review.reviewAndRatings.general}} / 10 (10 for most satisfied)       difficulty: {{review.reviewAndRatings.difficulty}} / 10 (10 for most difficult)\nworkload: {{review.reviewAndRatings.workload}} / 10 (10 for heaviest workload)  recommend: {{review.reviewAndRatings.recommend}} / 10 (10 for most willing to recommend)\n                        </pre>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </mat-card-actions>\n\n</mat-card>\n<mat-paginator [length]=\"reviewList.length\" pageSize=\"5\" showFirstLastButtons=\"true\" hidePageSize=\"true\"\n    (page)=\"updateReviewListShown($event)\"></mat-paginator>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { SearchService } from '../../services/search.service';\nimport { MyModulesService } from '../../services/my-modules.service';\nimport { ModuleListService } from '../../services/module-list.service';\nimport { Module } from 'src/app/module';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ReviewPost } from \"../../reviewPost\";\nimport { PostListService } from '../../services/post-list.service';\nimport { AverageRatingsService } from '../../services/average-ratings.service';\n\n@Component({\n  selector: 'app-module',\n  templateUrl: './module.component.html',\n  styleUrls: ['./module.component.css']\n})\nexport class ModuleComponent implements OnInit {\n\n  public module: Module = new Module('', '', '', '', '', '', 0);\n\n  public reviewListShown: ReviewPost[] = [];\n\n  public reviewList: ReviewPost[] = [];\n\n  public userName: string = 'Anonymous';\n\n  public activeBtn: string = 'Reviews';\n\n  public averageRatings: any = {\n    averageGeneral: 0,\n    averageDifficulty: 0,\n    averageWorkload: 0,\n    averageRecommend: 0,\n  };\n\n  public moreModuleList: Module[] = [];\n\n  public myModuleList: Module[] = [];\n\n  constructor(public route: Router, \n    public activatedRoute: ActivatedRoute, \n    public searchService: SearchService,\n    public myModuleService: MyModulesService,\n    public moduleListService: ModuleListService,\n    private snackBar: MatSnackBar,\n    public postListService: PostListService,\n    public averageRatingsService: AverageRatingsService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n\n      this.searchService.getModule(data.moduleCode).subscribe((module: Module) => {\n        this.module = module;\n        this.postListService.countPostList(module.moduleCode).subscribe((numOfReviews:number) => {\n          this.module.numOfReviews = numOfReviews;\n        })\n      });\n\n      this.postListService.getPostListOfModule(data.moduleCode).subscribe((postList: ReviewPost[]) => {\n        this.reviewList = postList;\n        this.averageRatings = this.averageRatingsService.getAverageRatingsByReviewList(this.reviewList);\n        this.reviewListShown = this.reviewList.slice(0, 5);\n      });\n\n      this.searchService.getMoreModuleList(data.moduleCode).subscribe((moreModuleList: Module[]) => {\n        this.moreModuleList = moreModuleList;\n      })\n\n      this.updateMyModuleList();\n    })\n  }\n\n  updateMyModuleList() {\n    this.myModuleList = this.myModuleService.getMyModuleList();\n  }\n\n  addToMyModules() {\n    this.myModuleService.addModule(this.module);\n    this.updateMyModuleList();\n    this.snackBar.open('Successfully added to my modules!', 'Close', {\n      verticalPosition: 'top',\n      duration: 2000\n    });\n  }\n\n  deleteFromMyModules() {\n    this.myModuleService.deleteModule(this.module.moduleCode);\n    this.updateMyModuleList();\n    this.snackBar.open('Successfully deleted from my modules!', 'Close', {\n      verticalPosition: 'top',\n      duration: 2000\n    });\n  }\n\n  isMyModule(moduleCode: string) {\n    return this.myModuleList.map((module: Module) => module.moduleCode).includes(moduleCode);\n  }\n\n  addReviews() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.route.navigate(['/PostReview'], navigationExtras);\n  }\n\n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  updateReviewListShown(event: any) {\n    var start = event.pageIndex * 5;\n    this.reviewListShown = this.reviewList.slice(start, start + 5);\n  }\n\n  loadReviewList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.activeBtn = 'Reviews';\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  loadDescription() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.activeBtn = 'Description';\n    this.route.navigate(['/Module/Description'], navigationExtras);\n  }\n\n  loadQuestionList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.activeBtn = 'Questions';\n    this.route.navigate(['/Module/QuestionList'], navigationExtras);\n  }\n\n  isReviewsActive() {\n    return location.pathname.includes('ReviewList');\n  }\n\n  isQuestionsActive() {\n    return location.pathname.includes('QuestionList');\n  }\n\n  isDescriptionActive() {\n    return location.pathname.includes('Description');\n  }\n\n}\n","<main>\n    <div class=\"left-panel\">\n        <div class=\"mat-display-1\">{{module.moduleCode}} - {{module.title}}\n            <button mat-icon-button (click)=\"addToMyModules()\" matTooltip=\"add to My Modules\" *ngIf=\"!isMyModule(module.moduleCode)\">\n                <mat-icon class=\"icon-btn\">star_outline</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"deleteFromMyModules()\" matTooltip=\"delete from My Modules\" color=\"primary\" *ngIf=\"isMyModule(module.moduleCode)\">\n                <mat-icon class=\"icon-btn\">star</mat-icon>\n            </button>\n        </div>\n        <mat-divider></mat-divider>\n\n        <div class=\"flex-container\">\n            <button mat-button (click)=\"loadReviewList()\" [ngClass]=\"{'navigation-btn': 'true', 'active-btn': isReviewsActive()}\">Reviews</button>\n            <button mat-button (click)=\"loadQuestionList()\" [ngClass]=\"{'navigation-btn': 'true', 'active-btn': isQuestionsActive()}\">Questions</button>\n            <button mat-button (click)=\"loadDescription()\" [ngClass]=\"{'navigation-btn': 'true', 'active-btn': isDescriptionActive()}\">Description</button>\n        </div>\n        <mat-divider></mat-divider>\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"right-panel\">\n        <mat-card>\n            <mat-card-title>\n                Average Ratings:\n            </mat-card-title>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-content>\n                <div class=\"flex-container\">\n                    <div class=\"average-rating\" matTooltip=\"10 for most satisfied\">\n                        general: {{averageRatings.averageGeneral}} / 10\n                    </div>\n                    <div class=\"average-rating\" matTooltip=\"10 for most difficult\">\n                        difficulty: {{averageRatings.averageDifficulty}} / 10\n                    </div>\n                </div>\n                <div class=\"flex-container\">\n                    <div class=\"average-rating\" matTooltip=\"10 for heaviest workload\">\n                        workload: {{averageRatings.averageWorkload}} / 10\n                    </div>\n                    <div class=\"average-rating\" matTooltip=\"10 for most willing to recommend\">\n                        recommend: {{averageRatings.averageRecommend}} / 10\n                    </div>\n                </div>\n                <div class=\"mat-hint\">\n                    number of reviews: {{module.numOfReviews}}\n                </div>\n            </mat-card-content>\n        </mat-card>\n\n        <mat-card>\n            <mat-card-title>\n                To see more:\n            </mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content class=\"more-module-list-container\">\n                <div *ngFor=\"let module of moreModuleList\">\n                    <mat-option class=\"more-module-option\" (click)=\"goModule(module.moduleCode)\" [matTooltip]=\"module.title\">\n                        <div class=\"module-title\">{{module.moduleCode}} - {{module.title}}</div>\n                        <div class=\"module-info\">\n                            {{module.faculty}} - {{module.department}} - {{module.moduleCredit}} MCs\n                        </div>\n                    </mat-option>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { MyModulesService } from '../../services/my-modules.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Module } from 'src/app/module';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { PostListService } from \"../../services/post-list.service\";\nimport { AverageRatingsService } from \"../../services/average-ratings.service\";\nimport { AverageRatings } from 'src/app/averageRatings';\n\n@Component({\n  selector: 'app-my-modules',\n  templateUrl: './my-modules.component.html',\n  styleUrls: ['./my-modules.component.css']\n})\nexport class MyModulesComponent implements OnInit {\n\n  public myModuleList: Module[] = [];\n\n  public listOfAverageRatings: any[] = [];\n\n  public listOfNumOfReviews: number[] = [];\n\n  constructor(public myModulesService: MyModulesService,\n    public route: Router,\n    private snackBar: MatSnackBar,\n    public postListService: PostListService,\n    public averageRatingsService: AverageRatingsService) { }\n\n  ngOnInit(): void {\n    this.myModuleList = this.myModulesService.getMyModuleList();\n    this.myModuleList.forEach((module: Module) => {\n      this.listOfNumOfReviews.push(0);\n      this.listOfAverageRatings.push(AverageRatings.emptyAverageRatings);\n    })\n    this.myModuleList.forEach((module: Module, index: number) => {\n      this.postListService.countPostList(module.moduleCode).subscribe((numOfReviews: number) => {\n        this.listOfNumOfReviews[index] = numOfReviews;\n      })\n    })\n    this.myModuleList.forEach((module: Module, index: number) => {\n      this.averageRatingsService.getAverageRatingsByModuleCode(module.moduleCode).subscribe((averageRatings: any) => {\n        this.listOfAverageRatings[index] = averageRatings;\n      })\n    })\n  }\n\n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  deleteModule(moduleCode: string) {\n    this.myModulesService.deleteModule(moduleCode);\n    this.myModuleList = this.myModulesService.getMyModuleList();\n    this.snackBar.open('Successfully deleted from my modules!', 'Close', {\n      verticalPosition: 'top',\n      duration: 1000\n    });\n  }\n\n  goModuleList() {\n    this.route.navigate(['ModuleList']);\n  }\n\n}\n","<main>\n    <mat-card *ngFor=\"let module of myModuleList; let key=index\">\n        <mat-card-title>\n            {{module.moduleCode}} - {{module.title}}\n        </mat-card-title>\n\n        <mat-card-subtitle>\n            {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}\n        </mat-card-subtitle>\n\n        <mat-card-content>\n            Average Ratings:\n            <div class=\"average-ratings-container\">\n                <div class=\"average-rating\" matTooltip=\"10 for most satisfied\">\n                    general: {{listOfAverageRatings[key].averageGeneral}} / 10\n                </div>\n                <div class=\"average-rating\" matTooltip=\"10 for most difficult\">\n                    difficulty: {{listOfAverageRatings[key].averageDifficulty}} / 10\n                </div>\n            </div>\n            <div class=\"average-ratings-container\">\n                <div class=\"average-rating\" matTooltip=\"10 for heaviest workload\">\n                    workload: {{listOfAverageRatings[key].averageWorkload}} / 10\n                </div>\n                <div class=\"average-rating\" matTooltip=\"10 for most willing to recommend\">\n                    recommend: {{listOfAverageRatings[key].averageRecommend}} / 10\n                </div>\n            </div>\n\n            <div class=\"mat-caption\">\n                number of reviews: {{listOfNumOfReviews[key]}}\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions>\n            <button mat-icon-button (click)=\"goModule(module.moduleCode)\">\n                <mat-icon matTooltip=\"view\" class=\"icon-btn\">search</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)=\"deleteModule(module.moduleCode)\">\n                <mat-icon matTooltip=\"delete\" class=\"icon-btn\">cancel</mat-icon>\n            </button>\n        </mat-card-actions>\n\n    </mat-card>\n\n    <mat-card class=\"no-modules-added-yet\" *ngIf=\"myModuleList.length==0\">\n        <mat-card-content>\n            <span class=\"mat-h1\">No modules added yet!</span>\n            <mat-icon>sentiment_very_dissatisfied</mat-icon>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button (click)=goModuleList() color=\"primary\">\n                Go to add my modules\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { ExtraInfo } from 'src/app/extraInfo';\n\n@Component({\n  selector: 'app-extra-info',\n  templateUrl: './extra-info.component.html',\n  styleUrls: ['./extra-info.component.css']\n})\nexport class ExtraInfoComponent implements OnInit {\n\n  public extraInfo: ExtraInfo = new ExtraInfo('', '');\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div class=\"mat-h1\">Extra Info:</div>\n    <div class=\"mat-hint\">(All your information will remain anonymous)</div>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Grade expected</mat-label>\n        <mat-select [(ngModel)]=\"extraInfo.gradeExpected\">\n            <mat-option value=\"A+\">A+</mat-option>\n            <mat-option value=\"A\">A</mat-option>\n            <mat-option value=\"A-\">A-</mat-option>\n            <mat-option value=\"B+\">B+</mat-option>\n            <mat-option value=\"B\">B</mat-option>\n            <mat-option value=\"B-\">B-</mat-option>\n            <mat-option value=\"C+\">C+</mat-option>\n            <mat-option value=\"C\">C</mat-option>\n            <mat-option value=\"D+\">D+</mat-option>\n            <mat-option value=\"D\">D</mat-option>\n            <mat-option value=\"F\">F</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Grade obtained</mat-label>\n        <mat-select [(ngModel)]=\"extraInfo.gradeObtained\">\n            <mat-option value=\"A+\">A+</mat-option>\n            <mat-option value=\"A\">A</mat-option>\n            <mat-option value=\"A-\">A-</mat-option>\n            <mat-option value=\"B+\">B+</mat-option>\n            <mat-option value=\"B\">B</mat-option>\n            <mat-option value=\"B-\">B-</mat-option>\n            <mat-option value=\"C+\">C+</mat-option>\n            <mat-option value=\"C\">C</mat-option>\n            <mat-option value=\"D+\">D+</mat-option>\n            <mat-option value=\"D\">D</mat-option>\n            <mat-option value=\"F\">F</mat-option>\n            <mat-option value=\"Dropped\">Dropped</mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { SearchService } from '../../../services/search.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { of } from 'rxjs';\nimport { RefinementList } from '../../../refinementList';\nimport { Module } from 'src/app/module';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-module-info',\n  templateUrl: './module-info.component.html',\n  styleUrls: ['./module-info.component.css']\n})\nexport class ModuleInfoComponent implements OnInit {\n\n  public prof = '';\n\n  public acadYear = '2019-2020';\n\n  public semester = 'Semester 1';\n\n  public selectedModule: Module;\n\n  public moduleListShown: Module[] = [];\n\n  public searchInput: string = '';\n\n  @Input() moduleCode: any;\n\n  constructor(public searchService: SearchService, public route: Router, public http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.searchService.search(this.searchInput, RefinementList.emptyRefinementList).subscribe((searchResult: Module[]) => {\n      this.moduleListShown = searchResult.slice(0, 10);\n    });\n    this.searchInput = this.moduleCode;\n  }\n\n  select(module: Module) {\n    this.selectedModule = module;\n    this.searchInput = module.moduleCode;\n  }\n\n  goModuleList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        searchInput: this.searchInput\n      }\n    }\n    this.route.navigate(['./ModuleList'], navigationExtras);\n  }\n\n  search() {\n    this.searchService.search(this.searchInput, RefinementList.emptyRefinementList).subscribe((searchResult: Module[]) => {\n      this.moduleListShown = searchResult.slice(0, 20);\n    });\n    this.selectedModule = undefined;\n  }\n\n  getModule() {\n    if (this.selectedModule) {\n      return of(this.selectedModule);\n    } else {\n      return this.searchService.getModule(this.searchInput);\n    }\n  }\n\n}\n","<div>\n    <div class=\"mat-h1\">Module Info:</div>\n    <mat-form-field class=\"module-code\" appearance=\"outline\">\n        <mat-label>Module Code or Title</mat-label>\n        <input matInput [matAutocomplete]=\"auto\" [(ngModel)]=\"searchInput\" (input)=\"search()\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let module of moduleListShown\" (click)=\"select(module)\">\n                <div class=\"module-info\">\n                    <div class=\"mat-h4\">{{module.moduleCode}} - {{module.title}} </div>\n                    <div class=\"mat-caption\"> {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}MCs </div>\n                </div>\n            </mat-option>\n            <button mat-button class=\"more-btn\" color=\"primary\" (click)=\"goModuleList()\">More</button>\n        </mat-autocomplete>\n      </mat-form-field>\n\n    <mat-form-field class=\"prof\" appearance=\"fill\">\n        <mat-label>Prof</mat-label>\n        <input type=\"text\" name=\"prof\" placeholder=\"Tan Eng Chye\" [(ngModel)]=\"prof\" matInput required>\n    </mat-form-field>\n\n    <mat-form-field class=\"acad-year\" appearance=\"fill\">\n        <mat-label>AcadYear</mat-label>\n        <mat-select [(ngModel)]=\"acadYear\">\n            <mat-option value=\"2019-2020\">19 - 20</mat-option>\n            <mat-option value=\"2018-2019\">18 - 19</mat-option>\n            <mat-option value=\"2017-2018\">17 - 18</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"semester\" appearance=\"fill\">\n        <mat-label>Semester</mat-label>\n        <mat-select [(ngModel)]=\"semester\">\n            <mat-option value=\"Semester 1\">Semester 1</mat-option>\n            <mat-option value=\"Semester 2\">Semester 2</mat-option>\n            <mat-option value=\"Special Term 1\">Special Term 1</mat-option>\n            <mat-option value=\"Special Term 2\">Special Term 2</mat-option>\n        </mat-select>\n    </mat-form-field>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ReviewAndRatings } from 'src/app/reviewAndRatings';\n\n@Component({\n  selector: 'app-review-and-ratings',\n  templateUrl: './review-and-ratings.component.html',\n  styleUrls: ['./review-and-ratings.component.css']\n})\nexport class ReviewAndRatingsComponent implements OnInit {\n\n  public reviewAndRatings: ReviewAndRatings = new ReviewAndRatings('\\nWorkload and Difficulty:\\nProf and Teaching method:\\nOther complaints and commendations:\\n', 5, 5, 5, 5);\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div class=\"mat-h1\">Review and Ratings:</div>\n    <div class=\"slider-box\">\n        <div class=\"mat-body-1\">general: {{reviewAndRatings.general}} / 10 <span class=\"mat-caption\">(10 for most satisfied)</span></div>\n        <mat-slider max=10 min=1 thumbLabel=true step=1 [(ngModel)]=\"reviewAndRatings.general\">\n        </mat-slider>\n        <mat-icon *ngIf=\"reviewAndRatings.general<3\">sentiment_very_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.general==3||reviewAndRatings.general==4\">sentiment_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.general==5||reviewAndRatings.general==6\">sentiment_satisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.general==7||reviewAndRatings.general==8\">sentiment_satisfied_alt</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n    </div>\n\n    <div class=\"slider-box\">\n        <div class=\"mat-body-1\">difficulty: {{reviewAndRatings.difficulty}} / 10 <span class=\"mat-caption\">(10 for most difficult)</span></div>\n        <mat-slider max=10 min=1 thumbLabel=true step=1 [(ngModel)]=\"reviewAndRatings.difficulty\">\n        </mat-slider>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty==7||reviewAndRatings.difficulty==8\">sentiment_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty==5||reviewAndRatings.difficulty==6\">sentiment_satisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty==3||reviewAndRatings.difficulty==4\">sentiment_satisfied_alt</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty<3\">sentiment_very_satisfied</mat-icon>\n    </div>\n\n    <div class=\"slider-box\">\n        <div class=\"mat-body-1\">workload: {{reviewAndRatings.workload}} / 10 <span class=\"mat-caption\">(10 for heaviest workload)</span></div>\n        <mat-slider max=10 min=1 thumbLabel=true step=1 [(ngModel)]=\"reviewAndRatings.workload\">\n        </mat-slider>\n        <mat-icon *ngIf=\"reviewAndRatings.workload>8\">sentiment_very_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.workload==7||reviewAndRatings.workload==8\">sentiment_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.workload==5||reviewAndRatings.workload==6\">sentiment_satisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.workload==3||reviewAndRatings.workload==4\">sentiment_satisfied_alt</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n    </div>\n\n    <div class=\"slider-box\">\n        <div class=\"mat-body-1\">recommend: {{reviewAndRatings.recommend}} / 10 <span class=\"mat-caption\">(10 for most willing to recommend)</span></div>\n        <mat-slider max=10 min=1 thumbLabel=true step=1 [(ngModel)]=\"reviewAndRatings.recommend\">\n        </mat-slider>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend<3\">sentiment_very_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend==3||reviewAndRatings.recommend==4\">sentiment_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend==5||reviewAndRatings.recommend==6\">sentiment_satisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend==7||reviewAndRatings.recommend==8\">sentiment_satisfied_alt</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend>8\">sentiment_very_satisfied</mat-icon>\n    </div>\n\n    <mat-form-field class=\"review\" appearance=\"fill\">\n        <mat-label>Review</mat-label>\n        <textarea name=\"review\" rows=\"20\" placeholder=\"Any other things you want to share about this module\" [(ngModel)]=\"reviewAndRatings.review\" matInput></textarea>\n    </mat-form-field>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-select-header-image',\n  templateUrl: './select-header-image.component.html',\n  styleUrls: ['./select-header-image.component.css']\n})\nexport class SelectHeaderImageComponent implements OnInit {\n\n  public pictureUrlList: string[] = [\n    'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1595419668375&di=ac012aaac7cf0dbe4f5ab7f1bbb46ec1&imgtype=0&src=http%3A%2F%2Fwww.petmrs.com%2Fuploads%2Fallimg%2F140804%2F3-140P4164156.jpg',\n    'https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=3069956775,2485973497&fm=15&gp=0.jpg',\n    'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1595419247440&di=2433556b58d8ec2827761fa3b1e531d6&imgtype=0&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20181206%2F8a216edd6e7f4be199c154d3fcb8041c.jpeg',\n    'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1594804315629&di=c6a60eeb5e72af674d14ea669b81f074&imgtype=0&src=http%3A%2F%2Fimg.91huoke.com%2Fxxfl%2Fhk91%2Fcustomer%2F32671%2FIx4d5bWEZxQ5euqcljDfwKaE3F7GUbbEgWlYwrRJ.jpeg'\n  ]\n\n  public selectedHeaderImage: string = this.pictureUrlList[0];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  selectImage(url: string) {\n    this.selectedHeaderImage = url;\n  }\n\n}\n","<div>\n    <div class=\"mat-h1\">Header Image:</div>\n    <ul>\n        <li *ngFor=\"let pictureUrl of pictureUrlList\">\n            <img [src]=\"pictureUrl\" alt=\"header image\" (click)=\"selectImage(pictureUrl)\" [ngClass]=\"{'selected-header-image':selectedHeaderImage==pictureUrl}\">\n        </li>\n    </ul>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PostListService } from '../../services/post-list.service';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { SearchService } from '../../services/search.service';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { ModuleInfo } from '../../moduleInfo';\nimport { Module } from '../../module';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-post-review',\n  templateUrl: './post-review.component.html',\n  styleUrls: ['./post-review.component.css']\n})\nexport class PostReviewComponent implements OnInit {\n\n  @ViewChild('ModuleInfo') ModuleInfo: any;\n  @ViewChild('ExtraInfo') ExtraInfo: any;\n  @ViewChild('ReviewAndRatings') ReviewAndRatings: any;\n  @ViewChild('HeaderImage') HeaderImage: any;\n\n  public reviewPost: ReviewPost;\n\n  public moduleCode: string = '';\n\n  constructor(public postListService: PostListService,\n    public route: Router,\n    public activatedRoute: ActivatedRoute,\n    public searchService: SearchService,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(data => {\n      if (data.moduleCode) {\n        this.moduleCode = data.moduleCode;\n      }\n    })\n  }\n\n  onSubmit() {\n    this.ModuleInfo.getModule().subscribe((module: Module) => {\n      if (module) {\n        var moduleInfo = new ModuleInfo(module.moduleCode, module.title, this.ModuleInfo.prof, this.ModuleInfo.acadYear, this.ModuleInfo.semester);\n        this.reviewPost = new ReviewPost(\n          moduleInfo,\n          this.ReviewAndRatings.reviewAndRatings,\n          this.ExtraInfo.extraInfo,\n          this.HeaderImage.selectedHeaderImage,\n          new Date().toLocaleDateString(),\n          new Date().toTimeString().slice(0, 8),\n        );\n        this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n          this.postListService.addPost(this.reviewPost).subscribe((post: ReviewPost) => {\n            var navigationExtras: NavigationExtras = {\n              queryParams: {\n                pageIndex: 0\n              }\n            }\n            this.route.navigate(['/LatestPosts'], navigationExtras);\n          });\n        })\n      } else {\n        this.snackBar.open('Please choose a valid module!', 'Close', {\n          verticalPosition: 'top',\n          duration: 2000\n        })\n      }\n    });\n  }\n\n}\n","<main>\n    <mat-card class=\"left-panel\">\n        <app-module-info #ModuleInfo [moduleCode]=\"moduleCode\"></app-module-info>\n        <mat-divider></mat-divider>\n        <app-review-and-ratings #ReviewAndRatings></app-review-and-ratings>\n        <mat-divider></mat-divider>\n        <app-extra-info #ExtraInfo></app-extra-info>\n        <mat-divider></mat-divider>\n        <app-select-header-image #HeaderImage></app-select-header-image>\n        <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"onSubmit()\">submit</button>\n    </mat-card>\n    \n    <div class=\"right-panel\">\n        <app-data-collected></app-data-collected>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { PostListService } from 'src/app/services/post-list.service';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar'\nimport { Report } from 'src/app/report';\nimport { ReportListService } from 'src/app/services/report-list.service';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n\n  public postId: string = '';\n\n  public post: ReviewPost;\n\n  public isNotFound: boolean = false;\n\n  public hoverOnShareBtn: boolean = false;\n  \n  public hoverOnShareBox: boolean = false;\n\n  public userName: string = 'Anonymous';\n\n  public postListLike: string[] = [];\n\n  public postListDislike: string[] = [];\n\n  public content: string = '';\n\n  constructor(public postListService: PostListService, \n    public activatedRoute: ActivatedRoute,\n    public route: Router,\n    public snackBar: MatSnackBar,\n    public reportListService: ReportListService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n      this.postId = data.postId;\n      this.postListService.getPostById(this.postId).subscribe((post: ReviewPost) => {\n        this.post = post;\n      })\n      this.updatePostListLikeAndDislike();\n      if (!this.post) {\n        this.isNotFound = true;\n      }\n    })\n  }\n\n  onSubmitReport() {\n    var newReport = new Report(\n      this.content, \n      new Date().toLocaleDateString(),\n      new Date().toTimeString().slice(0, 8),\n      this.postId);\n    this.postListService.addReport(newReport);\n    this.reportListService.submitReport(newReport).subscribe((report: Report) => {\n      this.route.navigate(['/LatestPosts']);\n      this.snackBar.open('Thank you for your report! We\\'ll deal with it as soon as possible.', '', {\n        duration: 2000\n      })\n    });\n  }\n\n  goModule(moduleCode: String) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  goReport(postId: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        postId: postId\n      }\n    }\n    this.route.navigate(['/Report'], navigationExtras);\n  }\n\n  updatePostListLikeAndDislike() {\n    this.postListLike = this.postListService.getPostListLike();\n    this.postListDislike = this.postListService.getPostListDislike();\n  }\n\n  onClickLikePost(post: ReviewPost) {\n    var postId = post._id;\n    if (this.postListDislike.includes(postId)) {\n      post.numOfDislikes--;\n      post.numOfLikes++;\n      this.postListService.cancelDislikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.likePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListLike.includes(postId)) {\n      post.numOfLikes++;\n      this.postListService.likePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfLikes--;\n      this.postListService.cancelLikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onClickDislikePost(post: ReviewPost) {\n    var postId = post._id;\n    if (this.postListLike.includes(postId)) {\n      post.numOfLikes--;\n      post.numOfDislikes++;\n      this.postListService.cancelLikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListDislike.includes(postId)) {\n      post.numOfDislikes++;\n      this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfDislikes--;\n      this.postListService.cancelDislikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onCopyPost(post: ReviewPost, copyContent: string) {\n    post.numOfShares++;\n    const oInput = document.createElement('textarea');\n    var postId = post._id;\n    oInput.value = copyContent + '\\n@ModuleReviewsSharing';\n    document.body.appendChild(oInput);\n    oInput.select();\n    document.execCommand('Copy');\n    oInput.style.display = 'none';\n    this.snackBar.open('Review post copied!', '', {\n      duration: 2000,\n    });\n    this.postListService.sharePost(postId).subscribe((post_1: ReviewPost) => {\n    });\n  } \n\n  ifLike(postId: string) {\n    return this.postListLike.includes(postId);\n  }\n\n  ifDislike(postId: string) {\n    return this.postListDislike.includes(postId);\n  }\n\n  mouseLeaveShareBtn() {\n    setTimeout(() => this.hoverOnShareBtn = false, 200);\n  }\n}\n","<main class=\"main-wrapper\">\n    <div class=\"mat-display-1\">Report</div>\n    <mat-card class=\"not-found mat-h1\" *ngIf=\"isNotFound\">\n        Sorry, the review is not found!\n        <mat-icon>sentiment_very_dissatisfied</mat-icon>\n    </mat-card>\n    <mat-card *ngIf=\"!isNotFound\">\n        <mat-card-header class=\"flex-container\">\n            <div mat-card-avatar class=\"header-image\" [style.background-image]=\"'url(' + post.headerImage + ')'\">\n            </div>\n            <mat-card-title class=\"flex-container\">\n                <span class=\"header\">\n                    {{post.moduleInfo.moduleCode}} - {{post.moduleInfo.title}}\n                    <span class=\"mat-caption\">Under Prof {{post.moduleInfo.prof}}, {{post.moduleInfo.acadYear}} /\n                        {{post.moduleInfo.semester}}\n                    </span>\n                </span>\n            </mat-card-title>\n            <div class=\"view-btn\">\n                <button mat-icon-button matTooltip=\"view\" (click)=\"goModule(post.moduleInfo.moduleCode)\">\n                    <mat-icon class=\"icon-btn\">search</mat-icon>\n                </button>\n            </div>\n            <mat-card-subtitle>\n                {{post.date}} - {{post.time}} by {{userName}}\n            </mat-card-subtitle>\n        </mat-card-header>\n    \n        <mat-divider></mat-divider>\n    \n        <mat-card-content>\n            <div class=\"review\">\n                <pre class=\"mat-body\">\n                    {{post.reviewAndRatings.review}}\n                </pre>\n            </div>\n    \n            <div class=\"extra-info mat-caption\">\n                Expected Grade: {{post.extraInfo.gradeExpected}}\n            </div>\n    \n            <div class=\"extra-info mat-caption\">\n                Grade Obtained: {{post.extraInfo.gradeObtained}}\n            </div>\n        </mat-card-content>\n    \n        <mat-divider></mat-divider>\n    \n        <mat-card-actions class=\"flex-container\">\n            <div class=\"flex-container ratings\">\n                <div matTooltip=\"10 for most satisfied\">\n                    general: {{post.reviewAndRatings.general}} / 10\n                    <div class=\"icon\">\n                        <mat-icon *ngIf=\"post.reviewAndRatings.general<3\">sentiment_very_dissatisfied\n                        </mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.general>2&&post.reviewAndRatings.general<5\">\n                            sentiment_dissatisfied</mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.general>4&&post.reviewAndRatings.general<7\">\n                            sentiment_satisfied</mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.general>6&&post.reviewAndRatings.general<9\">\n                            sentiment_satisfied_alt</mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n                    </div>\n                </div>\n                <div matTooltip=\"10 for most difficult\">\n                    difficulty: {{post.reviewAndRatings.difficulty}} / 10\n                    <div class=\"icon\">\n                        <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied\n                        </mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>6&&post.reviewAndRatings.difficulty<9\">\n                            sentiment_dissatisfied</mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>4&&post.reviewAndRatings.difficulty<7\">\n                            sentiment_satisfied</mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>2&&post.reviewAndRatings.difficulty<5\">\n                            sentiment_satisfied_alt</mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.difficulty<3\">sentiment_very_satisfied\n                        </mat-icon>\n                    </div>\n                </div>\n                <div matTooltip=\"10 for heaviest workload\">\n                    workload: {{post.reviewAndRatings.workload}} / 10\n                    <div class=\"icon\">\n                        <mat-icon *ngIf=\"post.reviewAndRatings.workload>8\">sentiment_very_dissatisfied\n                        </mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.workload>6&&post.reviewAndRatings.workload<9\">\n                            sentiment_dissatisfied</mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.workload>4&&post.reviewAndRatings.workload<7\">\n                            sentiment_satisfied</mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.workload>2&&post.reviewAndRatings.workload<5\">\n                            sentiment_satisfied_alt</mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n                    </div>\n                </div>\n                <div matTooltip=\"10 for most willing to recommend\">\n                    recommend: {{post.reviewAndRatings.recommend}} / 10\n                    <div class=\"icon\">\n                        <mat-icon *ngIf=\"post.reviewAndRatings.recommend<3\">sentiment_very_dissatisfied\n                        </mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.recommend>2&&post.reviewAndRatings.recommend<5\">\n                            sentiment_dissatisfied</mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.recommend>4&&post.reviewAndRatings.recommend<7\">\n                            sentiment_satisfied</mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.recommend>6&&post.reviewAndRatings.recommend<9\">\n                            sentiment_satisfied_alt</mat-icon>\n                        <mat-icon *ngIf=\"post.reviewAndRatings.recommend>8\">sentiment_very_satisfied\n                        </mat-icon>\n                    </div>\n                </div>\n            </div>\n            <div class=\"btns\">\n                <button mat-icon-button matTooltip=\"like\" (click)=\"onClickLikePost(post)\">\n                    <mat-icon class=\"icon-btn\" [ngClass]=\"{'blue-color': ifLike(post._id)}\">thumb_up</mat-icon>\n                    {{post.numOfLikes}}\n                </button>\n                <button mat-icon-button matTooltip=\"dislike\" (click)=\"onClickDislikePost(post)\">\n                    <mat-icon class=\"icon-btn\" [ngClass]=\"{'blue-color': ifDislike(post._id)}\">thumb_down</mat-icon>\n                    {{post.numOfDislikes}}\n                </button>\n                <button mat-icon-button matTooltip=\"share\" (mouseover)=\"hoverOnShareBtn = true\"\n                    (mouseleave)=\"mouseLeaveShareBtn()\">\n                    <mat-icon class=\"icon-btn\">share</mat-icon>\n                    {{post.numOfShares}}\n                </button>\n                <mat-card class=\"share-box\" *ngIf=\"hoverOnShareBtn||hoverOnShareBox\"\n                    (mouseover)=\"hoverOnShareBox=true\" (mouseleave)=\"hoverOnShareBox=false\">\n                    <mat-card-title>\n                        Copy & Share\n                        <button mat-icon-button (click)=\"onCopyPost(post, copyContent.innerHTML)\" class=\"copy-btn\"\n                            matTooltip=\"copy review post\">\n                            <mat-icon class=\"icon-btn\">\n                                content_copy\n                            </mat-icon>\n                        </button>\n                    </mat-card-title>\n                    <mat-card-content>\n                        <pre class=\"mat-body\" #copyContent>\n    {{post.moduleInfo.moduleCode}} - {{post.moduleInfo.title}} taken by {{userName}}\n    under {{post.moduleInfo.prof}}, {{post.moduleInfo.acadYear}} / {{post.moduleInfo.semester}}:\n    {{post.reviewAndRatings.review}}\n    general: {{post.reviewAndRatings.general}} / 10 (10 for most satisfied)         difficulty: {{post.reviewAndRatings.difficulty}} / 10 (10 for most difficult)\n    workload: {{post.reviewAndRatings.workload}} / 10 (10 for heaviest workload)    recommend: {{post.reviewAndRatings.recommend}} / 10 (10 for most willing to recommend)\n                    </pre>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        </mat-card-actions>\n    </mat-card>\n\n    <mat-form-field class=\"report\" appearance=\"fill\" *ngIf=\"!isNotFound\">\n        <textarea name=\"report\" rows=\"10\" \n            [(ngModel)]=\"content\"\n            matInput placeholder=\"E.g.The post is irrelevant. / There are certain dirty words. / There are some errors. \"></textarea>\n    </mat-form-field>\n\n    <button mat-raised-button (click)=\"onSubmitReport()\" *ngIf=\"!isNotFound\" color=\"primary\" class=\"submit-btn\">Submit</button>\n</main>","export class ExtraInfo {\n    constructor(public gradeExpected: string, public gradeObtained: string){}\n}","export class Module {\n    constructor(\n        public moduleCode: string,\n        public title: string,\n        public moduleCredit: string,\n        public department: string,\n        public faculty: string,\n        public description: string,\n        public numOfReviews: number\n      ) { }\n}","export class ModuleInfo {\n    constructor(public moduleCode: String, public title: string, public prof: string, public acadYear: string, public semester: string) {}\n}","export class RefinementList {\n    static emptyRefinementList = new RefinementList([], [], [], []);\n    constructor(public Faculty: string[], \n        public Department: string[], \n        public ModuleCredit: string[], \n        public Level: string[]) {}\n    \n    isEmpty() {\n        return this.Faculty.length == 0 \n            && this.Department.length == 0 \n            && this.ModuleCredit.length == 0 \n            && this.Level.length == 0;\n    }\n}","export class Report {\n    public content: string;\n    public date: string;\n    public time: string;\n    public postId: string;\n    public _id: string;\n    constructor(content: string, date: string, time: string, postId: string) {\n        this.content = content;\n        this.date = date;\n        this.time = time;\n        this.postId = postId;\n        this._id = '';\n    }\n}","export class ReviewAndRatings {\n    constructor(public review: string, \n        public general: number, \n        public difficulty: number, \n        public workload: number, \n        public recommend: number) {}\n}","import { ModuleInfo } from './moduleInfo';\nimport { ReviewAndRatings } from './reviewAndRatings';\nimport { ExtraInfo } from './extraInfo';\nimport { Report } from './report';\n\nexport class ReviewPost {\n    public moduleInfo: ModuleInfo;\n    public reviewAndRatings: ReviewAndRatings;\n    public extraInfo: ExtraInfo;\n    public headerImage: string;\n    public date: string;\n    public time: string;\n    public numOfLikes: number;\n    public numOfDislikes: number;\n    public numOfShares: number;\n    public _id: string;\n    public reportList: Report[];\n    constructor(\n        moduleInfo: ModuleInfo,\n        reviewAndRatings: ReviewAndRatings,\n        extraInfo: ExtraInfo,\n        headerImage: string,\n        date: string,\n        time: string) { \n            this.moduleInfo = moduleInfo;\n            this.reviewAndRatings = reviewAndRatings;\n            this.extraInfo = extraInfo;\n            this.headerImage = headerImage;\n            this.date = date;\n            this.time = time;\n            this.numOfDislikes = 0;\n            this.numOfLikes = 0;\n            this.numOfShares = 0;\n            this._id = '';\n            this.reportList = [];\n        }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AdminAccount } from '../adminAccount';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAccountService {\n\n  public cachedAdminAccountList: AdminAccount[] = [];\n\n  public adminAccount: AdminAccount;\n\n  constructor(public http: HttpClient) { }\n\n  getAdminAccount() {\n    return this.adminAccount;\n  }\n\n  getAdminAccountList() {\n    if (this.cachedAdminAccountList.length > 0) {\n      return of(this.cachedAdminAccountList);\n    } else {\n      return this.http.get('/adminAccounts').pipe(\n        map((adminAccountList: AdminAccount[]) => {\n          this.cachedAdminAccountList = adminAccountList;\n          return adminAccountList;\n        })\n      )\n    }\n  }\n\n  login(accountName: string, password: string) {\n    return this.getAdminAccountList().pipe(\n      map((adminAccountList: AdminAccount[]) => {\n        var filteredAdminAccountList = adminAccountList.filter((adminAccount: AdminAccount) => {\n          return adminAccount.accountName == accountName && adminAccount.password == password;\n        });\n        if (filteredAdminAccountList.length == 1) {\n          this.adminAccount = filteredAdminAccountList[0];\n        }\n        return filteredAdminAccountList.length == 1;\n      })\n    )\n  }\n\n  logout() {\n    this.adminAccount = undefined;\n  }\n\n  createAccount(adminAccount: AdminAccount) {\n    var httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n    return this.http.post('/adminAccounts/create', adminAccount, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PostListService } from './post-list.service';\nimport { ReviewPost } from '../reviewPost';\nimport { Module } from '../module';\nimport { map } from \"rxjs/operators\";\nimport { AverageRatings } from '../averageRatings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AverageRatingsService {\n\n  constructor(public postListService: PostListService) { }\n\n  public getAverageRatingsByReviewList(reviewList: ReviewPost[]) {\n\n    var averageRatings = new AverageRatings('0', '0', '0', '0');\n\n    var general = 0;\n    var difficulty = 0;\n    var workload = 0;\n    var recommend = 0;\n\n    if (reviewList.length > 0) {\n      reviewList.forEach((review: ReviewPost) => {\n        general = general + review.reviewAndRatings.recommend;\n        difficulty = difficulty + review.reviewAndRatings.difficulty;\n        workload = workload + review.reviewAndRatings.workload;\n        recommend = recommend + review.reviewAndRatings.general;\n      })\n\n      averageRatings.averageRecommend = (recommend / reviewList.length).toFixed(2);\n      averageRatings.averageDifficulty = (difficulty / reviewList.length).toFixed(2);\n      averageRatings.averageWorkload = (workload / reviewList.length).toFixed(2);\n      averageRatings.averageGeneral = (general / reviewList.length).toFixed(2);\n    }\n\n    return averageRatings;\n  }\n\n  public getAverageRatingsByModuleCode(moduleCode: string) {\n    return this.postListService.getPostListOfModule(moduleCode).pipe(\n      map((reviewList: ReviewPost[]) => {\n        return this.getAverageRatingsByReviewList(reviewList);\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Module } from '../module';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { PostListService } from '../services/post-list.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleListService {\n\n  public cachedModuleList: Module[] = [];\n\n  constructor(public http: HttpClient, public postListService: PostListService) { }\n\n  updateLocalStorage() {\n    this.http.get('/modules').subscribe((moduleList: Module[]) => {\n      localStorage.setItem('moduleList', JSON.stringify(moduleList));\n      this.cachedModuleList = moduleList;\n    });\n  }\n\n  getModuleList() {\n    if (this.cachedModuleList.length > 0) {\n      return of(this.cachedModuleList);\n    } else if (localStorage.getItem('moduleList')) {\n      this.cachedModuleList = JSON.parse(localStorage.getItem('moduleList'));\n      return of(this.cachedModuleList);\n    } else {\n      this.updateLocalStorage();\n      return this.http.get('/modules');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Module } from '../module';\nimport { SearchService } from './search.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyModulesService {\n\n  public myModuleList: Module[] = [];\n\n  constructor(public searchService: SearchService) { }\n\n  getMyModuleList() {\n    if (this.myModuleList.length == 0) {\n      if (localStorage.getItem('myModuleList')) {\n        this.myModuleList = JSON.parse(localStorage.getItem('myModuleList'));\n      } else {\n        this.updateLocalStorage();\n      }\n    } \n    return this.myModuleList;\n  }\n\n  addModule(module: Module) {\n    this.myModuleList.push(module);\n    this.updateLocalStorage();\n  }\n\n  deleteModule(moduleCode: string) {\n    this.myModuleList = this.myModuleList.filter((module: Module) => {\n      return module.moduleCode != moduleCode;\n    })\n    this.updateLocalStorage();\n  }\n\n  updateLocalStorage() {\n    localStorage.setItem('myModuleList', JSON.stringify(this.myModuleList));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ReviewPost } from \"../reviewPost\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { of } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { Report } from '../report';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostListService {\n\n  public cachedPostList: ReviewPost[] = [];\n\n  constructor(public http: HttpClient) { }\n\n  getPostList() {\n    if (this.cachedPostList.length > 0) {\n      return of(JSON.parse(JSON.stringify(this.cachedPostList)));\n    } else {\n      return this.http.get('/posts').pipe(\n        map((postList: ReviewPost[]) => {\n          this.cachedPostList = postList;\n          return JSON.parse(JSON.stringify(this.cachedPostList));\n        })\n      );\n    }\n  }\n\n  getPostById(postId: string) {\n    return this.getPostList().pipe(\n      map((postList: ReviewPost[]) => {\n        return postList.filter((post: ReviewPost) => post._id == postId)[0];\n      })\n    )\n  } \n\n  likePost(postId: string) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList.filter((reviewPost: ReviewPost) => reviewPost._id == postId)[0].numOfLikes++;\n    })\n    var postListLike = this.getPostListLike();\n    postListLike.push(postId);\n    localStorage.setItem('postListLike', JSON.stringify(postListLike));\n    return this.http.put('/posts/like/' + postId, null);\n  }\n\n  cancelLikePost(postId: string) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList.filter((reviewPost: ReviewPost) => reviewPost._id == postId)[0].numOfLikes--;\n    })\n    localStorage.setItem('postListLike', JSON.stringify(this.getPostListLike().filter((id: string) => id != postId)));\n    return this.http.put('/posts/like/cancel/' + postId, null);\n  }\n\n  dislikePost(postId: string) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList.filter((reviewPost: ReviewPost) => reviewPost._id == postId)[0].numOfDislikes++;\n    })\n    var postListDislike = this.getPostListDislike();\n    postListDislike.push(postId);\n    localStorage.setItem('postListDislike', JSON.stringify(postListDislike));\n    return this.http.put('/posts/dislike/' + postId, null);\n  }\n\n  cancelDislikePost(postId: string) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList.filter((reviewPost: ReviewPost) => reviewPost._id == postId)[0].numOfDislikes--;\n    })\n    localStorage.setItem('postListDislike', JSON.stringify(this.getPostListDislike().filter((id: string) => id != postId)));\n    return this.http.put('/posts/dislike/cancel/' + postId, null);\n  }\n\n  sharePost(postId: string) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList.filter((reviewPost: ReviewPost) => reviewPost._id == postId)[0].numOfShares++;\n    })\n    return this.http.put('/posts/share/' + postId, null);\n  }\n\n  getPostListLike() {\n    if (!localStorage.getItem('postListLike')) {\n      localStorage.setItem('postListLike', JSON.stringify([]));\n    }\n    return JSON.parse(localStorage.getItem('postListLike'));\n  }\n\n  getPostListDislike() {\n    if (!localStorage.getItem('postListDislike')) {\n      localStorage.setItem('postListDislike', JSON.stringify([]));\n    }\n    return JSON.parse(localStorage.getItem('postListDislike'));\n  }\n\n  countNumOfPosts() {\n    return this.http.get('/posts/count');\n  }\n\n  deletePost(postId: string) {\n    this.cachedPostList = this.cachedPostList.filter((post: ReviewPost) => {\n      return post._id != postId;\n    })\n    return this.http.delete('posts/delete/' + postId);\n  }\n\n  addPost(post: ReviewPost) {\n    var httpOptions = {\n      headers: new HttpHeaders({ \"Content-Type\": \"application/json\" })\n    };\n    return this.http.post('/posts', post, httpOptions).pipe(\n      map((reviewPost: ReviewPost) => {\n        reviewPost.reportList = [];\n        this.cachedPostList.push(reviewPost);\n        return reviewPost;\n      })\n    );\n  }\n\n  countPostList(moduleCode: string) {\n    return this.http.get('/posts/' + moduleCode + '/count');\n  }\n\n  getPostListOfModule(moduleCode: string) {\n    return this.http.get('/posts/' + moduleCode);\n  }\n\n  addReport(report: Report) {\n    this.getPostList().subscribe((postList: ReviewPost[]) => {\n      var post = this.cachedPostList.find((reviewPost: ReviewPost) => reviewPost._id == report.postId);\n      if (post) {\n        post.reportList.push(report);\n      }\n    })\n  }\n\n  deleteReport(postId: string) {\n    this.getPostList().subscribe((postList: ReviewPost[]) => {\n      var post = this.cachedPostList.find((reviewPost: ReviewPost) => reviewPost._id == postId);\n      if (post) {\n        post.reportList = [];\n      }\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Question } from '../Question';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionListService {\n\n  constructor(public http: HttpClient) { }\n\n  getQuestionListOfModule(moduleCode: string) {\n    return this.http.get('/questions/' + moduleCode);\n  }\n\n  countNumOfQuestions() {\n    return this.http.get('/questions/count');\n  }\n\n  addQuestion(question: Question) {\n    var httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }\n    return this.http.post('/questions', question, httpOptions);\n  }\n\n  deleteQuestion(questionId: string) {\n    return this.http.delete('/questions/delete/' + questionId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { RefinementList } from '../refinementList';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RefinementListService {\n\n  public refinementList: RefinementList = new RefinementList([], [], ['4 MC'], []);\n\n  public subject = new BehaviorSubject(this.refinementList);\n\n  constructor() { }\n\n  addRefinement(selector: string, refinement: string) {\n    if (!this.includes(selector, refinement)) {\n      this.refinementList[selector].push(refinement);\n      this.subject.next(this.refinementList);\n    }\n  }\n\n  getRefinementList() {\n    return this.subject;\n  }\n\n  deleteRefinement(selector: string, refinement: string) {\n    this.refinementList[selector].splice(this.refinementList[selector].indexOf(refinement), 1);\n    this.subject.next(this.refinementList);\n  }\n\n  includes(selector: string, refinement: string) {\n    return this.refinementList[selector].includes(refinement);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Report } from '../report';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportListService {\n\n  constructor(public http: HttpClient) { }\n\n  getReportList() {\n    return this.http.get('/reports');\n  }\n\n  deleteReport(reportId: string) {\n    return this.http.delete('/reports/delete/' + reportId);\n  }\n\n  submitReport(report: Report) {\n    var httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n    return this.http.post('/reports', report, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ModuleListService } from \"./module-list.service\";\nimport { RefinementList } from '../refinementList';\nimport { map } from \"rxjs/operators\";\nimport { Module } from \"../module\";\nimport { PostListService } from '../services/post-list.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  constructor(public moduleListService: ModuleListService,\n    public postListService: PostListService) { }\n\n  private belongsToFaculty = (module: Module, facultyList: string[]) => {\n    var flag = false;\n    for (let i = 0; i < facultyList.length; i++) {\n      if (module.faculty == facultyList[i]) {\n        flag = true;\n        break;\n      }\n    }\n    return facultyList.length == 0 || flag;\n  }\n\n  private belongsToDepartment(module: Module, departmentList: string[]) {\n    var flag = false;\n    for (let i = 0; i < departmentList.length; i++) {\n      if (module.department == departmentList[i]) {\n        flag = true;\n        break;\n      }\n    }\n    return departmentList.length == 0 || flag;\n  }\n\n  public belongsToLevel(module: Module, levelList: string[]) {\n    var flag = false;\n    for (let i = 0; i < levelList.length; i++) {\n      let level = levelList[i].charAt(0);\n      let levelOfModule = module.moduleCode.replace(/^[A-Z]+/, '').charAt(0);\n      if (level == levelOfModule) {\n        flag = true;\n        break;\n      }\n    }\n    return levelList.length == 0 || flag;\n  }\n\n  public hasModuleCredit(module: Module, moduleCreditList: string[]) {\n    var flag = false;\n    for (let i = 0; i < moduleCreditList.length; i++) {\n      let moduleCredit = parseInt(module.moduleCredit);\n      switch (moduleCreditList[i]) {\n        case '0-3 MC': flag = moduleCredit < 4; break;\n        case '4 MC': flag = moduleCredit == 4; break;\n        case '5-8 MC': flag = moduleCredit < 9 && moduleCredit > 4; break;\n        case 'More than 8 MC': flag = moduleCredit > 8; break;\n      }\n      if (flag) break;\n    }\n    return moduleCreditList.length == 0 || flag;\n  }\n\n  getFullModuleList() {\n    return this.moduleListService.getModuleList();\n  }\n\n  search(searchInput: string, refinementList: RefinementList) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        if (refinementList.isEmpty()) {\n          return moduleList;\n        } else {\n          return moduleList.filter((module: Module) => {\n            return this.belongsToFaculty(module, refinementList.Faculty) &&\n              this.belongsToDepartment(module, refinementList.Department) &&\n              this.hasModuleCredit(module, refinementList.ModuleCredit) &&\n              this.belongsToLevel(module, refinementList.Level);\n          })\n        }\n      }),\n      map((moduleList: Module[]) => {\n        if (searchInput == '') {\n          return moduleList;\n        } else {\n          let uppercaseSearchInput = searchInput.toUpperCase();\n          return moduleList.filter((module: Module) => {\n            let uppercaseModuleTitle = module.title.toUpperCase();\n            return uppercaseModuleTitle.search(uppercaseSearchInput) != -1 || module.moduleCode.search(uppercaseSearchInput) != -1;\n          });\n        }\n      })\n    );\n  }\n\n  getModule(moduleCode: string) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        let moduleFound: Module;\n        for (var i = 0; i < moduleList.length; i++) {\n          if (moduleList[i].moduleCode == moduleCode) {\n            moduleFound = moduleList[i];\n            break;\n          }\n        }\n        return moduleFound;\n      })\n    )\n  }\n\n  getMoreModuleList(moduleCode: String) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        let index = moduleList.map((module: Module) => {\n          return module.moduleCode;\n        }).findIndex((item: string) => item == moduleCode);\n        let start = index - 5 < 0\n          ? 0\n          : index + 5 > moduleList.length - 1\n            ? moduleList.length - 11\n            : index - 5;\n        return moduleList.slice(start, start + 11).filter((module: Module) => module.moduleCode != moduleCode);\n      })\n    )\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}