{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/averageRatings.ts","webpack:///src/app/components/data-collected/data-collected.component.ts","webpack:///src/app/components/data-collected/data-collected.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/latest-posts/latest-posts.component.ts","webpack:///src/app/components/latest-posts/latest-posts.component.html","webpack:///src/app/components/module/module.component.ts","webpack:///src/app/components/module/module.component.html","webpack:///src/app/components/my-modules/my-modules.component.ts","webpack:///src/app/components/my-modules/my-modules.component.html","webpack:///src/app/module.ts","webpack:///src/app/refinementList.ts","webpack:///src/app/services/average-ratings.service.ts","webpack:///src/app/services/module-list.service.ts","webpack:///src/app/services/my-modules.service.ts","webpack:///src/app/services/post-list.service.ts","webpack:///src/app/services/search.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AverageRatings","averageGeneral","averageDifficulty","averageWorkload","averageRecommend","emptyAverageRatings","DataCollectedComponent","searchService","postListService","numberOfModules","numberOfReviews","getFullModuleList","subscribe","moduleList","length","getPostList","postList","FooterComponent","HeaderComponent","route","navigate","goHome","goModuleList","goPostReviews","goLatestPosts","goMyModules","HomeComponent","searchInput","moduleListShown","inputStatus","search","selectedModule","navigationExtras","queryParams","moduleCode","emptyRefinementList","searchResult","slice","inputStatusOn","goModuleListWithNoInput","general","difficulty","workload","recommend","LatestPostsComponent","postListShown","userName","event","start","pageIndex","updatePostListShown","ModuleComponent","activatedRoute","myModuleService","moduleListService","snackBar","averageRatingsService","reviewListShown","reviewList","averageRatings","moreModuleList","data","getModule","getPostListOfModule","getAverageRatingsByReviewList","getMoreModuleList","addModule","open","verticalPosition","duration","addToMyModules","addReviews","updateReviewListShown","MyModulesComponent","myModulesService","myModuleList","listOfAverageRatings","listOfNumOfReviews","forEach","push","getMyModuleList","countPostList","numOfReviews","getAverageRatingsByModuleCode","deleteModule","Module","moduleCredit","department","faculty","description","RefinementList","Faculty","Department","ModuleCredit","Level","AverageRatingsService","review","reviewAndRatings","toFixed","pipe","providedIn","ModuleListService","http","cachedModuleList","get","localStorage","setItem","JSON","stringify","getItem","parse","updateLocalStorage","MyModulesService","filter","PostListService","cachedPostList","reverse","post","unshift","httpOptions","headers","SearchService","belongsToFaculty","facultyList","flag","i","departmentList","levelList","level","charAt","levelOfModule","replace","moduleCreditList","parseInt","getModuleList","refinementList","isEmpty","belongsToDepartment","hasModuleCredit","belongsToLevel","uppercaseSearchInput","toUpperCase","uppercaseModuleTitle","moduleFound","index","map","findIndex","item","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LatestPostsComponent } from './components/latest-posts/latest-posts.component';\nimport { MyModulesComponent } from './components/my-modules/my-modules.component';\nimport { ModuleComponent } from './components/module/module.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'LatestPosts', component: LatestPostsComponent},\n  {path: 'MyModules', component: MyModulesComponent},\n  {path: 'Module', component: ModuleComponent},\n  {path: '**', redirectTo: ''}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'nusmods';\n}\n","<div class=\"container\">\n  <header>\n      <app-header></app-header>\n  </header>\n  \n  <main>\n      <router-outlet></router-outlet>\n  </main>\n</div>\n\n<footer>\n  <app-footer></app-footer>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LatestPostsComponent } from './components/latest-posts/latest-posts.component';\nimport { DataCollectedComponent } from './components/data-collected/data-collected.component';\nimport { MyModulesComponent } from './components/my-modules/my-modules.component';\nimport { ModuleComponent } from './components/module/module.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LatestPostsComponent,\n    DataCollectedComponent,\n    MyModulesComponent,\n    ModuleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatCardModule,\n    MatDividerModule,\n    MatSidenavModule,\n    MatAutocompleteModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class AverageRatings {\n    constructor(public averageGeneral: string,\n        public averageDifficulty: string,\n        public averageWorkload: string,\n        public averageRecommend: string,) {}\n\n    static emptyAverageRatings = new AverageRatings('0', '0', '0', '0');\n}","import { Component, OnInit } from '@angular/core';\nimport { SearchService } from '../../services/search.service';\nimport { PostListService } from '../../services/post-list.service';\nimport { Module } from '../../module';\nimport { ReviewPost } from 'src/app/reviewPost';\n\n@Component({\n  selector: 'app-data-collected',\n  templateUrl: './data-collected.component.html',\n  styleUrls: ['./data-collected.component.css']\n})\nexport class DataCollectedComponent implements OnInit {\n\n  public numberOfModules: number = 0;\n  public numberOfReviews: number = 0;\n\n  constructor(public searchService: SearchService, public postListService: PostListService) { }\n\n  ngOnInit(): void {\n    this.searchService.getFullModuleList().subscribe((moduleList: Module[]) => {\n      this.numberOfModules = moduleList.length;\n    })\n\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.numberOfReviews = postList.length;\n    })\n  }\n}\n","<mat-card>\n    <mat-card-title>Data collected</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n        <div class=\"data-collected\">Number of modules: {{numberOfModules}}</div>\n        <div class=\"data-collected\">Number of reviews: {{numberOfReviews}}</div>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"mat-caption\">\n        Made By Cao Peng & Li Zhuoran, June 2020\n    </div>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public route: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goHome() {\n    this.route.navigate(['/']);\n  }\n\n  goModuleList() {\n    this.route.navigate(['/ModuleList']);\n  }\n\n  goPostReviews() {\n    this.route.navigate(['/PostReviews']);\n  }\n\n  goLatestPosts() {\n    this.route.navigate(['/LatestPosts']);\n  }\n\n  goMyModules() {\n    this.route.navigate(['/MyModules']);\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"nusmods\">\n        <button mat-button>\n            <span class=\"mat-h1\" (click)=\"goHome()\">NUSMods</span>\n        </button>\n    </div>\n\n    <div class=\"btns\">\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goModuleList()\">Module List</span>\n        </button>\n\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goPostReviews()\">Post Reviews</span>\n        </button>\n\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goLatestPosts()\">Latest Posts</span>\n        </button>\n    </div>\n\n    <div class=\"my-modules\">\n        <button mat-raised-button (click)=\"goMyModules()\">My Modules</button>\n    </div>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationExtras, NavigationEnd } from '@angular/router';\nimport { SearchService } from '../../services/search.service';\nimport { Module } from '../../module';\nimport { RefinementList } from '../../refinementList';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public searchInput: string = '';\n\n  public selectedModule: Module;\n\n  public moduleListShown: Module[] = [];\n\n  public inputStatus: boolean = false;\n\n  constructor(public route: Router, public searchService: SearchService) { }\n\n  ngOnInit(): void {\n    this.search();\n  }\n\n  select(module: Module) {\n    this.selectedModule = module;\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.selectedModule.moduleCode\n      }\n    }\n    this.route.navigate(['/Module'], navigationExtras);\n  }\n\n  search() {\n    this.searchService.search(this.searchInput, RefinementList.emptyRefinementList).subscribe((searchResult: Module[]) => {\n      this.moduleListShown = searchResult.slice(0, 10);\n    })\n  }\n\n  goModuleList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        searchInput: this.searchInput\n      }\n    }\n    this.route.navigate(['/ModuleList'], navigationExtras);\n  }\n\n  goModuleListWithNoInput() {\n    this.route.navigate(['/ModuleList']);\n  }\n\n  goPostReviews() {\n    this.route.navigate(['/PostReviews']);\n  }\n\n  goLatestPosts() {\n    this.route.navigate(['/LatestPosts']);\n  }\n\n  inputStatusOn() {\n    this.inputStatus = true;\n  }\n\n}\n","<div>\n    <div class=\"headline mat-display-3\">NUSMods</div>\n    <div class=\"mat-caption\">reviews | ratings | recommend</div>\n    <div class=\"search-box\">\n        <mat-icon>search</mat-icon>\n        <mat-form-field>\n            <input \n                type=\"text\" \n                autocomplete=\"off\"\n                matInput \n                placeholder=\"Module code or title\" \n                (input)=\"search(); inputStatusOn()\"\n                [(ngModel)]=\"searchInput\">\n        </mat-form-field>\n    </div>\n    <div class=\"scrollable-container\" cdkScrollable *ngIf=\"inputStatus\">\n        <mat-option *ngFor=\"let module of moduleListShown\" (click)=\"select(module)\">\n            <div class=\"module-info\">\n                <div class=\"mat-h4\">{{module.moduleCode}} - {{module.title}} </div>\n                <div class=\"mat-caption\"> {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}MCs </div>\n            </div>\n        </mat-option>\n        <button class=\"more-btn\" mat-button color=\"primary\" (click)=\"goModuleList()\">More</button>\n    </div>\n    <div class=\"flex-container\">\n        <button mat-button (click)=\"goModuleListWithNoInput()\" class=\"colored-btn\">Module List</button>\n        <button mat-raised-button (click)=\"goPostReviews()\" color=\"primary\">Post Reviews</button>\n        <button mat-button (click)=\"goLatestPosts()\" class=\"colored-btn\">Latest Posts</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PostListService } from '../../services/post-list.service';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { Router, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-latest-posts',\n  templateUrl: './latest-posts.component.html',\n  styleUrls: ['./latest-posts.component.css']\n})\nexport class LatestPostsComponent implements OnInit {\n\n  public postList: ReviewPost[] = [];\n\n  public postListShown: ReviewPost[] = [];\n\n  public userName: string = \"Anonymous\";\n\n  constructor(public postListService: PostListService, public route: Router) { }\n\n  ngOnInit(): void {\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.postList = postList;\n      this.postListShown = postList.slice(0, 5);\n    });\n  }\n\n  goModule(moduleCode: String) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module'], navigationExtras);\n  }\n\n  updatePostListShown(event: any) {\n    var start = event.pageIndex * 5;\n    this.postListShown = this.postList.slice(start, start + 5);\n  }\n\n}\n","<main class=\"flex-container\">\n    <div class=\"left-panel\">\n        <div class=\"mat-display-1\">Latest Posts</div>\n        <mat-card class=\"no-reviews-yet mat-h1\" *ngIf=\"postList.length==0\">\n            No reviews yet!\n            <mat-icon>sentiment_very_dissatisfied</mat-icon>\n        </mat-card>\n        <mat-card *ngFor=\"let post of postListShown\">\n                \n                <mat-card-title class=\"flex-container\">\n                    <div class=\"header\">\n                        {{post.moduleInfo.moduleCode}} - {{post.moduleInfo.title}}\n                        <span class=\"mat-caption\">Under Prof {{post.moduleInfo.prof}}, {{post.moduleInfo.acadYear}}</span>\n                    </div>\n                    <div class=\"view-btn\">\n                        <button mat-icon-button matTooltip=\"view\" (click)=\"goModule(post.moduleInfo.moduleCode)\">\n                            <mat-icon>search</mat-icon>\n                        </button>\n                    </div>\n                </mat-card-title>\n\n                <mat-card-subtitle>\n                    {{post.date}} - {{post.time}} by {{userName}}\n                </mat-card-subtitle>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-content>\n                <div class=\"review\">\n                    {{post.reviewAndRatings.review}}\n                </div>\n    \n                <div class=\"extra-info mat-caption\">\n                    Expected Grade: {{post.extraInfo.gradeExpected}}\n                </div>\n    \n                <div class=\"extra-info mat-caption\">\n                    Grade Obtained: {{post.extraInfo.gradeObtained}}\n                </div>\n            </mat-card-content>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-actions class=\"flex-container\">\n                <div class=\"flex-container ratings\">\n                    <div matTooltip=\"10 for most satisfied\">\n                        general: {{post.reviewAndRatings.general}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>2&&post.reviewAndRatings.general<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>4&&post.reviewAndRatings.general<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>6&&post.reviewAndRatings.general<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most difficult\">\n                        difficulty: {{post.reviewAndRatings.difficulty}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon\n                                *ngIf=\"post.reviewAndRatings.difficulty>6&&post.reviewAndRatings.difficulty<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon\n                                *ngIf=\"post.reviewAndRatings.difficulty>4&&post.reviewAndRatings.difficulty<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon\n                                *ngIf=\"post.reviewAndRatings.difficulty>2&&post.reviewAndRatings.difficulty<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty<3\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for heaviest workload\">\n                        workload: {{post.reviewAndRatings.workload}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>6&&post.reviewAndRatings.workload<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>4&&post.reviewAndRatings.workload<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>2&&post.reviewAndRatings.workload<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most willing to recommend\">\n                        recommend: {{post.reviewAndRatings.recommend}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>2&&post.reviewAndRatings.recommend<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>4&&post.reviewAndRatings.recommend<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>6&&post.reviewAndRatings.recommend<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>8\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"btns\">\n                    <button mat-icon-button matTooltip=\"like\">\n                        <mat-icon>thumb_up</mat-icon>\n                    </button>\n                    <button mat-icon-button matTooltip=\"dislike\">\n                        <mat-icon>thumb_down</mat-icon>\n                    </button>\n                    <button mat-icon-button matTooltip=\"share\">\n                        <mat-icon>share</mat-icon>\n                    </button>\n                </div>\n            </mat-card-actions>\n        </mat-card>\n        <mat-paginator \n            [length]=\"postList.length\" \n            pageSize=\"5\" \n            showFirstLastButtons=\"true\"\n            hidePageSize=\"true\"\n            (page)=\"updatePostListShown($event)\"></mat-paginator>\n    </div>\n    <div class=\"right-panel\">\n        <app-data-collected></app-data-collected>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { SearchService } from '../../services/search.service';\nimport { MyModulesService } from '../../services/my-modules.service';\nimport { ModuleListService } from '../../services/module-list.service';\nimport { Module } from 'src/app/module';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ReviewPost } from \"../../reviewPost\";\nimport { PostListService } from '../../services/post-list.service';\nimport { AverageRatingsService } from '../../services/average-ratings.service';\n\n@Component({\n  selector: 'app-module',\n  templateUrl: './module.component.html',\n  styleUrls: ['./module.component.css']\n})\nexport class ModuleComponent implements OnInit {\n\n  public module: Module = new Module('', '', '', '', '', '');\n\n  public reviewListShown: ReviewPost[] = [];\n\n  public reviewList: ReviewPost[] = [];\n\n  public userName: string = 'Anonymous';\n\n  public averageRatings: any = {\n    averageGeneral: 0,\n    averageDifficulty: 0,\n    averageWorkload: 0,\n    averageRecommend: 0,\n  };\n\n  public moreModuleList: Module[] = [];\n\n  constructor(public route: Router, \n    public activatedRoute: ActivatedRoute, \n    public searchService: SearchService,\n    public myModuleService: MyModulesService,\n    public moduleListService: ModuleListService,\n    private snackBar: MatSnackBar,\n    public postListService: PostListService,\n    public averageRatingsService: AverageRatingsService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n\n      this.searchService.getModule(data.moduleCode).subscribe((module: Module) => {\n        this.module = module;\n      });\n\n      this.postListService.getPostListOfModule(data.moduleCode).subscribe((postList: ReviewPost[]) => {\n        this.reviewList = postList;\n        this.averageRatings = this.averageRatingsService.getAverageRatingsByReviewList(this.reviewList);\n        this.reviewListShown = this.reviewList.slice(0, 5);\n      });\n\n      this.searchService.getMoreModuleList(data.moduleCode).subscribe((moreModuleList: Module[]) => {\n        this.moreModuleList = moreModuleList;\n      })\n    })\n  }\n\n  addToMyModules() {\n    this.myModuleService.addModule(this.module);\n    this.snackBar.open('Successfully added to my modules!', 'Close', {\n      verticalPosition: 'top',\n      duration: 1000\n    });\n  }\n\n  addReviews() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.route.navigate(['/PostReviews'], navigationExtras);\n  }\n\n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module'], navigationExtras);\n  }\n\n  updateReviewListShown(event: any) {\n    var start = event.pageIndex * 5;\n    this.reviewListShown = this.reviewList.slice(start, start + 5);\n  }\n\n\n}\n","<main>\n    <div class=\"left-panel\">\n        <div class=\"mat-display-1\">{{module.moduleCode}} - {{module.title}}\n            <button mat-icon-button (click)=\"addToMyModules()\" matTooltip=\"add to my modules\">\n                <mat-icon>add_box</mat-icon>\n            </button>\n        </div>\n        <mat-divider></mat-divider>\n        <div class=\"subheader\">\n            <div class=\"mat-body\">\n                number of reviews: {{reviewList.length}}\n            </div>\n            <div class=\"add-reviews-btn\">\n                <button mat-icon-button (click)=\"addReviews()\" matTooltip=\"add reviews\">\n                    <mat-icon>add_circle</mat-icon>\n                </button>\n            </div>\n        </div>\n        <mat-card class=\"no-reviews-yet mat-h1\" *ngIf=\"reviewList.length==0\">\n            <mat-card-content>\n                <span class=\"mat-h3\">No reviews yet!</span>\n                <mat-icon class=\"no-reviews-icon\">sentiment_very_dissatisfied</mat-icon>\n            </mat-card-content>\n        </mat-card>\n        <mat-card *ngFor=\"let review of reviewListShown\" class=\"review-container\">\n            <mat-card-header>\n                <div mat-card-avatar class=\"header-image\"></div>\n                <mat-card-title>\n                    <span class=\"user-name\">\n                        {{userName}}\n                        <span class=\"mat-caption\">Under Prof {{review.prof}}, {{review.acadYear}}</span>\n                    </span>\n                </mat-card-title>\n                <mat-card-subtitle>\n                    {{review.date}} - {{review.time}}\n                </mat-card-subtitle>\n            </mat-card-header>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-content>\n                <div class=\"review\">\n                    {{review.reviewAndRatings.review}}\n                </div>\n                <div class=\"extra-info mat-caption\">\n                    Expected Grade: {{review.extraInfo.gradeExpected}}\n                </div>\n\n                <div class=\"extra-info mat-caption\">\n                    Grade Obtained: {{review.extraInfo.gradeObtained}}\n                </div>\n\n            </mat-card-content>\n            <mat-divider></mat-divider>\n\n            <mat-card-actions>\n                <div class=\"flex-container ratings\">\n                    <div matTooltip=\"10 for most satisfied\">\n                        general: {{review.reviewAndRatings.general}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"review.reviewAndRatings.general<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.general>2&&review.reviewAndRatings.general<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.general>4&&review.reviewAndRatings.general<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.general>6&&review.reviewAndRatings.general<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most difficult\">\n                        difficulty: {{review.reviewAndRatings.difficulty}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon\n                                *ngIf=\"review.reviewAndRatings.difficulty>6&&review.reviewAndRatings.difficulty<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon\n                                *ngIf=\"review.reviewAndRatings.difficulty>4&&review.reviewAndRatings.difficulty<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon\n                                *ngIf=\"review.reviewAndRatings.difficulty>2&&review.reviewAndRatings.difficulty<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.difficulty<3\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for heaviest workload\">\n                        workload: {{review.reviewAndRatings.workload}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"review.reviewAndRatings.workload>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.workload>6&&review.reviewAndRatings.workload<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.workload>4&&review.reviewAndRatings.workload<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.workload>2&&review.reviewAndRatings.workload<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most willing to recommend\">\n                        recommend: {{review.reviewAndRatings.recommend}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"review.reviewAndRatings.recommend<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.recommend>2&&review.reviewAndRatings.recommend<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.recommend>4&&review.reviewAndRatings.recommend<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.recommend>6&&review.reviewAndRatings.recommend<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"review.reviewAndRatings.recommend>8\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"btns\">\n                    <button mat-icon-button matTooltip=\"like\">\n                        <mat-icon>thumb_up</mat-icon>\n                    </button>\n                    <button mat-icon-button matTooltip=\"dislike\">\n                        <mat-icon>thumb_down</mat-icon>\n                    </button>\n                    <button mat-icon-button matTooltip=\"share\">\n                        <mat-icon>share</mat-icon>\n                    </button>\n                </div>\n            </mat-card-actions>\n\n        </mat-card>\n        <mat-paginator \n            [length]=\"reviewList.length\" \n            pageSize=\"5\" \n            showFirstLastButtons=\"true\"\n            hidePageSize=\"true\"\n            (page)=\"updateReviewListShown($event)\"></mat-paginator>\n    </div>\n    <div class=\"right-panel\">\n        <mat-card>\n            <mat-card-title>\n                Average Ratings:\n            </mat-card-title>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-content>\n                <div class=\"average-ratings-container\">\n                    <div class=\"average-rating\" matTooltip=\"10 for most satisfied\">\n                        general: {{averageRatings.averageGeneral}} / 10\n                    </div>\n                    <div class=\"average-rating\" matTooltip=\"10 for most difficult\">\n                        difficulty: {{averageRatings.averageDifficulty}} / 10\n                    </div>\n                </div>\n                <div class=\"average-ratings-container\">\n                    <div class=\"average-rating\" matTooltip=\"10 for heaviest workload\">\n                        workload: {{averageRatings.averageWorkload}} / 10\n                    </div>\n                    <div class=\"average-rating\" matTooltip=\"10 for most willing to recommend\">\n                        recommend: {{averageRatings.averageRecommend}} / 10\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n\n        <mat-card>\n            <mat-card-title>\n                To see more:\n            </mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content class=\"more-module-list-container\">\n                <div *ngFor=\"let module of moreModuleList\">\n                    <mat-option class=\"more-module-option\" (click)=\"goModule(module.moduleCode)\" [matTooltip]=\"module.title\">\n                        <div class=\"module-title\">{{module.moduleCode}} - {{module.title}}</div>\n                        <div class=\"module-info\">\n                            {{module.faculty}} - {{module.department}} - {{module.moduleCredit}} MCs\n                        </div>\n                    </mat-option>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { MyModulesService } from '../../services/my-modules.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Module } from 'src/app/module';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { PostListService } from \"../../services/post-list.service\";\nimport { AverageRatingsService } from \"../../services/average-ratings.service\";\nimport { AverageRatings } from 'src/app/averageRatings';\n\n@Component({\n  selector: 'app-my-modules',\n  templateUrl: './my-modules.component.html',\n  styleUrls: ['./my-modules.component.css']\n})\nexport class MyModulesComponent implements OnInit {\n\n  public myModuleList: Module[] = [];\n\n  public listOfAverageRatings: any[] = [];\n\n  public listOfNumOfReviews: number[] = [];\n\n  constructor(public myModulesService: MyModulesService, \n    public route: Router, \n    private snackBar: MatSnackBar, \n    public postListService: PostListService,\n    public averageRatingsService: AverageRatingsService) { }\n\n  ngOnInit(): void {\n    this.myModuleList.forEach((module: Module) => {\n        this.listOfNumOfReviews.push(0);\n        this.listOfAverageRatings.push(AverageRatings.emptyAverageRatings);\n    })\n      this.myModuleList = this.myModulesService.getMyModuleList();\n      this.myModuleList.forEach((module: Module) => {\n        this.postListService.countPostList(module.moduleCode).subscribe((numOfReviews: number) => {\n          this.listOfNumOfReviews.push(numOfReviews);\n        })\n      })\n      this.myModuleList.forEach((module: Module) => {\n        this.averageRatingsService.getAverageRatingsByModuleCode(module.moduleCode).subscribe((averageRatings: any) => {\n          this.listOfAverageRatings.push(averageRatings);\n        })\n      })\n  }\n\n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module'], navigationExtras);\n  }\n\n  deleteModule(moduleCode: string) {\n    this.myModulesService.deleteModule(moduleCode);\n    this.myModuleList = this.myModulesService.getMyModuleList();\n    this.snackBar.open('Successfully deleted from my modules!', 'Close', {\n      verticalPosition: 'top',\n      duration: 1000\n    });\n  }\n\n  goModuleList() {\n    this.route.navigate(['ModuleList']);\n  }\n\n}\n","<main>\n    <mat-card *ngFor=\"let module of myModuleList; let key=index\">\n        <mat-card-title>\n            {{module.moduleCode}} - {{module.title}}\n        </mat-card-title>\n\n        <mat-card-subtitle>\n            {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}\n        </mat-card-subtitle>\n\n        <mat-card-content>\n            Average Ratings:\n            <div class=\"average-ratings-container\">\n                <div class=\"average-rating\" matTooltip=\"10 for most satisfied\">\n                    general: {{listOfAverageRatings[key].averageGeneral}} / 10\n                </div>\n                <div class=\"average-rating\" matTooltip=\"10 for most difficult\">\n                    difficulty: {{listOfAverageRatings[key].averageDifficulty}} / 10\n                </div>\n            </div>\n            <div class=\"average-ratings-container\">\n                <div class=\"average-rating\" matTooltip=\"10 for heaviest workload\">\n                    workload: {{listOfAverageRatings[key].averageWorkload}} / 10\n                </div>\n                <div class=\"average-rating\" matTooltip=\"10 for most willing to recommend\">\n                    recommend: {{listOfAverageRatings[key].averageRecommend}} / 10\n                </div>\n            </div>\n\n            <div class=\"mat-caption\">\n                number of reviews: {{listOfNumOfReviews[key]}}\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions>\n            <button mat-icon-button (click)=\"goModule(module.moduleCode)\">\n                <mat-icon matTooltip=\"view\">search</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)=\"deleteModule(module)\">\n                <mat-icon matTooltip=\"delete\">cancel</mat-icon>\n            </button>\n        </mat-card-actions>\n\n    </mat-card>\n\n    <mat-card class=\"no-modules-added-yet\" *ngIf=\"myModuleList.length==0\">\n        <mat-card-content>\n            <span class=\"mat-h1\">No modules added yet!</span>\n            <mat-icon>sentiment_very_dissatisfied</mat-icon>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button (click)=goModuleList() color=\"primary\">\n                Go to add my modules\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</main>","export class Module {\n    constructor(\n        public moduleCode: string,\n        public title: string,\n        public moduleCredit: string,\n        public department: string,\n        public faculty: string,\n        public description: string\n      ) { }\n}","export class RefinementList {\n    static emptyRefinementList = new RefinementList([], [], [], []);\n    constructor(public Faculty: string[], \n        public Department: string[], \n        public ModuleCredit: string[], \n        public Level: string[]) {}\n    \n    isEmpty() {\n        return this.Faculty.length == 0 \n            && this.Department.length == 0 \n            && this.ModuleCredit.length == 0 \n            && this.Level.length == 0;\n    }\n}","import { Injectable } from '@angular/core';\nimport { PostListService } from './post-list.service';\nimport { ReviewPost } from '../reviewPost';\nimport { Module } from '../module';\nimport { map } from \"rxjs/operators\";\nimport { AverageRatings } from '../averageRatings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AverageRatingsService {\n\n  constructor(public postListService: PostListService) { }\n\n  public getAverageRatingsByReviewList(reviewList: ReviewPost[]) {\n\n    var averageRatings = new AverageRatings('0', '0', '0', '0');\n\n    var general = 0;\n    var difficulty = 0;\n    var workload = 0;\n    var recommend = 0;\n\n    if (reviewList.length > 0) {\n      reviewList.forEach((review: ReviewPost) => {\n        general = general + review.reviewAndRatings.recommend;\n        difficulty = difficulty + review.reviewAndRatings.difficulty;\n        workload = workload + review.reviewAndRatings.workload;\n        recommend = recommend + review.reviewAndRatings.general;\n      })\n\n      averageRatings.averageRecommend = (recommend / reviewList.length).toFixed(2);\n      averageRatings.averageDifficulty = (difficulty / reviewList.length).toFixed(2);\n      averageRatings.averageWorkload = (workload / reviewList.length).toFixed(2);\n      averageRatings.averageGeneral = (general / reviewList.length).toFixed(2);\n    }\n\n    return averageRatings;\n  }\n\n  public getAverageRatingsByModuleCode(moduleCode: string) {\n    return this.postListService.getPostListOfModule(moduleCode).pipe(\n      map((reviewList: ReviewPost[]) => {\n        return this.getAverageRatingsByReviewList(reviewList);\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Module } from '../module';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleListService {\n\n  public cachedModuleList: Module[] = [];\n\n  constructor(public http: HttpClient) { }\n\n  updateLocalStorage() {\n    this.http.get('/modules').subscribe((moduleList: Module[]) => {\n      localStorage.setItem('moduleList', JSON.stringify(moduleList));\n      this.cachedModuleList = moduleList;\n    });\n  }\n\n  getModuleList() {\n    if (this.cachedModuleList.length > 0) {\n      return of(this.cachedModuleList);\n    } else if (localStorage.getItem('moduleList')) {\n      this.cachedModuleList = JSON.parse(localStorage.getItem('moduleList'));\n      return of(this.cachedModuleList);\n    } else {\n      this.updateLocalStorage();\n      return this.http.get('/modules');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Module } from '../module';\nimport { SearchService } from './search.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyModulesService {\n\n  public myModuleList: Module[] = [];\n\n  constructor(public searchService: SearchService) { }\n\n  getMyModuleList() {\n    if (this.myModuleList.length == 0) {\n      if (localStorage.getItem('myModuleList')) {\n        this.myModuleList = JSON.parse(localStorage.getItem('myModuleList'));\n      } else {\n        this.updateLocalStorage();\n      }\n    } \n    return this.myModuleList;\n  }\n\n  addModule(module: Module) {\n    this.myModuleList.push(module);\n    this.updateLocalStorage();\n  }\n\n  deleteModule(moduleCode: string) {\n    this.myModuleList = this.myModuleList.filter((module: Module) => {\n      return module.moduleCode != moduleCode;\n    })\n    this.updateLocalStorage();\n  }\n\n  updateLocalStorage() {\n    localStorage.setItem('myModuleList', JSON.stringify(this.myModuleList));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ReviewPost } from \"../reviewPost\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { of } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostListService {\n\n  public cachedPostList: ReviewPost[] = [];\n\n  constructor(public http: HttpClient) { }\n\n  getPostList() {\n    if (this.cachedPostList.length > 0) {\n      return of(this.cachedPostList);\n    } else {\n      return this.http.get('/posts').pipe(\n        map((postList: ReviewPost[]) => {\n          this.cachedPostList = postList.reverse();\n          return this.cachedPostList;\n        })\n      );\n    }\n  }\n\n  addPost(post: ReviewPost) {\n    this.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.cachedPostList.unshift(post);\n    })\n    var httpOptions = { \n      headers: new HttpHeaders({'Content-Type': 'application/json'}) \n    };\n    this.http.post('/posts', post, httpOptions);\n  }\n\n  countPostList(moduleCode: string) {\n    return this.http.get('/posts/' + moduleCode + '/count');\n  }\n\n  getPostListOfModule(moduleCode: string) {\n    return this.http.get('/posts/' + moduleCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ModuleListService } from \"./module-list.service\";\nimport { RefinementList } from '../refinementList';\nimport { map } from \"rxjs/operators\";\nimport { Module } from \"../module\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  constructor(public moduleListService: ModuleListService) { }\n\n  private belongsToFaculty = (module: Module, facultyList: string[]) => {\n    var flag = false;\n    for (let i = 0; i < facultyList.length; i++) {\n      if (module.faculty == facultyList[i]) {\n        flag = true;\n        break;\n      }\n    }\n    return facultyList.length == 0 || flag;\n  }\n\n  private belongsToDepartment(module: Module, departmentList: string[]) {\n    var flag = false;\n    for (let i = 0; i < departmentList.length; i++) {\n      if (module.department == departmentList[i]) {\n        flag = true;\n        break;\n      }\n    }\n    return departmentList.length == 0 || flag;\n  }\n\n  public belongsToLevel(module: Module, levelList: string[]) {\n    var flag = false;\n    for (let i = 0; i < levelList.length; i++) {\n      let level = levelList[i].charAt(0);\n      let levelOfModule = module.moduleCode.replace(/^[A-Z]+/, '').charAt(0);\n      if (level == levelOfModule) {\n        flag = true;\n        break;\n      }\n    }\n    return levelList.length == 0 || flag;\n  }\n\n  public hasModuleCredit(module: Module, moduleCreditList: string[]) {\n    var flag = false;\n    for (let i = 0; i < moduleCreditList.length; i++) {\n      let moduleCredit = parseInt(module.moduleCredit);\n      switch (moduleCreditList[i]) {\n        case '0-3 MC': flag = moduleCredit < 4; break;\n        case '4 MC': flag = moduleCredit == 4; break;\n        case '5-8 MC': flag = moduleCredit < 9 && moduleCredit > 4; break;\n        case 'More than 8 MC': flag = moduleCredit > 8; break;\n      }\n      if (flag) break;\n    }\n    return moduleCreditList.length == 0 || flag;\n  }\n\n  getFullModuleList() {\n    return this.moduleListService.getModuleList();\n  }\n\n  search(searchInput: string, refinementList: RefinementList) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        if (refinementList.isEmpty()) {\n          return moduleList;\n        } else {\n          return moduleList.filter((module: Module) => {\n            return this.belongsToFaculty(module, refinementList.Faculty) &&\n              this.belongsToDepartment(module, refinementList.Department) &&\n              this.hasModuleCredit(module, refinementList.ModuleCredit) &&\n              this.belongsToLevel(module, refinementList.Level);\n          })\n        }\n      }),\n      map((moduleList: Module[]) => {\n        if (searchInput == '') {\n          return moduleList;\n        } else {\n          let uppercaseSearchInput = searchInput.toUpperCase();\n          return moduleList.filter((module: Module) => {\n            let uppercaseModuleTitle = module.title.toUpperCase();\n            return uppercaseModuleTitle.search(uppercaseSearchInput) != -1 || module.moduleCode.search(uppercaseSearchInput) != -1;\n          });\n        }\n      })\n    );\n  }\n\n  getModule(moduleCode: string) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        let moduleFound: Module;\n        for (var i = 0; i < moduleList.length; i++) {\n          if (moduleList[i].moduleCode == moduleCode) {\n            moduleFound = moduleList[i];\n            break;\n          }\n        }\n        return moduleFound;\n      })\n    )\n  }\n\n  getMoreModuleList(moduleCode: String) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        let index = moduleList.map((module: Module) => {\n          return module.moduleCode;\n        }).findIndex((item: string) => item == moduleCode);\n        let start = index - 5 < 0 \n          ? 0 \n          : index + 5 > moduleList.length - 1\n            ? moduleList.length - 11\n            : index - 5;\n        return moduleList.slice(start, start + 11).filter((module: Module) => module.moduleCode != moduleCode);\n      })\n    )\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}