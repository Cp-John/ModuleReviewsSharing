{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Question.ts","./src/app/adminAccount.ts","./src/app/answer.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/averageRatings.ts","./src/app/components/admin-account-create/admin-account-create.component.ts","./src/app/components/admin-account-create/admin-account-create.component.html","./src/app/components/admin-account-login/admin-account-login.component.ts","./src/app/components/admin-account-login/admin-account-login.component.html","./src/app/components/data-collected/data-collected.component.ts","./src/app/components/data-collected/data-collected.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/latest-posts/latest-posts.component.ts","./src/app/components/latest-posts/latest-posts.component.html","./src/app/components/module-list-subcomponents/main-board/main-board.component.ts","./src/app/components/module-list-subcomponents/main-board/main-board.component.html","./src/app/components/module-list-subcomponents/refinement-list/refinement-list.component.ts","./src/app/components/module-list-subcomponents/refinement-list/refinement-list.component.html","./src/app/components/module-list-subcomponents/refinement-table/refinement-table.component.ts","./src/app/components/module-list-subcomponents/refinement-table/refinement-table.component.html","./src/app/components/module-list/module-list.component.ts","./src/app/components/module-list/module-list.component.html","./src/app/components/module-subcomponents/module-description/module-description.component.ts","./src/app/components/module-subcomponents/module-description/module-description.component.html","./src/app/components/module-subcomponents/question-list/question-list.component.ts","./src/app/components/module-subcomponents/question-list/question-list.component.html","./src/app/components/module-subcomponents/review-list/review-list.component.ts","./src/app/components/module-subcomponents/review-list/review-list.component.html","./src/app/components/module/module.component.ts","./src/app/components/module/module.component.html","./src/app/components/my-modules/my-modules.component.ts","./src/app/components/my-modules/my-modules.component.html","./src/app/components/post-review-subcomponents/extra-info/extra-info.component.ts","./src/app/components/post-review-subcomponents/extra-info/extra-info.component.html","./src/app/components/post-review-subcomponents/module-info/module-info.component.ts","./src/app/components/post-review-subcomponents/module-info/module-info.component.html","./src/app/components/post-review-subcomponents/review-and-ratings/review-and-ratings.component.ts","./src/app/components/post-review-subcomponents/review-and-ratings/review-and-ratings.component.html","./src/app/components/post-review-subcomponents/select-header-image/select-header-image.component.ts","./src/app/components/post-review-subcomponents/select-header-image/select-header-image.component.html","./src/app/components/post-review/post-review.component.ts","./src/app/components/post-review/post-review.component.html","./src/app/extraInfo.ts","./src/app/module.ts","./src/app/moduleInfo.ts","./src/app/refinementList.ts","./src/app/reviewAndRatings.ts","./src/app/reviewPost.ts","./src/app/services/admin-account.service.ts","./src/app/services/average-ratings.service.ts","./src/app/services/module-list.service.ts","./src/app/services/my-modules.service.ts","./src/app/services/post-list.service.ts","./src/app/services/question-list.service.ts","./src/app/services/refinement-list.service.ts","./src/app/services/search.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Answer } from './answer';\n\nexport class Question {\n    public content: string;\n    public date: string;\n    public time: string;\n    public moduleCode: string;\n    public answerList: Answer[];\n    public _id: string;\n    constructor(content: string, date: string,\n        time: string, moduleCode: string) { \n            this.content = content;\n            this.date = date;\n            this.time = time;\n            this.moduleCode = moduleCode;\n            this.answerList = [];\n            this._id = '';\n        }\n}","export class AdminAccount {\n    public accountName: string;\n    public password: string;\n\n    constructor(accountName: string, password: string) {\n        this.accountName = accountName;\n        this.password = password;\n    }\n}","export class Answer {\n    public content: string;\n    public date: string;\n    public time: string;\n    public questionId: string;\n    public _id: string\n    constructor(\n        content: string,\n        date: string,\n        time: string,\n        questionId: string,\n    ) { \n        this.content = content;\n        this.date = date;\n        this.time = time;\n        this.questionId = questionId;\n        this._id = '';\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LatestPostsComponent } from './components/latest-posts/latest-posts.component';\nimport { MyModulesComponent } from './components/my-modules/my-modules.component';\nimport { ModuleComponent } from './components/module/module.component';\nimport { ModuleListComponent } from './components/module-list/module-list.component';\nimport { PostReviewComponent } from './components/post-review/post-review.component';\nimport { ModuleDescriptionComponent } from './components/module-subcomponents/module-description/module-description.component';\nimport { QuestionListComponent } from './components/module-subcomponents/question-list/question-list.component';\nimport { ReviewListComponent } from './components/module-subcomponents/review-list/review-list.component';\nimport { AdminAccountLoginComponent } from './components/admin-account-login/admin-account-login.component';\nimport { AdminAccountCreateComponent } from './components/admin-account-create/admin-account-create.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'ModuleList', component: ModuleListComponent},\n  {path: 'PostReview', component: PostReviewComponent},\n  {path: 'LatestPosts', component: LatestPostsComponent},\n  {path: 'Module', component: ModuleComponent, children: [\n    {path: 'Description', component: ModuleDescriptionComponent},\n    {path: 'QuestionList', component: QuestionListComponent},\n    {path: 'ReviewList', component: ReviewListComponent},\n  ]},\n  {path: 'MyModules', component: MyModulesComponent},\n  {path: 'AdminAccountLogin', component: AdminAccountLoginComponent},\n  {path: 'AdminAccountCreate', component: AdminAccountCreateComponent},\n  {path: 'Module', redirectTo: 'Module/Description'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'nusmods';\n}\n","<div class=\"container\">\n  <header>\n      <app-header></app-header>\n  </header>\n  \n  <main>\n      <router-outlet></router-outlet>\n  </main>\n</div>\n\n<footer>\n  <app-footer></app-footer>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LatestPostsComponent } from './components/latest-posts/latest-posts.component';\nimport { DataCollectedComponent } from './components/data-collected/data-collected.component';\nimport { MyModulesComponent } from './components/my-modules/my-modules.component';\nimport { ModuleComponent } from './components/module/module.component';\nimport { ModuleListComponent } from './components/module-list/module-list.component';\nimport { MainBoardComponent } from './components/module-list-subcomponents/main-board/main-board.component';\nimport { RefinementListComponent } from './components/module-list-subcomponents/refinement-list/refinement-list.component';\nimport { RefinementTableComponent } from './components/module-list-subcomponents/refinement-table/refinement-table.component';\nimport { PostReviewComponent } from './components/post-review/post-review.component';\nimport { ExtraInfoComponent } from './components/post-review-subcomponents/extra-info/extra-info.component';\nimport { ModuleInfoComponent } from './components/post-review-subcomponents/module-info/module-info.component';\nimport { ReviewAndRatingsComponent } from './components/post-review-subcomponents/review-and-ratings/review-and-ratings.component';\nimport { ModuleDescriptionComponent } from './components/module-subcomponents/module-description/module-description.component';\nimport { QuestionListComponent } from './components/module-subcomponents/question-list/question-list.component';\nimport { ReviewListComponent } from './components/module-subcomponents/review-list/review-list.component';\nimport { AdminAccountLoginComponent } from './components/admin-account-login/admin-account-login.component';\nimport { AdminAccountCreateComponent } from './components/admin-account-create/admin-account-create.component';\nimport { SelectHeaderImageComponent } from './components/post-review-subcomponents/select-header-image/select-header-image.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LatestPostsComponent,\n    DataCollectedComponent,\n    MyModulesComponent,\n    ModuleComponent,\n    ModuleListComponent,\n    MainBoardComponent,\n    RefinementListComponent,\n    RefinementTableComponent,\n    PostReviewComponent,\n    ExtraInfoComponent,\n    ModuleInfoComponent,\n    ReviewAndRatingsComponent,\n    ModuleDescriptionComponent,\n    QuestionListComponent,\n    ReviewListComponent,\n    AdminAccountLoginComponent,\n    AdminAccountCreateComponent,\n    SelectHeaderImageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatCardModule,\n    MatDividerModule,\n    MatSidenavModule,\n    MatAutocompleteModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    FormsModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class AverageRatings {\n    constructor(public averageGeneral: string,\n        public averageDifficulty: string,\n        public averageWorkload: string,\n        public averageRecommend: string,) {}\n\n    static emptyAverageRatings = new AverageRatings('0', '0', '0', '0');\n}","import { Component, OnInit } from '@angular/core';\nimport { AdminAccountService } from 'src/app/services/admin-account.service';\nimport { Router } from \"@angular/router\";\nimport { AdminAccount } from 'src/app/adminAccount';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormControl, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-admin-account-create',\n  templateUrl: './admin-account-create.component.html',\n  styleUrls: ['./admin-account-create.component.css']\n})\nexport class AdminAccountCreateComponent implements OnInit {\n\n  public isSuccessfulLogin: boolean = false;\n  public showErrorMessage: boolean = false;\n  public newAdminAccount: AdminAccount = new AdminAccount('', '');\n\n  public showSpinner: boolean = false;\n\n  public passwordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(4),\n    Validators.maxLength(11),\n  ])\n\n  public accountNameFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(20),\n  ])\n\n  constructor(public adminAccountService: AdminAccountService,\n    public route: Router,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    if (this.adminAccountService.getAdminAccount()) {\n      this.isSuccessfulLogin = true;\n    }\n  }\n\n  goAdminAccountLogin() {\n    this.route.navigate(['/AdminAccountLogin']);\n  }\n\n  register() {\n    this.adminAccountService.getAdminAccountList().subscribe((adminAccountList: AdminAccount[]) => {\n      if (adminAccountList.map((adminAccount: AdminAccount) => adminAccount.accountName).includes(this.newAdminAccount.accountName)) {\n        this.showErrorMessage = true;\n      } else if (this.newAdminAccount.accountName.length > 2 && this.newAdminAccount.accountName.length < 21 &&\n        this.newAdminAccount.password.length > 3 && this.newAdminAccount.password.length < 12) {\n        this.adminAccountService.createAccount(this.newAdminAccount).subscribe((adminAccount: AdminAccount) => {\n          this.route.navigate(['/AdminAccountLogin']);\n          this.snackBar.open('Admin account ' + this.newAdminAccount.accountName + \" is successfully registered!\", '', {\n            duration: 2000\n          });\n        });\n      }\n    })\n  }\n}\n","<mat-card *ngIf=\"isSuccessfulLogin\" class=\"container\">\n    <mat-card-header>\n        <mat-card-title>Register</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form>\n            <table cellspacing=\"0\">\n                <tr>\n                    <td>\n                        <mat-form-field class=\"full-width\">\n                            <input matInput placeholder=\"AccountName\" \n                                [formControl]=\"accountNameFormControl\"\n                                [(ngModel)]=\"newAdminAccount.accountName\" name=\"accountName\"\n                                (input)=\"showErrorMessage=false\" required>\n                            <mat-error *ngIf=\"accountNameFormControl.hasError('required') || accountNameFormControl.hasError('minLength') || accountNameFormControl.hasError('maxLength')\">\n                                Please enter a valid accountName\n                            </mat-error>\n                            <mat-hint>\n                                minLength: 3; maxLength: 20\n                            </mat-hint>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <mat-form-field class=\"full-width\">\n                            <input matInput placeholder=\"Password\" [(ngModel)]=\"newAdminAccount.password\"\n                                [formControl]=\"passwordFormControl\"\n                                (input)=\"showErrorMessage=false\" type=\"password\" name=\"password\" required>\n                            <mat-error *ngIf=\"passwordFormControl.hasError('required') || passwordFormControl.hasError('minLength') || passwordFormControl.hasError('maxLength')\">\n                                Please enter a valid password\n                            </mat-error>\n                            <mat-hint>\n                                minLength: 4; maxLength: 11\n                            </mat-hint>\n                        </mat-form-field>\n                    </td>\n                </tr>\n            </table>\n            <mat-hint *ngIf=\"showErrorMessage\" style=\"color: red; margin-left: 12%;\">The account name already exists!</mat-hint>\n        </form>\n        <mat-spinner [style.display]=\"showSpinner ? 'block' : 'none'\"></mat-spinner>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"primary\" (click)=\"register()\">Register</button>\n    </mat-card-actions>\n</mat-card>\n\n<mat-card *ngIf=\"!isSuccessfulLogin\" class=\"container\">\n    <mat-card-header>\n        <mat-card-title>Please login first!</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-actions>\n        <button mat-raised-button (click)=\"goAdminAccountLogin()\" color=\"primary\">Login</button>\n    </mat-card-actions>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { AdminAccountService } from 'src/app/services/admin-account.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-admin-account-login',\n  templateUrl: './admin-account-login.component.html',\n  styleUrls: ['./admin-account-login.component.css']\n})\nexport class AdminAccountLoginComponent implements OnInit {\n\n  public password: string = '';\n\n  public accountName: string = '';\n\n  public showSpinner: boolean = false;\n\n  public showErrorMessage: boolean = false;\n\n  public isSuccessfulLogin: boolean = false;\n\n  constructor(public adminAccountService: AdminAccountService, public route: Router) { }\n\n  ngOnInit(): void {\n    if (this.adminAccountService.getAdminAccount()) {\n      this.isSuccessfulLogin = true;\n      this.accountName = this.adminAccountService.getAdminAccount().accountName;\n    }\n  }\n\n  login() {\n    this.showSpinner = true;\n    this.adminAccountService.login(this.accountName, this.password).subscribe((isSuccessful: boolean) => {\n      this.showSpinner = false;\n      if (isSuccessful) {\n        this.isSuccessfulLogin = true;\n      } else {\n        this.showErrorMessage = true;\n      }\n    })\n  }\n\n  logout() {\n    this.adminAccountService.logout();\n    this.isSuccessfulLogin = false;\n    this.password = '';\n  }\n\n  goAdminAccountCreate() {\n    this.route.navigate(['/AdminAccountCreate']);\n  }\n}","<mat-card class=\"container\" *ngIf=\"!isSuccessfulLogin\">\n    <mat-card-header>\n        <mat-card-title>Login</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form>\n            <table cellspacing=\"0\">\n                <tr>\n                    <td>\n                        <mat-form-field class=\"full-width\">\n                            <input matInput placeholder=\"AccountName\" [(ngModel)]=\"accountName\" name=\"accountName\"\n                                (input)=\"showErrorMessage=false\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <mat-form-field class=\"full-width\">\n                            <input matInput placeholder=\"Password\" [(ngModel)]=\"password\"\n                                (input)=\"showErrorMessage=false\" type=\"password\" name=\"password\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n            </table>\n            <mat-hint *ngIf=\"showErrorMessage\" style=\"color: red; margin-left: 12%;\">The account name or password is\n                incorrect!</mat-hint>\n        </form>\n        <mat-spinner [style.display]=\"showSpinner ? 'block' : 'none'\"></mat-spinner>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button (click)=\"login()\" color=\"primary\">Login</button>\n    </mat-card-actions>\n</mat-card>\n\n<mat-card class=\"container\" *ngIf=\"isSuccessfulLogin\">\n    <mat-card-header>\n        <mat-card-title>Welcome, {{accountName}}!</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n        <pre class=\"mat-body\">\n        <strong>What an admin stuff can do:</strong>\n\n                1.Delete a review post, a question, and an answer;\n                2.<a (click)=\"goAdminAccountCreate()\" routerLink=\"/AdminAccountCreate\">Create another admin account</a>;\n            </pre>\n    </mat-card-content>\n\n    <mat-card-actions>\n        <button mat-raised-button (click)=\"logout()\" color=\"primary\">Logout</button>\n    </mat-card-actions>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { SearchService } from '../../services/search.service';\nimport { PostListService } from '../../services/post-list.service';\nimport { Module } from '../../module';\nimport { ReviewPost } from 'src/app/reviewPost';\n\n@Component({\n  selector: 'app-data-collected',\n  templateUrl: './data-collected.component.html',\n  styleUrls: ['./data-collected.component.css']\n})\nexport class DataCollectedComponent implements OnInit {\n\n  public numberOfModules: number = 0;\n  public numberOfReviews: number = 0;\n\n  constructor(public searchService: SearchService, public postListService: PostListService) { }\n\n  ngOnInit(): void {\n    this.searchService.getFullModuleList().subscribe((moduleList: Module[]) => {\n      this.numberOfModules = moduleList.length;\n    })\n\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.numberOfReviews = postList.length;\n    })\n  }\n}\n","<mat-card>\n    <mat-card-title>Data collected</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n        <div class=\"data-collected\">Number of modules: {{numberOfModules}}</div>\n        <div class=\"data-collected\">Number of reviews: {{numberOfReviews}}</div>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"mat-caption\">\n        Made By Cao Peng & Li Zhuoran, June 2020\n    </div>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public route: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goHome() {\n    this.route.navigate(['/']);\n  }\n\n  goModuleList() {\n    this.route.navigate(['/ModuleList']);\n  }\n\n  goPostReviews() {\n    this.route.navigate(['/PostReview']);\n  }\n\n  goLatestPosts() {\n    this.route.navigate(['/LatestPosts']);\n  }\n\n  goMyModules() {\n    this.route.navigate(['/MyModules']);\n  }\n  \n  goAdminAccountLogin() {\n    this.route.navigate(['/AdminAccountLogin']);\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"nusmods\">\n        <button mat-button>\n            <span class=\"mat-h1\" (click)=\"goHome()\">Home</span>\n        </button>\n    </div>\n\n    <div class=\"btns\">\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goModuleList()\">Module List</span>\n        </button>\n\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goPostReviews()\">Post Reviews</span>\n        </button>\n\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goLatestPosts()\">Latest Posts</span>\n        </button>\n    </div>\n\n    <div class=\"my-modules-and-admin-login\">\n        <button mat-raised-button (click)=\"goMyModules()\">My Modules</button>\n        <button mat-icon-button (click)=\"goAdminAccountLogin()\">\n            <mat-icon matTooltip=\"admin account login\" class=\"icon-button\">\n                admin_panel_settings\n            </mat-icon>\n        </button>\n    </div>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationExtras, NavigationEnd } from '@angular/router';\nimport { SearchService } from '../../services/search.service';\nimport { Module } from '../../module';\nimport { RefinementList } from '../../refinementList';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public searchInput: string = '';\n\n  public selectedModule: Module;\n\n  public moduleListShown: Module[] = [];\n\n  public inputStatus: boolean = false;\n\n  constructor(public route: Router, public searchService: SearchService) { }\n\n  ngOnInit(): void {\n    this.search();\n  }\n\n  select(module: Module) {\n    this.selectedModule = module;\n    this.goModule(module.moduleCode);\n  }\n  \n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  search() {\n    this.searchService.search(this.searchInput, RefinementList.emptyRefinementList).subscribe((searchResult: Module[]) => {\n      this.moduleListShown = searchResult.slice(0, 10);\n    })\n  }\n\n  goModuleList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        searchInput: this.searchInput\n      }\n    }\n    this.route.navigate(['/ModuleList'], navigationExtras);\n  }\n\n  goModuleListWithNoInput() {\n    this.route.navigate(['/ModuleList']);\n  }\n\n  goPostReviews() {\n    this.route.navigate(['/PostReview']);\n  }\n\n  goLatestPosts() {\n    this.route.navigate(['/LatestPosts']);\n  }\n\n  inputStatusOn() {\n    this.inputStatus = true;\n  }\n\n}\n","<div>\n    <div class=\"headline mat-display-1\">ModuleReviewsSharing@NUS</div>\n    <div class=\"mat-caption\">reviews | ratings | recommend</div>\n    <div class=\"search-box\">\n        <mat-icon>search</mat-icon>\n        <mat-form-field>\n            <input type=\"text\" autocomplete=\"off\" matInput placeholder=\"Module code or title\"\n                (input)=\"search(); inputStatusOn()\" [(ngModel)]=\"searchInput\">\n            <button mat-button *ngIf=\"searchInput\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"searchInput=''; search()\">\n                <mat-icon class=\"icon-btn\">close</mat-icon>\n            </button>\n        </mat-form-field>\n    </div>\n    <div class=\"scrollable-container\" cdkScrollable *ngIf=\"inputStatus\">\n        <mat-option *ngFor=\"let module of moduleListShown\" (click)=\"select(module)\">\n            <div class=\"module-info\">\n                <div class=\"mat-h4\">{{module.moduleCode}} - {{module.title}} </div>\n                <div class=\"mat-caption\"> {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}MCs </div>\n            </div>\n        </mat-option>\n        <button class=\"more-btn\" mat-button color=\"primary\" (click)=\"goModuleList()\">More</button>\n    </div>\n    <div class=\"flex-container\">\n        <button mat-button (click)=\"goModuleListWithNoInput()\" class=\"colored-btn\">Module List</button>\n        <button mat-raised-button (click)=\"goPostReviews()\" color=\"primary\">Post Reviews</button>\n        <button mat-button (click)=\"goLatestPosts()\" class=\"colored-btn\">Latest Posts</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PostListService } from '../../services/post-list.service';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { AdminAccountService } from 'src/app/services/admin-account.service';\n\n@Component({\n  selector: 'app-latest-posts',\n  templateUrl: './latest-posts.component.html',\n  styleUrls: ['./latest-posts.component.css']\n})\nexport class LatestPostsComponent implements OnInit {\n\n  public postList: ReviewPost[] = [];\n\n  public postListShown: ReviewPost[] = [];\n\n  public userName: string = \"Anonymous\";\n\n  public postListLike: string[] = [];\n\n  public postListDislike: string[] = [];\n\n  public hoverOnShareBtn: boolean[];\n  \n  public hoverOnShareBox: boolean[];\n\n  public isSuccessfulLogin: boolean = false;\n\n  public pageIndex: number = 0;\n\n  constructor(public postListService: PostListService, \n    public route: Router, \n    public snackBar: MatSnackBar,\n    public adminAccountService: AdminAccountService) { }\n\n  ngOnInit(): void {\n    this.resetHoverOn();\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.postList = postList.reverse();\n      this.postListShown = postList.slice(0, 5);\n    });\n    this.updatePostListLikeAndDislike();\n    if (this.adminAccountService.getAdminAccount()) {\n      this.isSuccessfulLogin = true;\n    }\n  }\n\n  goModule(moduleCode: String) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  resetHoverOn() {\n    this.hoverOnShareBtn = [false, false, false, false, false];\n    this.hoverOnShareBox = [false, false, false, false, false];\n  }\n\n  updatePostListShown(event: any) {\n    this.pageIndex = event.pageIndex;\n    var start = this.pageIndex * 5;\n    this.postListShown = this.postList.slice(start, start + 5);\n  }\n\n  delete(postId: string) {\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.postListService.deletePost(postId).subscribe((reviewPost: ReviewPost) => {\n        this.postList = this.postList.filter((reviewPost: ReviewPost) => {\n          return reviewPost._id != postId;\n        });\n        var start = this.pageIndex * 5;\n        this.postListShown = this.postList.slice(start, start + 5);\n      })\n    })\n  }\n\n  updatePostListLikeAndDislike() {\n    this.postListLike = this.postListService.getPostListLike();\n    this.postListDislike = this.postListService.getPostListDislike();\n  }\n\n  onClickLikePost(post: ReviewPost) {\n    var postId = post._id;\n    if (this.postListDislike.includes(postId)) {\n      post.numOfDislikes--;\n      post.numOfLikes++;\n      this.postListService.cancelDislikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.likePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListLike.includes(postId)) {\n      post.numOfLikes++;\n      this.postListService.likePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfLikes--;\n      this.postListService.cancelLikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onClickDislikePost(post: ReviewPost) {\n    var postId = post._id;\n    if (this.postListLike.includes(postId)) {\n      post.numOfLikes--;\n      post.numOfDislikes++;\n      this.postListService.cancelLikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListDislike.includes(postId)) {\n      post.numOfDislikes++;\n      this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfDislikes--;\n      this.postListService.cancelDislikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onCopyPost(post: ReviewPost, copyContent: string) {\n    post.numOfShares++;\n    const oInput = document.createElement('textarea');\n    var postId = post._id;\n    oInput.value = copyContent + '\\n@ModuleReviewsSharing';\n    document.body.appendChild(oInput);\n    oInput.select();\n    document.execCommand('Copy');\n    oInput.style.display = 'none';\n    this.snackBar.open('Review post copied!', '', {\n      duration: 2000,\n    });\n    this.postListService.sharePost(postId).subscribe((post_1: ReviewPost) => {\n    });\n  } \n\n  ifLike(postId: string) {\n    return this.postListLike.includes(postId);\n  }\n\n  ifDislike(postId: string) {\n    return this.postListDislike.includes(postId);\n  }\n\n  mouseLeaveShareBtn(key: number) {\n    setTimeout(() => this.hoverOnShareBtn[key] = false, 200);\n  }\n\n}\n","<main class=\"flex-container\">\n    <div class=\"left-panel\">\n        <div class=\"mat-display-1\">Latest Posts</div>\n        <mat-card class=\"no-reviews-yet mat-h1\" *ngIf=\"postList.length==0\">\n            No reviews yet!\n            <mat-icon>sentiment_very_dissatisfied</mat-icon>\n        </mat-card>\n        <mat-card *ngFor=\"let post of postListShown; let key=index\">\n            <mat-card-header class=\"flex-container\">\n                <div mat-card-avatar class=\"header-image\" [style.background-image]=\"'url(' + post.headerImage + ')'\">\n                </div>\n                <mat-card-title class=\"flex-container\">\n                    <span class=\"header\">\n                        {{post.moduleInfo.moduleCode}} - {{post.moduleInfo.title}}\n                        <span class=\"mat-caption\">Under Prof {{post.moduleInfo.prof}}, {{post.moduleInfo.acadYear}} /\n                            {{post.moduleInfo.semester}}\n                        </span>\n                    </span>\n                </mat-card-title>\n                <div class=\"view-btn\">\n                    <button mat-icon-button matTooltip=\"view\" (click)=\"goModule(post.moduleInfo.moduleCode)\">\n                        <mat-icon class=\"icon-btn\">search</mat-icon>\n                    </button>\n\n                    <button mat-icon-button matTooltip=\"delete\" (click)=\"delete(post._id)\" *ngIf=\"isSuccessfulLogin\">\n                        <mat-icon class=\"icon-btn\">delete</mat-icon>\n                    </button>\n                </div>\n                <mat-card-subtitle>\n                    {{post.date}} - {{post.time}} by {{userName}}\n                </mat-card-subtitle>\n            </mat-card-header>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-content>\n                <div class=\"review\">\n                    <pre class=\"mat-body\">\n                        {{post.reviewAndRatings.review}}\n                    </pre>\n                </div>\n\n                <div class=\"extra-info mat-caption\">\n                    Expected Grade: {{post.extraInfo.gradeExpected}}\n                </div>\n\n                <div class=\"extra-info mat-caption\">\n                    Grade Obtained: {{post.extraInfo.gradeObtained}}\n                </div>\n            </mat-card-content>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-actions class=\"flex-container\">\n                <div class=\"flex-container ratings\">\n                    <div matTooltip=\"10 for most satisfied\">\n                        general: {{post.reviewAndRatings.general}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>2&&post.reviewAndRatings.general<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>4&&post.reviewAndRatings.general<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>6&&post.reviewAndRatings.general<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most difficult\">\n                        difficulty: {{post.reviewAndRatings.difficulty}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>6&&post.reviewAndRatings.difficulty<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>4&&post.reviewAndRatings.difficulty<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>2&&post.reviewAndRatings.difficulty<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty<3\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for heaviest workload\">\n                        workload: {{post.reviewAndRatings.workload}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>6&&post.reviewAndRatings.workload<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>4&&post.reviewAndRatings.workload<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>2&&post.reviewAndRatings.workload<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most willing to recommend\">\n                        recommend: {{post.reviewAndRatings.recommend}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>2&&post.reviewAndRatings.recommend<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>4&&post.reviewAndRatings.recommend<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>6&&post.reviewAndRatings.recommend<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>8\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"btns\">\n                    <button mat-icon-button matTooltip=\"like\" (click)=\"onClickLikePost(post)\">\n                        <mat-icon class=\"icon-btn\" [ngClass]=\"{'blue-color': ifLike(post._id)}\">thumb_up</mat-icon>\n                        {{post.numOfLikes}}\n                    </button>\n                    <button mat-icon-button matTooltip=\"dislike\" (click)=\"onClickDislikePost(post)\">\n                        <mat-icon class=\"icon-btn\" [ngClass]=\"{'blue-color': ifDislike(post._id)}\">thumb_down</mat-icon>\n                        {{post.numOfDislikes}}\n                    </button>\n                    <button mat-icon-button matTooltip=\"share\" (mouseover)=\"hoverOnShareBtn[key] = true\"\n                        (mouseleave)=\"mouseLeaveShareBtn(key)\">\n                        <mat-icon class=\"icon-btn\">share</mat-icon>\n                        {{post.numOfShares}}\n                    </button>\n                    <mat-card class=\"share-box\" *ngIf=\"hoverOnShareBtn[key]||hoverOnShareBox[key]\"\n                        (mouseover)=\"hoverOnShareBox[key]=true\" (mouseleave)=\"hoverOnShareBox[key]=false\">\n                        <mat-card-title>\n                            Copy & Share\n                            <button mat-icon-button (click)=\"onCopyPost(post, copyContent.innerHTML)\" class=\"copy-btn\"\n                                matTooltip=\"copy review post\">\n                                <mat-icon class=\"icon-btn\">\n                                    content_copy\n                                </mat-icon>\n                            </button>\n                        </mat-card-title>\n                        <mat-card-content>\n                            <pre class=\"mat-body\" #copyContent>\n{{post.moduleInfo.moduleCode}} - {{post.moduleInfo.title}} taken by {{userName}}\nunder {{post.moduleInfo.prof}}, {{post.moduleInfo.acadYear}} / {{post.moduleInfo.semester}}:\n{{post.reviewAndRatings.review}}\ngeneral: {{post.reviewAndRatings.general}} / 10 (10 for most satisfied)         difficulty: {{post.reviewAndRatings.difficulty}} / 10 (10 for most difficult)\nworkload: {{post.reviewAndRatings.workload}} / 10 (10 for heaviest workload)    recommend: {{post.reviewAndRatings.recommend}} / 10 (10 for most willing to recommend)\n                        </pre>\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n            </mat-card-actions>\n        </mat-card>\n        <mat-paginator [length]=\"postList.length\" pageSize=\"5\" showFirstLastButtons=\"true\" hidePageSize=\"true\"\n            (page)=\"updatePostListShown($event)\"></mat-paginator>\n    </div>\n    <div class=\"right-panel\">\n        <app-data-collected></app-data-collected>\n    </div>\n</main>","import { Component, OnInit, Input } from '@angular/core';\nimport { SearchService } from '../../../services/search.service';\nimport { PostListService } from '../../../services/post-list.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { RefinementList } from '../../../refinementList';\nimport { Module } from '../../../module';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-main-board',\n  templateUrl: './main-board.component.html',\n  styleUrls: ['./main-board.component.css']\n})\nexport class MainBoardComponent implements OnInit {\n\n  public refinementList: RefinementList = new RefinementList([], [], [], []);\n\n  public selectorList: any = ['Faculty', 'Department', 'ModuleCredit', 'Level'];\n\n  public searchInput: string = '';\n\n  public prof: string = '';\n\n  public acadYear: string = '';\n\n  public filteredModuleList: Module[] = [];\n\n  public moduleListShown: Module[] = [];\n\n  public sortOption: string = 'moduleCode';\n\n  @Input('searchInput') searchInputFromFather: string;\n\n  constructor(public searchService: SearchService,\n    public route: Router,\n    public postListService: PostListService) { }\n\n  ngOnInit(): void {\n    if (this.searchInputFromFather) {\n      this.searchInput = this.searchInputFromFather;\n    }\n    this.search();\n  }\n\n  sortFilteredModuleList() {\n    this.filteredModuleList.sort(this.getSortMethod(this.sortOption));\n    this.moduleListShown = this.filteredModuleList.slice(0, 15);\n    this.updateNumOfReviews();\n  }\n\n  getSortMethod(key: string) {\n    if (key == 'moduleCredit') {\n      return (a: Module, b: Module) => {\n        return parseInt(a[key]) > parseInt(b[key]) ? 1 : -1;\n      }\n    } else {\n      return (a: Module, b: Module) => {\n        return a[key] > b[key] ? 1 : -1;\n      }\n    }\n  }\n\n  updateNumOfReviews() {\n    var arrOfCountRes = [];\n    this.moduleListShown.forEach((module: Module) => {\n      arrOfCountRes.push(this.postListService.countPostList(module.moduleCode));\n    })\n    forkJoin(arrOfCountRes).subscribe((listOfNumOfReviews: number[]) => {\n      this.moduleListShown.forEach((module: Module, index: number) => {\n        module.numOfReviews = listOfNumOfReviews[index];\n      })\n    })\n  }\n\n  goPostReviews(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/PostReview'], navigationExtras);\n  }\n\n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  updateRefinementList(refinementList: RefinementList) {\n    this.refinementList = refinementList;\n    this.search();\n  }\n\n  search() {\n    this.searchService.search(this.searchInput, this.refinementList).subscribe((searchResult: Module[]) => {\n      this.filteredModuleList = searchResult;\n      this.moduleListShown = this.filteredModuleList.slice(0, 15);\n      this.filteredModuleList.forEach((module: Module) => {\n        module.numOfReviews = 0;\n      })\n      this.updateNumOfReviews();\n      this.sortFilteredModuleList();\n    });\n  }\n\n  reverseFilteredModuleList() {\n    this.filteredModuleList = this.filteredModuleList.reverse()\n    this.moduleListShown = this.filteredModuleList.slice(0, 15);\n    this.updateNumOfReviews();\n  }\n\n  updateModuleListShown(event: any) {\n    var start = event.pageIndex * 15;\n    this.moduleListShown = this.filteredModuleList.slice(start, start + 15);\n  }\n}\n","<div class=\"main-board\">\n    <app-refinement-list (sendRefinementList)=\"updateRefinementList($event)\"></app-refinement-list>\n    <div class=\"header\">\n        <div class=\"search-box\">\n            <mat-icon>search</mat-icon>\n            <mat-form-field>\n                <mat-label>Module Code or Title</mat-label>\n                <input type=\"text\" class=\"mat-h3\" matInput [(ngModel)]=\"searchInput\" placeholder=\"CS2100\"\n                    (input)=\"search(); paginator.firstPage()\">\n                <button mat-button *ngIf=\"searchInput\" matSuffix mat-icon-button aria-label=\"Clear\"\n                    (click)=\"searchInput=''; search()\">\n                    <mat-icon>close</mat-icon>\n                </button>\n            </mat-form-field>\n        </div>\n\n    </div>\n    <mat-divider></mat-divider>\n\n\n    <div class=\"search-result\">\n        <div class=\"flex-container\">\n            <div class=\"number-of-modules-found\">\n                {{filteredModuleList.length}} Modules Found\n            </div>\n\n            <div class=\"sort-options\">\n                <mat-form-field>\n                    <mat-label>Sort by:</mat-label>\n                    <mat-select [(ngModel)]=\"sortOption\" name=\"sortOption\" (selectionChange)=\"sortFilteredModuleList()\">\n                        <mat-option value=\"moduleCode\">\n                            module code\n                        </mat-option>\n                        <mat-option value=\"title\">\n                            module title\n                        </mat-option>\n                        <mat-option value=\"moduleCredit\">\n                            module credit\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <button mat-icon-button (click)=\"reverseFilteredModuleList()\">\n                    <mat-icon matTooltip=\"reverse\" class=\"icon-btn\">refresh</mat-icon>\n                </button>\n            </div>\n        </div>\n        <mat-card class=\"module-list\">\n            <div *ngFor=\"let module of moduleListShown; let key=index\" class=\"flex-container\">\n                <button mat-button class=\"module-btn\" (click)=\"goModule(module.moduleCode)\">\n                    <mat-icon>search</mat-icon>\n                    <span>{{module.moduleCode}} - {{module.title}}</span>\n                    <span class=\"mat-caption\">\n                        {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}\n                    </span>\n                </button>\n                <div class=\"review-action flex-container\">\n                    <span class=\"number-of-reviews\" matTooltip=\"number of reviews\">{{module.numOfReviews}}</span>\n                    <button mat-icon-button class=\"add-btn\" (click)=\"goPostReviews(module.moduleCode)\"\n                        matTooltip=\"add reviews\">\n                        <mat-icon class=\"icon-btn\">add_circle</mat-icon>\n                    </button>\n                </div>\n            </div>\n            <div *ngIf=\"moduleListShown.length<15\" class=\"bottom\">\n                Already at the bottom!\n            </div>\n        </mat-card>\n        <mat-paginator [length]=\"filteredModuleList.length\" pageSize=\"15\" showFirstLastButtons=\"true\"\n            hidePageSize=\"true\" (page)=\"updateModuleListShown($event)\" #paginator></mat-paginator>\n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { RefinementListService } from '../../../services/refinement-list.service';\nimport { RefinementList } from 'src/app/refinementList';\n\n@Component({\n  selector: 'app-refinement-list',\n  templateUrl: './refinement-list.component.html',\n  styleUrls: ['./refinement-list.component.css']\n})\nexport class RefinementListComponent implements OnInit {\n\n  public refinementList: RefinementList = new RefinementList([], [], [], []);\n\n  public selectorList: any = ['Faculty', 'Department', 'ModuleCredit', 'Level'];\n\n  @Output() sendRefinementList = new EventEmitter();\n\n  constructor(public refinementListService: RefinementListService) { }\n\n  ngOnInit(): void {\n    this.refinementListService.getRefinementList().subscribe((refinementList: RefinementList) => {\n      this.refinementList = refinementList;\n      this.sendRefinementList.emit(this.refinementList);\n    });\n  }\n\n  deleteRefinement(selector: string, refinement: string) {\n    this.refinementListService.deleteRefinement(selector, refinement);\n  }\n}\n","<div class=\"refinement-list\" *ngIf=\"!refinementList.isEmpty()\">\n    <div *ngFor=\"let selector of selectorList\" class=\"refinement-container\">\n        <span *ngIf=\"refinementList[selector].length>0\">\n            <span class=\"mat-h3\">{{selector}}: </span>\n            <button mat-button (click)=\"deleteRefinement(selector, refinement)\"\n                *ngFor=\"let refinement of refinementList[selector]\">\n                {{refinement}}\n                <mat-icon>cancel</mat-icon>\n            </button>\n        </span>\n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { RefinementListService } from '../../../services/refinement-list.service';\n\n@Component({\n  selector: 'app-refinement-table',\n  templateUrl: './refinement-table.component.html',\n  styleUrls: ['./refinement-table.component.css']\n})\nexport class RefinementTableComponent implements OnInit {\n\n  public selectorList: string[] = ['Faculty', 'Department', 'ModuleCredit', 'Level'];\n\n  public facultyList: any = {\n    'A':['Arts and Social Science'],\n    'C':['Computing', 'Cont and Lifelong Education'],\n    'D':['Dentistry', 'Design and Environment', 'Duke-NUS Medical School'],\n    'E':['Engineering'],\n    'I':['Institute of Systems Science'],\n    'L':['LKY School of Public Policy',\n    'Logistics Inst-Asia Pac'],\n    'M':['Multi Disciplinary Programme'],\n    'N':['NUS',\n    'NUS Business School',\n    'NUS Graduate Sch for Int Science and Engineering'],\n    'R':['Residential College',\n    'Risk Management Institute',],\n    'S':['Science',\n    'SSH School of Public Health',],\n    'T':['Temasek Defence Sys. Institute',],\n    'U':['University Scholars Programme',],\n    'Y':['Yale-NUS College',\n    'Yong Loo Lin Sch of Medicine',\n    'YST Conservatory of Music']\n  }\n\n  public more: any = {\n    Faculty: false,\n    Department: false\n  }\n\n  public conditionList: any = {\n    'Department': [\n      'Accounting',\n      'Architecture',\n      'Chemistry',\n      'Civil and Environmental Engineering',\n      'Computer Science',\n      'Mathematics',\n      'Mechanical Engineering',\n      'Pharmacy',\n    ],\n    'Faculty': [\n      'Arts and Social Science',\n      'NUS Business School',\n      'Computing',\n      'Dentistry',\n      'Engineering',\n      'Law',\n      'Science',\n    ],\n    'ModuleCredit': [\n      '0-3 MC', '4 MC', '5-8 MC', 'More than 8 MC'\n    ],\n    'Level': [\n      '1000', '2000', '3000', '4000', '5000', '6000'\n    ]\n  };\n\n\n  public initialList: any = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', \n    'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\n  public departmentList: any = {\n    'A':\n      ['Accounting',\n        'Alice Lee Center for Nursing Studies',\n        'Analytics and Operations',\n        'Anatomy',\n        'Architecture',],\n    'B':\n      ['Biochemistry',\n        'Biological Sciences',\n        'Biomedical Engineering',\n        'BIZ Dean\\'s Office',\n        'Building'],\n    'C':\n      ['Center for Engl Lang Comms',\n        'Center for Quantum Technologies',\n        'Centre for Language Studies',\n        'Chemical and Biomolecular Engineering',\n        'Chemistry',\n        'Chinese Studies',\n        'Chua Thian Poh Comm Leader Center',\n        'Civil & Environmental Engineering',\n        'College of Alice and Peter Tan',\n        'Communications and New Media',\n        'Computer Science',\n        'Computing and Engineering Programme',],\n    'D':\n      ['Division of Graduate Dental Studies',\n        'Division of Graduate Medical Studies',\n        'Duke-NUS Dean\\'s Office'],\n    'E':\n      ['Economics',\n        'Electrical and Computer Engineering',\n        'Engineering Science Programme',\n        'English Language and Literature',],\n    'F':\n    [\n    'FASS Dean\\'s Office/Office of Programmes',\n        'Finance',\n        'FoD Dean\\'s Office',\n        'FoE Dean\\'s Office',\n        'FoL Dean\\'s Office',\n        'Food Science and Technology',\n        'FoS Dean\\'s Office',\n      ],\n    'G':\n      ['Geography'],\n    'H':\n      [\n        'History',],\n    'I':\n        ['Industrial Design',\n        'Industrial Systems Engineering and Management',\n        'Information Systems and Analytics',\n        'Institute of Systems Science'],\n    'J':\n      ['Japanese Studies'],\n    'L':\n      ['LKYSPP Dean\\'s Office',\n        'Logistics Inst - Asia Pac'],\n    'M':\n      ['Malay Studies',\n        'Management and Organisation',\n        'Marketing',\n        'Materials Science and Engineering',\n        'Mathematics',\n        'Mechanical Engineering',\n        'Mechanobiology Institute (MBI)',\n        'Microbiology and Immunology'],\n    'N':\n      ['NGS Dean\\'s Office',\n        'NUS Entrepreneurship Centre',\n        'NUS Medicine Dean\\'s Office'],\n    'O':\n      ['Office of Sr Dy Pres and Provost'],\n    'P':\n      ['Pathology',\n        'Pharmacology',\n        'Pharmacy',\n        'Philosophy',\n        'Physics',\n        'Physiology',\n        'Political Science',\n        'Psychology'],\n    'R':\n      ['Real Estate',\n        'Residential College 4',\n        'Risk Management Institute'],\n    'S':\n        ['SCALE Dean\\'s Office',\n        'SDE Dean\\'s Office',\n        'SoC Dean\\'s Office',\n        'Social Work',\n        'Sociology',\n        'South Asian Studies',\n        'Southeast Asian Studies',\n        'SSH School of Public Health Dean\\'s Office',\n        'Statistics and Applied Probability',\n        'Strategy and Policy'],\n    'T':\n      [\n        'Temasek Defence Systems Inst',\n        'Tembusu College'\n      ],\n    'U':\n        ['University Scholars Programme'],\n    'Y':\n      ['Yale-NUS College',\n    'YSTCM Dean\\'s Office'],\n  }\n\n  public fullList: any = {\n    Faculty: this.facultyList,\n    Department: this.departmentList\n  }\n\n\n  @Output() sendMore = new EventEmitter<string>();\n  @Output() sendCloseDrawer = new EventEmitter();\n\n  constructor(public refinementListService: RefinementListService) { }\n\n  ngOnInit(): void {\n  }\n\n  addRefinement(selector: string, refinement: string) {\n    this.refinementListService.addRefinement(selector, refinement);\n  }\n\n  showMore(selector: string) {\n    this.more[selector] = true; \n    this.sendMore.emit(this.more);\n  }\n\n  showLess(selector: string) {\n    this.more[selector] = false; \n    this.sendMore.emit(this.more);\n  }\n\n  closeDrawer() {\n    this.sendCloseDrawer.emit();\n    this.resetMore();\n  }\n\n  resetMore() {\n    this.more = {\n      'Department': false,\n      'Faculty': false\n    }\n    this.sendMore.emit(this.more);\n  }\n}\n","<div class=\"flex-container\">\n    <div>\n        <div class=\"selector-container\" *ngFor=\"let selector of selectorList; let key=index\">\n            <span class=\"mat-h1\">{{selector}}</span>\n            <div *ngIf=\"!more[selector]\">\n                <button mat-button (click)=\"addRefinement(selector, condition)\" *ngFor=\"let condition of conditionList[selector]\">\n                    {{condition}}\n                </button>\n            </div>\n            <div *ngIf=\"more[selector]\">\n                <div *ngFor=\"let initial of initialList\">\n                    <span *ngIf=\"fullList[selector][initial]\">\n                        <div class=\"mat-h3\"> {{initial}} </div>\n                        <div>\n                            <button (click)=\"addRefinement(selector, refinement)\" *ngFor=\"let refinement of fullList[selector][initial]\"\n                                mat-button>\n                                {{refinement}}\n                            </button>\n                        </div>\n                    </span>\n                </div>\n            </div>\n            <div class=\"more-btn\" *ngIf=\"selector=='Faculty' || selector=='Department'\">\n                <button mat-button color=\"primary\" *ngIf=\"!more[selector]\" (click)=\"showMore(selector)\">\n                    More</button>\n                <button mat-button color=\"primary\" *ngIf=\"more[selector]\" (click)=\"showLess(selector)\">Less</button>\n            </div>\n\n            <mat-divider *ngIf=\"key!=selectorList.length - 1\"></mat-divider>\n        </div>\n    </div>\n    <div class=\"btn-container\">\n        <button mat-button class=\"back-btn\" (click)=\"closeDrawer()\">\n            <mat-icon>arrow_back_ios</mat-icon>\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  public widthOfDrawer: string = '40%';\n  public widthOfMain: string = '100%';\n\n  public hasBackdrop: boolean = false;\n\n  public status: any = {\n    opened: false,\n    more: {\n      'Faculty': false,\n      'Department': false\n    }\n  }\n\n  public searchInput: string = '';\n\n  constructor(public route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(data => {\n      if (data) {\n        this.searchInput = data.searchInput;\n      }\n    })\n  }\n\n  updateOpened() {\n    this.status.opened = !this.status.opened;\n    this.updateWidthOfMain();\n  }\n\n\n  updateMore(more: any) {\n    this.status.more = more;\n    this.updateWidthOfDrawer(more);\n  }\n\n  updateWidthOfDrawer(more: any) {\n    if (more['Department']) {\n      this.widthOfDrawer = '70%';\n      this.hasBackdrop = true;\n    } else {\n      this.widthOfDrawer = '40%';\n      this.hasBackdrop = false;\n    }\n  }\n\n  updateWidthOfMain() {\n    if (this.status.opened) {\n      this.widthOfMain = '60%';\n    } else {\n      this.widthOfMain = '100%';\n    }\n  }\n}\n","<mat-drawer-container [hasBackdrop]=\"hasBackdrop\">\n    <mat-drawer #drawer mode=\"push\" [style.width]=\"widthOfDrawer\" (openedChange)=\"updateOpened()\">\n        <app-refinement-table #RefinementTable (sendMore)=\"updateMore($event)\" (sendCloseDrawer)=\"drawer.toggle()\">\n        </app-refinement-table>\n    </mat-drawer>\n    <main [style.width]=\"widthOfMain\">\n        <button mat-button class=\"forward-btn\" (click)=\"drawer.toggle()\" *ngIf=\"!drawer.opened\">\n            <mat-icon>arrow_forward_ios</mat-icon>\n        </button>\n        <div>\n            <app-main-board [searchInput]=\"searchInput\"></app-main-board>\n        </div>\n    </main>\n</mat-drawer-container>","import { Component, OnInit } from '@angular/core';\nimport { Module } from 'src/app/module';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from \"@angular/common/http\";\nimport { SearchService } from \"../../../services/search.service\";\n\n@Component({\n  selector: 'app-module-description',\n  templateUrl: './module-description.component.html',\n  styleUrls: ['./module-description.component.css']\n})\nexport class ModuleDescriptionComponent implements OnInit {\n\n  public module: Module = new Module('', '', '', '', '', '', 0);\n\n  public description: string = '';\n\n  constructor(public activatedRoute: ActivatedRoute, \n    public http: HttpClient,\n    public searchService: SearchService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n      this.searchService.getModule(data.moduleCode).subscribe((module: Module) => {\n        this.module = module;\n        this.description = this.module.description;\n        document.getElementsByTagName('a')[0].\n        setAttribute('href', 'https://nusmods.com/modules/' + this.module.moduleCode + '/' + this.module.title)\n      })\n    })\n  }\n\n}\n","<mat-card>\n    <div class=\"mat-body\">\n        {{description}}\n    </div>\n</mat-card>\n<div class=\"mat-caption\">For more official information, please go to <a class=\"https://nusmods.com/modules?sem[0]=1&sem[1]=2&sem[2]=3&sem[3]=4\">NUSMods</a>.</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Answer } from 'src/app/answer';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { QuestionListService } from \"../../../services/question-list.service\";\nimport { Question } from 'src/app/Question';\nimport { AdminAccountService } from 'src/app/services/admin-account.service';\n\n@Component({\n  selector: 'app-question-list',\n  templateUrl: './question-list.component.html',\n  styleUrls: ['./question-list.component.css']\n})\nexport class QuestionListComponent implements OnInit {\n\n  public moduleCode: string = '';\n\n  public questionList: Question[] = [];\n\n  public questionListShown: Question[] = [];\n\n  public questionEntered: string = '';\n\n  public answerEntered: string = '';\n\n  public ifPostAnAnswer: boolean[] = [];\n\n  public ifAskAQuestion: boolean = false;\n\n  public userName: string = 'Anonymous';\n\n  public isSuccessfulLogin: boolean = false;\n\n  public pageIndex: number = 0;\n\n  constructor(public activatedRoute: ActivatedRoute,\n    public http: HttpClient,\n    public questionListService: QuestionListService,\n    public adminAccountService: AdminAccountService) { }\n\n  ngOnInit(): void {\n    if (this.adminAccountService.getAdminAccount()) {\n      this.isSuccessfulLogin = true;\n    }\n    this.ifPostAnAnswer = this.questionList.map((question: Question) => false);\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n      this.moduleCode = data.moduleCode;\n      this.updateQuestionList();\n    })\n  }\n\n  updateQuestionList() {\n    this.questionListService.getQuestionListOfModule(this.moduleCode).subscribe((quesitonList: Question[]) => {\n      this.questionList = quesitonList;\n      this.questionListShown = this.questionList.slice(0, 3);\n    })\n  }\n\n  showQuestionForm() {\n    this.ifAskAQuestion = true;\n  }\n\n  showAnswerForm(key: number) {\n    this.ifPostAnAnswer[key] = true;\n  }\n\n  updateQuestionListShown(event: any) {\n    this.pageIndex = event.pageIndex;\n    var start = 3 * this.pageIndex;\n    this.questionListShown = this.questionList.slice(start, start + 3);\n  }\n\n  onSubmitAnAnswer(question: Question, key: number) {\n    var ans = new Answer(this.answerEntered, new Date().toLocaleDateString(), new Date().toLocaleTimeString().slice(0, 8), question._id);\n    var httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n    this.http.post('/answers', ans, httpOptions).subscribe((answer: Answer) => {\n      question.answerList.push(answer);\n      this.resetAnswerForm(key);\n    });\n  }\n\n  deleteAnswer(question: Question, answerId: string) {\n    this.http.delete('/answers/delete/' + answerId).subscribe((answer: Answer) => {\n      question.answerList = question.answerList.filter((ans: Answer) => {\n        return ans._id != answerId;\n      })\n    });\n  }\n\n  deleteQuestion(questionId: string) {\n    this.questionListService.deleteQuestion(questionId).subscribe((question: Question) => {\n      this.questionListService.getQuestionListOfModule(this.moduleCode).subscribe((quesitonList: Question[]) => {\n        this.questionList = quesitonList;\n        var start = this.pageIndex * 3;\n        this.questionListShown = this.questionList.slice(start, start + 3);\n      })\n    })\n  }\n\n  onSubmitAQuestion() {\n    var question = new Question(\n      this.questionEntered,\n      new Date().toLocaleDateString(),\n      new Date().toLocaleTimeString().slice(0, 8),\n      this.moduleCode\n    );\n    this.questionListService.addQuestion(question).subscribe((question: Question) => {\n      this.updateQuestionList();\n      this.ifPostAnAnswer.unshift(false);\n      this.resetQuestionForm();\n    });\n  }\n\n  resetAnswerForm(key: number) {\n    this.ifPostAnAnswer[key] = false;\n    this.answerEntered = '';\n  }\n\n  resetQuestionForm() {\n    this.ifAskAQuestion = false;\n    this.questionEntered = '';\n  }\n}\n","<div class=\"subheader\">\n    <div class=\"mat-body\">\n        number of questions: {{questionList.length}}\n    </div>\n    <div class=\"add-questions-btn\">\n        <button mat-icon-button (click)=\"showQuestionForm()\" matTooltip=\"ask a question\">\n            <mat-icon class=\"icon-btn\">add_circle</mat-icon>\n        </button>\n    </div>\n</div>\n\n<div class=\"form\" *ngIf=\"ifAskAQuestion\">\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Clearly state your question and keep it short.</mat-label>\n        <input type=\"text\" matInput [(ngModel)]=\"questionEntered\" name=\"questionEntered\" minlength=\"3\" required>\n    </mat-form-field>\n    <div class=\"form-actions\">\n        <button mat-raised-button (click)=\"resetQuestionForm()\" color=\"warn\">cancel</button>\n        <button mat-raised-button (click)=\"onSubmitAQuestion(); paginator.firstPage()\" color=\"primary\">submit</button>\n    </div>\n</div>\n\n<mat-card class=\"no-questions-yet mat-h1\" *ngIf=\"questionList.length==0\">\n    <mat-card-content>\n        <span class=\"mat-h3\">No questions yet!</span>\n        <mat-icon class=\"no-questions-icon\">sentiment_very_dissatisfied</mat-icon>\n    </mat-card-content>\n</mat-card>\n\n<mat-card class=\"question-container\" *ngFor=\"let question of questionListShown; let key=index\">\n    <mat-card-title class=\"flex-container\">\n        <div class=\"header\">\n            <mat-icon>question_answer</mat-icon>\n            {{question.content}}\n        </div>\n        <div class=\"delete-btn\">\n            <button mat-icon-button matTooltip=\"delete\" (click)=\"deleteQuestion(question._id)\" *ngIf=\"isSuccessfulLogin\">\n                <mat-icon class=\"icon-btn\">delete</mat-icon>\n            </button>\n        </div>\n    </mat-card-title>\n\n    <mat-card-subtitle>\n        {{question.date}} - {{question.time}} by {{userName}}\n    </mat-card-subtitle>\n\n    <mat-card-content>\n        <div class=\"no-answers-yet mat-h1\" *ngIf=\"question.answerList.length==0\">\n            <mat-card-content>\n                <span class=\"mat-h3\">No answers yet!</span>\n                <mat-icon class=\"no-answers-icon\">sentiment_very_dissatisfied</mat-icon>\n            </mat-card-content>\n        </div>\n\n        <ol>\n            <li class=\"answer-container\" *ngFor=\"let answer of question.answerList\">\n                <div class=\"flex-container\">\n                    <div class=\"header\">\n                        {{answer.content}}\n                    </div>\n                    <div class=\"delete-btn\">\n                        <button mat-icon-button matTooltip=\"delete\" (click)=\"deleteAnswer(question, answer._id)\" *ngIf=\"isSuccessfulLogin\">\n                            <mat-icon class=\"icon-btn\">delete</mat-icon>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"answer-caption mat-caption\">\n                    {{answer.date}} - {{answer.time}} by {{userName}}\n                </div>\n            </li>\n        </ol>\n\n        <div class=\"form\" *ngIf=\"ifPostAnAnswer[key]\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Clearly state your answer.</mat-label>\n                <input type=\"text\" \n                    matInput \n                    [(ngModel)]=\"answerEntered\" \n                    name=\"answerEntered\" \n                    minlength=\"3\" \n                    required>\n            </mat-form-field>\n\n            <div class=\"form-actions\">\n                <button mat-raised-button (click)=\"resetAnswerForm(key)\" color=\"warn\">cancel</button>\n                <button mat-raised-button (click)=\"onSubmitAnAnswer(question, key)\" color=\"primary\">submit</button>\n            </div>\n        </div>\n    </mat-card-content>\n\n    <mat-card-actions *ngIf=\"!ifPostAnAnswer[key]\">\n        <button mat-raised-button color=\"primary\" (click)=\"showAnswerForm(key)\" matTooltip=\"post an answer\">I have an\n            answer!</button>\n    </mat-card-actions>\n\n</mat-card>\n\n<mat-paginator [length]=\"questionList.length\" pageSize=\"3\" showFirstLastButtons=\"true\" hidePageSize=\"true\"\n    (page)=\"updateQuestionListShown($event)\" #paginator></mat-paginator>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { Module } from '../../../module';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { SearchService } from \"../../../services/search.service\";\nimport { PostListService } from \"../../../services/post-list.service\";\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminAccountService } from 'src/app/services/admin-account.service';\n\n@Component({\n  selector: 'app-review-list',\n  templateUrl: './review-list.component.html',\n  styleUrls: ['./review-list.component.css']\n})\nexport class ReviewListComponent implements OnInit {\n\n  public module: Module = new Module('', '', '', '', '', '', 0);\n\n  public reviewList: ReviewPost[] = [];\n\n  public reviewListShown: ReviewPost[] = [];\n\n  public userName: string = 'Anonymous';\n\n  public postListLike: string[] = [];\n\n  public postListDislike: string[] = [];\n  \n  public hoverOnShareBtn: boolean[];\n  \n  public hoverOnShareBox: boolean[];\n\n  public isSuccessfulLogin: boolean = false;\n\n  public pageIndex: number = 0;\n\n  constructor(public route: Router,\n    public activatedRoute: ActivatedRoute,\n    public searchService: SearchService,\n    public postListService: PostListService,\n    public snackBar: MatSnackBar,\n    public adminAccountService: AdminAccountService) { }\n\n  ngOnInit(): void {\n    this.updatePostListLikeAndDislike();\n    this.resetHoverOn();\n    if (this.adminAccountService.getAdminAccount()) {\n      this.isSuccessfulLogin = true;\n    }\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n      this.searchService.getModule(data.moduleCode).subscribe((module: Module) => {\n        this.module = module;\n      })\n\n      this.postListService.getPostListOfModule(data.moduleCode).subscribe((reviewList: ReviewPost[]) => {\n        this.reviewList = reviewList.reverse();\n        this.reviewListShown = this.reviewList.slice(0, 5);\n      })\n    })\n  }\n\n  addReviews() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.route.navigate(['/PostReview'], navigationExtras);\n  }\n\n  delete(postId: string) {\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.postListService.deletePost(postId).subscribe((postReview: ReviewPost) => {\n        this.reviewList = this.reviewList.filter((review: ReviewPost) => {\n          return review._id != postId;\n        })\n        var start = this.pageIndex * 5;\n        this.reviewListShown = this.reviewList.slice(start, start + 5);\n      })\n    })\n  }\n\n  updateReviewListShown(event: any) {\n    this.pageIndex = event.pageIndex;\n    var start = this.pageIndex * 5;\n    this.reviewListShown = this.reviewList.slice(start, start + 5);\n  }\n\n  updatePostListLikeAndDislike() {\n    this.postListLike = this.postListService.getPostListLike();\n    this.postListDislike = this.postListService.getPostListDislike();\n  }\n\n  onClickLikePost(post: ReviewPost) {\n    var postId = post._id;\n    if (this.postListDislike.includes(postId)) {\n      post.numOfDislikes--;\n      post.numOfLikes++;\n      this.postListService.cancelDislikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.likePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListLike.includes(postId)) {\n      post.numOfLikes++;\n      this.postListService.likePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfLikes--;\n      this.postListService.cancelLikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n        console.log(this.postListLike);\n      })\n    }\n  }\n\n  onClickDislikePost(post: ReviewPost) {\n    var postId = post._id;\n    if (this.postListLike.includes(postId)) {\n      post.numOfLikes--;\n      post.numOfDislikes++;\n      this.postListService.cancelLikePost(postId).subscribe((post_1: ReviewPost) => {\n        this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n          this.updatePostListLikeAndDislike();\n        });\n      });\n    } else if (!this.postListDislike.includes(postId)) {\n      post.numOfDislikes++;\n      this.postListService.dislikePost(postId).subscribe((post_2: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      });\n    } else {\n      post.numOfDislikes--;\n      this.postListService.cancelDislikePost(postId).subscribe((post: ReviewPost) => {\n        this.updatePostListLikeAndDislike();\n      })\n    }\n  }\n\n  onCopyPost(post: ReviewPost, copyContent: string) {\n    post.numOfShares++;\n    const oInput = document.createElement('textarea');\n    var postId = post._id;\n    oInput.value = copyContent;\n    document.body.appendChild(oInput);\n    oInput.select();\n    document.execCommand('Copy');\n    oInput.style.display = 'none';\n    this.snackBar.open('Review post copied!', '', {\n      duration: 2000,\n    });\n    this.postListService.sharePost(postId).subscribe((post_1: ReviewPost) => {\n    });\n  } \n\n  ifLike(postId: string) {\n    return this.postListLike.includes(postId);\n  }\n\n  ifDislike(postId: string) {\n    return this.postListDislike.includes(postId);\n  }\n\n  resetHoverOn() {\n    this.hoverOnShareBtn = [false, false, false, false, false];\n    this.hoverOnShareBox = [false, false, false, false, false];\n  }\n\n  mouseLeaveShareBtn(key: number) {\n    setTimeout(() => this.hoverOnShareBtn[key] = false, 200);\n  }\n\n}\n","<div class=\"subheader\">\n    <div class=\"mat-body\">\n        number of reviews: {{reviewList.length}}\n    </div>\n    <div class=\"add-reviews-btn\">\n        <button mat-icon-button (click)=\"addReviews()\" matTooltip=\"add reviews\">\n            <mat-icon class=\"icon-btn\">add_circle</mat-icon>\n        </button>\n    </div>\n</div>\n<mat-card class=\"no-reviews-yet mat-h1\" *ngIf=\"reviewList.length==0\">\n    <mat-card-content>\n        <span class=\"mat-h3\">No reviews yet!</span>\n        <mat-icon class=\"no-reviews-icon\">sentiment_very_dissatisfied</mat-icon>\n    </mat-card-content>\n</mat-card>\n<mat-card *ngFor=\"let review of reviewListShown; let key=index\" class=\"review-container\">\n    <mat-card-header>\n        <div mat-card-avatar class=\"header-image\" [style.background-image]=\"'url(' + review.headerImage + ')'\"></div>\n        <mat-card-title class=\"flex-container\">\n            <div class=\"user-name\">\n                {{userName}}\n                <span class=\"mat-caption\">Under Prof {{review.moduleInfo.prof}}, {{review.moduleInfo.acadYear}} /\n                    {{review.moduleInfo.semester}}</span>\n            </div>\n\n            <div class=\"delete-btn\">\n                <button *ngIf=\"isSuccessfulLogin\" mat-icon-button matTooltip=\"delete\" style=\"float: right;\"\n                    (click)=\"delete(review._id)\">\n                    <mat-icon class=\"icon-btn\">delete</mat-icon>\n                </button>\n            </div>\n        </mat-card-title>\n        <mat-card-subtitle>\n            {{review.date}} - {{review.time}}\n        </mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-divider></mat-divider>\n\n    <mat-card-content>\n        <div class=\"review\">\n            <pre class=\"mat-body\">\n                {{review.reviewAndRatings.review}}\n            </pre>\n        </div>\n        <div class=\"extra-info mat-caption\">\n            Expected Grade: {{review.extraInfo.gradeExpected}}\n        </div>\n\n        <div class=\"extra-info mat-caption\">\n            Grade Obtained: {{review.extraInfo.gradeObtained}}\n        </div>\n\n    </mat-card-content>\n    <mat-divider></mat-divider>\n\n    <mat-card-actions>\n        <div class=\"flex-container ratings\">\n            <div matTooltip=\"10 for most satisfied\">\n                general: {{review.reviewAndRatings.general}} / 10\n                <div class=\"icon\">\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general<3\">sentiment_very_dissatisfied\n                    </mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general>2&&review.reviewAndRatings.general<5\">\n                        sentiment_dissatisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general>4&&review.reviewAndRatings.general<7\">\n                        sentiment_satisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general>6&&review.reviewAndRatings.general<9\">\n                        sentiment_satisfied_alt</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n                </div>\n            </div>\n            <div matTooltip=\"10 for most difficult\">\n                difficulty: {{review.reviewAndRatings.difficulty}} / 10\n                <div class=\"icon\">\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied\n                    </mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>6&&review.reviewAndRatings.difficulty<9\">\n                        sentiment_dissatisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>4&&review.reviewAndRatings.difficulty<7\">\n                        sentiment_satisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty>2&&review.reviewAndRatings.difficulty<5\">\n                        sentiment_satisfied_alt</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.difficulty<3\">sentiment_very_satisfied\n                    </mat-icon>\n                </div>\n            </div>\n            <div matTooltip=\"10 for heaviest workload\">\n                workload: {{review.reviewAndRatings.workload}} / 10\n                <div class=\"icon\">\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload>8\">sentiment_very_dissatisfied\n                    </mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload>6&&review.reviewAndRatings.workload<9\">\n                        sentiment_dissatisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload>4&&review.reviewAndRatings.workload<7\">\n                        sentiment_satisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload>2&&review.reviewAndRatings.workload<5\">\n                        sentiment_satisfied_alt</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n                </div>\n            </div>\n            <div matTooltip=\"10 for most willing to recommend\">\n                recommend: {{review.reviewAndRatings.recommend}} / 10\n                <div class=\"icon\">\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend<3\">sentiment_very_dissatisfied\n                    </mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend>2&&review.reviewAndRatings.recommend<5\">\n                        sentiment_dissatisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend>4&&review.reviewAndRatings.recommend<7\">\n                        sentiment_satisfied</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend>6&&review.reviewAndRatings.recommend<9\">\n                        sentiment_satisfied_alt</mat-icon>\n                    <mat-icon *ngIf=\"review.reviewAndRatings.recommend>8\">sentiment_very_satisfied\n                    </mat-icon>\n                </div>\n            </div>\n        </div>\n        <div class=\"btns\">\n            <button mat-icon-button matTooltip=\"like\" (click)=\"onClickLikePost(review)\">\n                <mat-icon class=\"icon-btn\" [ngClass]=\"{'blue-color': ifLike(review._id)}\">thumb_up</mat-icon>\n                {{review.numOfLikes}}\n            </button>\n            <button mat-icon-button matTooltip=\"dislike\" (click)=\"onClickDislikePost(review)\">\n                <mat-icon class=\"icon-btn\" [ngClass]=\"{'blue-color': ifDislike(review._id)}\">thumb_down</mat-icon>\n                {{review.numOfDislikes}}\n            </button>\n            <button mat-icon-button matTooltip=\"share\" (mouseover)=\"hoverOnShareBtn[key] = true\"\n                (mouseleave)=\"mouseLeaveShareBtn(key)\">\n                <mat-icon class=\"icon-btn\">share</mat-icon>\n                {{review.numOfShares}}\n            </button>\n            <mat-card class=\"share-box\" *ngIf=\"hoverOnShareBtn[key]||hoverOnShareBox[key]\"\n                (mouseover)=\"hoverOnShareBox[key]=true\" (mouseleave)=\"hoverOnShareBox[key]=false\">\n                <mat-card-title>\n                    Copy & Share\n                    <button mat-icon-button (click)=\"onCopyPost(review, copyContent.innerHTML)\" class=\"copy-btn\"\n                        matTooltip=\"copy review review\">\n                        <mat-icon class=\"icon-btn\">\n                            content_copy\n                        </mat-icon>\n                    </button>\n                </mat-card-title>\n                <mat-card-content>\n                    <pre class=\"mat-body\" #copyContent>\n{{review.moduleInfo.moduleCode}} - {{review.moduleInfo.title}} taken by {{userName}}\nunder {{review.moduleInfo.prof}}, {{review.moduleInfo.acadYear}} / {{review.moduleInfo.semester}}:\n{{review.reviewAndRatings.review}}\ngeneral: {{review.reviewAndRatings.general}} / 10 (10 for most satisfied)       difficulty: {{review.reviewAndRatings.difficulty}} / 10 (10 for most difficult)\nworkload: {{review.reviewAndRatings.workload}} / 10 (10 for heaviest workload)  recommend: {{review.reviewAndRatings.recommend}} / 10 (10 for most willing to recommend)\n                        </pre>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </mat-card-actions>\n\n</mat-card>\n<mat-paginator [length]=\"reviewList.length\" pageSize=\"5\" showFirstLastButtons=\"true\" hidePageSize=\"true\"\n    (page)=\"updateReviewListShown($event)\"></mat-paginator>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { SearchService } from '../../services/search.service';\nimport { MyModulesService } from '../../services/my-modules.service';\nimport { ModuleListService } from '../../services/module-list.service';\nimport { Module } from 'src/app/module';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ReviewPost } from \"../../reviewPost\";\nimport { PostListService } from '../../services/post-list.service';\nimport { AverageRatingsService } from '../../services/average-ratings.service';\n\n@Component({\n  selector: 'app-module',\n  templateUrl: './module.component.html',\n  styleUrls: ['./module.component.css']\n})\nexport class ModuleComponent implements OnInit {\n\n  public module: Module = new Module('', '', '', '', '', '', 0);\n\n  public reviewListShown: ReviewPost[] = [];\n\n  public reviewList: ReviewPost[] = [];\n\n  public userName: string = 'Anonymous';\n\n  public activeBtn: string = 'Reviews';\n\n  public averageRatings: any = {\n    averageGeneral: 0,\n    averageDifficulty: 0,\n    averageWorkload: 0,\n    averageRecommend: 0,\n  };\n\n  public moreModuleList: Module[] = [];\n\n  constructor(public route: Router, \n    public activatedRoute: ActivatedRoute, \n    public searchService: SearchService,\n    public myModuleService: MyModulesService,\n    public moduleListService: ModuleListService,\n    private snackBar: MatSnackBar,\n    public postListService: PostListService,\n    public averageRatingsService: AverageRatingsService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe((data: any) => {\n\n      this.searchService.getModule(data.moduleCode).subscribe((module: Module) => {\n        this.module = module;\n        this.postListService.countPostList(module.moduleCode).subscribe((numOfReviews:number) => {\n          this.module.numOfReviews = numOfReviews;\n        })\n      });\n\n      this.postListService.getPostListOfModule(data.moduleCode).subscribe((postList: ReviewPost[]) => {\n        this.reviewList = postList;\n        this.averageRatings = this.averageRatingsService.getAverageRatingsByReviewList(this.reviewList);\n        this.reviewListShown = this.reviewList.slice(0, 5);\n      });\n\n      this.searchService.getMoreModuleList(data.moduleCode).subscribe((moreModuleList: Module[]) => {\n        this.moreModuleList = moreModuleList;\n      })\n    })\n  }\n\n  addToMyModules() {\n    this.myModuleService.addModule(this.module);\n    this.snackBar.open('Successfully added to my modules!', 'Close', {\n      verticalPosition: 'top',\n      duration: 1000\n    });\n  }\n\n  addReviews() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.route.navigate(['/PostReview'], navigationExtras);\n  }\n\n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  updateReviewListShown(event: any) {\n    var start = event.pageIndex * 5;\n    this.reviewListShown = this.reviewList.slice(start, start + 5);\n  }\n\n  loadReviewList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.activeBtn = 'Reviews';\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  loadDescription() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.activeBtn = 'Description';\n    this.route.navigate(['/Module/Description'], navigationExtras);\n  }\n\n  loadQuestionList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.module.moduleCode\n      }\n    }\n    this.activeBtn = 'Questions';\n    this.route.navigate(['/Module/QuestionList'], navigationExtras);\n  }\n\n  isReviewsActive() {\n    return location.pathname.includes('ReviewList');\n  }\n\n  isQuestionsActive() {\n    return location.pathname.includes('QuestionList');\n  }\n\n  isDescriptionActive() {\n    return location.pathname.includes('Description');\n  }\n\n}\n","<main>\n    <div class=\"left-panel\">\n        <div class=\"mat-display-1\">{{module.moduleCode}} - {{module.title}}\n            <button mat-icon-button (click)=\"addToMyModules()\" matTooltip=\"add to my modules\">\n                <mat-icon class=\"icon-btn\">add_box</mat-icon>\n            </button>\n        </div>\n        <mat-divider></mat-divider>\n\n        <div class=\"flex-container\">\n            <button mat-button (click)=\"loadReviewList()\" [ngClass]=\"{'navigation-btn': 'true', 'active-btn': isReviewsActive()}\">Reviews</button>\n            <button mat-button (click)=\"loadQuestionList()\" [ngClass]=\"{'navigation-btn': 'true', 'active-btn': isQuestionsActive()}\">Questions</button>\n            <button mat-button (click)=\"loadDescription()\" [ngClass]=\"{'navigation-btn': 'true', 'active-btn': isDescriptionActive()}\">Description</button>\n        </div>\n        <mat-divider></mat-divider>\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"right-panel\">\n        <mat-card>\n            <mat-card-title>\n                Average Ratings:\n            </mat-card-title>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-content>\n                <div class=\"flex-container\">\n                    <div class=\"average-rating\" matTooltip=\"10 for most satisfied\">\n                        general: {{averageRatings.averageGeneral}} / 10\n                    </div>\n                    <div class=\"average-rating\" matTooltip=\"10 for most difficult\">\n                        difficulty: {{averageRatings.averageDifficulty}} / 10\n                    </div>\n                </div>\n                <div class=\"flex-container\">\n                    <div class=\"average-rating\" matTooltip=\"10 for heaviest workload\">\n                        workload: {{averageRatings.averageWorkload}} / 10\n                    </div>\n                    <div class=\"average-rating\" matTooltip=\"10 for most willing to recommend\">\n                        recommend: {{averageRatings.averageRecommend}} / 10\n                    </div>\n                </div>\n                <div class=\"mat-hint\">\n                    number of reviews: {{module.numOfReviews}}\n                </div>\n            </mat-card-content>\n        </mat-card>\n\n        <mat-card>\n            <mat-card-title>\n                To see more:\n            </mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content class=\"more-module-list-container\">\n                <div *ngFor=\"let module of moreModuleList\">\n                    <mat-option class=\"more-module-option\" (click)=\"goModule(module.moduleCode)\" [matTooltip]=\"module.title\">\n                        <div class=\"module-title\">{{module.moduleCode}} - {{module.title}}</div>\n                        <div class=\"module-info\">\n                            {{module.faculty}} - {{module.department}} - {{module.moduleCredit}} MCs\n                        </div>\n                    </mat-option>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { MyModulesService } from '../../services/my-modules.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Module } from 'src/app/module';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { PostListService } from \"../../services/post-list.service\";\nimport { AverageRatingsService } from \"../../services/average-ratings.service\";\nimport { AverageRatings } from 'src/app/averageRatings';\n\n@Component({\n  selector: 'app-my-modules',\n  templateUrl: './my-modules.component.html',\n  styleUrls: ['./my-modules.component.css']\n})\nexport class MyModulesComponent implements OnInit {\n\n  public myModuleList: Module[] = [];\n\n  public listOfAverageRatings: any[] = [];\n\n  public listOfNumOfReviews: number[] = [];\n\n  constructor(public myModulesService: MyModulesService,\n    public route: Router,\n    private snackBar: MatSnackBar,\n    public postListService: PostListService,\n    public averageRatingsService: AverageRatingsService) { }\n\n  ngOnInit(): void {\n    this.myModuleList = this.myModulesService.getMyModuleList();\n    this.myModuleList.forEach((module: Module) => {\n      this.listOfNumOfReviews.push(0);\n      this.listOfAverageRatings.push(AverageRatings.emptyAverageRatings);\n    })\n    this.myModuleList.forEach((module: Module, index: number) => {\n      this.postListService.countPostList(module.moduleCode).subscribe((numOfReviews: number) => {\n        this.listOfNumOfReviews[index] = numOfReviews;\n      })\n    })\n    this.myModuleList.forEach((module: Module, index: number) => {\n      this.averageRatingsService.getAverageRatingsByModuleCode(module.moduleCode).subscribe((averageRatings: any) => {\n        this.listOfAverageRatings[index] = averageRatings;\n      })\n    })\n  }\n\n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module/ReviewList'], navigationExtras);\n  }\n\n  deleteModule(moduleCode: string) {\n    this.myModulesService.deleteModule(moduleCode);\n    this.myModuleList = this.myModulesService.getMyModuleList();\n    this.snackBar.open('Successfully deleted from my modules!', 'Close', {\n      verticalPosition: 'top',\n      duration: 1000\n    });\n  }\n\n  goModuleList() {\n    this.route.navigate(['ModuleList']);\n  }\n\n}\n","<main>\n    <mat-card *ngFor=\"let module of myModuleList; let key=index\">\n        <mat-card-title>\n            {{module.moduleCode}} - {{module.title}}\n        </mat-card-title>\n\n        <mat-card-subtitle>\n            {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}\n        </mat-card-subtitle>\n\n        <mat-card-content>\n            Average Ratings:\n            <div class=\"average-ratings-container\">\n                <div class=\"average-rating\" matTooltip=\"10 for most satisfied\">\n                    general: {{listOfAverageRatings[key].averageGeneral}} / 10\n                </div>\n                <div class=\"average-rating\" matTooltip=\"10 for most difficult\">\n                    difficulty: {{listOfAverageRatings[key].averageDifficulty}} / 10\n                </div>\n            </div>\n            <div class=\"average-ratings-container\">\n                <div class=\"average-rating\" matTooltip=\"10 for heaviest workload\">\n                    workload: {{listOfAverageRatings[key].averageWorkload}} / 10\n                </div>\n                <div class=\"average-rating\" matTooltip=\"10 for most willing to recommend\">\n                    recommend: {{listOfAverageRatings[key].averageRecommend}} / 10\n                </div>\n            </div>\n\n            <div class=\"mat-caption\">\n                number of reviews: {{listOfNumOfReviews[key]}}\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions>\n            <button mat-icon-button (click)=\"goModule(module.moduleCode)\">\n                <mat-icon matTooltip=\"view\" class=\"icon-btn\">search</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)=\"deleteModule(module.moduleCode)\">\n                <mat-icon matTooltip=\"delete\" class=\"icon-btn\">cancel</mat-icon>\n            </button>\n        </mat-card-actions>\n\n    </mat-card>\n\n    <mat-card class=\"no-modules-added-yet\" *ngIf=\"myModuleList.length==0\">\n        <mat-card-content>\n            <span class=\"mat-h1\">No modules added yet!</span>\n            <mat-icon>sentiment_very_dissatisfied</mat-icon>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button (click)=goModuleList() color=\"primary\">\n                Go to add my modules\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { ExtraInfo } from 'src/app/extraInfo';\n\n@Component({\n  selector: 'app-extra-info',\n  templateUrl: './extra-info.component.html',\n  styleUrls: ['./extra-info.component.css']\n})\nexport class ExtraInfoComponent implements OnInit {\n\n  public extraInfo: ExtraInfo = new ExtraInfo('', '');\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div class=\"mat-h1\">Extra Info:</div>\n    <div class=\"mat-hint\">(All your information will remain anonymous)</div>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Grade expected</mat-label>\n        <mat-select [(ngModel)]=\"extraInfo.gradeExpected\">\n            <mat-option value=\"A+\">A+</mat-option>\n            <mat-option value=\"A\">A</mat-option>\n            <mat-option value=\"A-\">A-</mat-option>\n            <mat-option value=\"B+\">B+</mat-option>\n            <mat-option value=\"B\">B</mat-option>\n            <mat-option value=\"B-\">B-</mat-option>\n            <mat-option value=\"C+\">C+</mat-option>\n            <mat-option value=\"C\">C</mat-option>\n            <mat-option value=\"C-\">C-</mat-option>\n            <mat-option value=\"F\">F</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Grade obtained</mat-label>\n        <mat-select [(ngModel)]=\"extraInfo.gradeObtained\">\n            <mat-option value=\"A+\">A+</mat-option>\n            <mat-option value=\"A\">A</mat-option>\n            <mat-option value=\"A-\">A-</mat-option>\n            <mat-option value=\"B+\">B+</mat-option>\n            <mat-option value=\"B\">B</mat-option>\n            <mat-option value=\"B-\">B-</mat-option>\n            <mat-option value=\"C+\">C+</mat-option>\n            <mat-option value=\"C\">C</mat-option>\n            <mat-option value=\"C-\">C-</mat-option>\n            <mat-option value=\"F\">F</mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { SearchService } from '../../../services/search.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { of } from 'rxjs';\nimport { RefinementList } from '../../../refinementList';\nimport { Module } from 'src/app/module';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-module-info',\n  templateUrl: './module-info.component.html',\n  styleUrls: ['./module-info.component.css']\n})\nexport class ModuleInfoComponent implements OnInit {\n\n  public prof = '';\n\n  public acadYear = '2019-2020';\n\n  public semester = 'Semester 1';\n\n  public selectedModule: Module;\n\n  public moduleListShown: Module[] = [];\n\n  public searchInput: string = '';\n\n  @Input() moduleCode: any;\n\n  constructor(public searchService: SearchService, public route: Router, public http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.searchService.search(this.searchInput, RefinementList.emptyRefinementList).subscribe((searchResult: Module[]) => {\n      this.moduleListShown = searchResult.slice(0, 10);\n    });\n    this.searchInput = this.moduleCode;\n  }\n\n  select(module: Module) {\n    this.selectedModule = module;\n    this.searchInput = module.moduleCode;\n  }\n\n  goModuleList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        searchInput: this.searchInput\n      }\n    }\n    this.route.navigate(['./ModuleList'], navigationExtras);\n  }\n\n  search() {\n    this.searchService.search(this.searchInput, RefinementList.emptyRefinementList).subscribe((searchResult: Module[]) => {\n      this.moduleListShown = searchResult.slice(0, 20);\n    });\n    this.selectedModule = undefined;\n  }\n\n  getModule() {\n    if (this.selectedModule) {\n      return of(this.selectedModule);\n    } else {\n      return this.searchService.getModule(this.searchInput);\n    }\n  }\n\n}\n","<div>\n    <div class=\"mat-h1\">Module Info:</div>\n    <mat-form-field class=\"module-code\" appearance=\"outline\">\n        <mat-label>Module Code or Title</mat-label>\n        <input matInput [matAutocomplete]=\"auto\" [(ngModel)]=\"searchInput\" (input)=\"search()\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let module of moduleListShown\" (click)=\"select(module)\">\n                <div class=\"module-info\">\n                    <div class=\"mat-h4\">{{module.moduleCode}} - {{module.title}} </div>\n                    <div class=\"mat-caption\"> {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}MCs </div>\n                </div>\n            </mat-option>\n            <button mat-button class=\"more-btn\" color=\"primary\" (click)=\"goModuleList()\">More</button>\n        </mat-autocomplete>\n      </mat-form-field>\n\n    <mat-form-field class=\"prof\" appearance=\"fill\">\n        <mat-label>Prof</mat-label>\n        <input type=\"text\" name=\"prof\" placeholder=\"Tan Eng Chye\" [(ngModel)]=\"prof\" matInput required>\n    </mat-form-field>\n\n    <mat-form-field class=\"acad-year\" appearance=\"fill\">\n        <mat-label>AcadYear</mat-label>\n        <mat-select [(ngModel)]=\"acadYear\">\n            <mat-option value=\"2019-2020\">19 - 20</mat-option>\n            <mat-option value=\"2018-2019\">18 - 19</mat-option>\n            <mat-option value=\"2017-2018\">17 - 18</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"semester\" appearance=\"fill\">\n        <mat-label>Semester</mat-label>\n        <mat-select [(ngModel)]=\"semester\">\n            <mat-option value=\"Semester 1\">Semester 1</mat-option>\n            <mat-option value=\"Semester 2\">Semester 2</mat-option>\n            <mat-option value=\"Special Term 1\">Special Term 1</mat-option>\n            <mat-option value=\"Special Term 2\">Special Term 2</mat-option>\n        </mat-select>\n    </mat-form-field>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ReviewAndRatings } from 'src/app/reviewAndRatings';\n\n@Component({\n  selector: 'app-review-and-ratings',\n  templateUrl: './review-and-ratings.component.html',\n  styleUrls: ['./review-and-ratings.component.css']\n})\nexport class ReviewAndRatingsComponent implements OnInit {\n\n  public reviewAndRatings: ReviewAndRatings = new ReviewAndRatings('\\nWorkload and Difficulty:\\nProf and Teaching method:\\nOther complaints and commendations:\\n', 5, 5, 5, 5);\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div class=\"mat-h1\">Review and Ratings:</div>\n    <div class=\"slider-box\">\n        <div class=\"mat-body-1\">general: {{reviewAndRatings.general}} / 10 <span class=\"mat-caption\">(10 for most satisfied)</span></div>\n        <mat-slider max=10 min=1 thumbLabel=true step=1 [(ngModel)]=\"reviewAndRatings.general\">\n        </mat-slider>\n        <mat-icon *ngIf=\"reviewAndRatings.general<3\">sentiment_very_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.general==3||reviewAndRatings.general==4\">sentiment_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.general==5||reviewAndRatings.general==6\">sentiment_satisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.general==7||reviewAndRatings.general==8\">sentiment_satisfied_alt</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n    </div>\n\n    <div class=\"slider-box\">\n        <div class=\"mat-body-1\">difficulty: {{reviewAndRatings.difficulty}} / 10 <span class=\"mat-caption\">(10 for most difficult)</span></div>\n        <mat-slider max=10 min=1 thumbLabel=true step=1 [(ngModel)]=\"reviewAndRatings.difficulty\">\n        </mat-slider>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty==7||reviewAndRatings.difficulty==8\">sentiment_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty==5||reviewAndRatings.difficulty==6\">sentiment_satisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty==3||reviewAndRatings.difficulty==4\">sentiment_satisfied_alt</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.difficulty<3\">sentiment_very_satisfied</mat-icon>\n    </div>\n\n    <div class=\"slider-box\">\n        <div class=\"mat-body-1\">workload: {{reviewAndRatings.workload}} / 10 <span class=\"mat-caption\">(10 for heaviest workload)</span></div>\n        <mat-slider max=10 min=1 thumbLabel=true step=1 [(ngModel)]=\"reviewAndRatings.workload\">\n        </mat-slider>\n        <mat-icon *ngIf=\"reviewAndRatings.workload>8\">sentiment_very_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.workload==7||reviewAndRatings.workload==8\">sentiment_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.workload==5||reviewAndRatings.workload==6\">sentiment_satisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.workload==3||reviewAndRatings.workload==4\">sentiment_satisfied_alt</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n    </div>\n\n    <div class=\"slider-box\">\n        <div class=\"mat-body-1\">recommend: {{reviewAndRatings.recommend}} / 10 <span class=\"mat-caption\">(10 for most willing to recommend)</span></div>\n        <mat-slider max=10 min=1 thumbLabel=true step=1 [(ngModel)]=\"reviewAndRatings.recommend\">\n        </mat-slider>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend<3\">sentiment_very_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend==3||reviewAndRatings.recommend==4\">sentiment_dissatisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend==5||reviewAndRatings.recommend==6\">sentiment_satisfied</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend==7||reviewAndRatings.recommend==8\">sentiment_satisfied_alt</mat-icon>\n        <mat-icon *ngIf=\"reviewAndRatings.recommend>8\">sentiment_very_satisfied</mat-icon>\n    </div>\n\n    <mat-form-field class=\"review\" appearance=\"fill\">\n        <mat-label>Review</mat-label>\n        <textarea name=\"review\" rows=\"20\" placeholder=\"Any other things you want to share about this module\" [(ngModel)]=\"reviewAndRatings.review\" matInput></textarea>\n    </mat-form-field>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-select-header-image',\n  templateUrl: './select-header-image.component.html',\n  styleUrls: ['./select-header-image.component.css']\n})\nexport class SelectHeaderImageComponent implements OnInit {\n\n  public pictureUrlList: string[] = [\n    'https://material.angular.io/assets/img/examples/shiba1.jpg',\n    'https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=3069956775,2485973497&fm=15&gp=0.jpg',\n    'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1594804199778&di=a052d594f7559f3dab2201f55fd154de&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fforum%2Fw%3D580%2Fsign%3Def26c03622381f309e198da199014c67%2Fc1bedafcc3cec3fd8d0a557bdc88d43f87942730.jpg',\n    'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1594804315629&di=c6a60eeb5e72af674d14ea669b81f074&imgtype=0&src=http%3A%2F%2Fimg.91huoke.com%2Fxxfl%2Fhk91%2Fcustomer%2F32671%2FIx4d5bWEZxQ5euqcljDfwKaE3F7GUbbEgWlYwrRJ.jpeg'\n  ]\n\n  public selectedHeaderImage: string = this.pictureUrlList[0];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  selectImage(url: string) {\n    this.selectedHeaderImage = url;\n  }\n\n}\n","<div>\n    <div class=\"mat-h1\">Header Image:</div>\n    <ul>\n        <li *ngFor=\"let pictureUrl of pictureUrlList\">\n            <img [src]=\"pictureUrl\" alt=\"header image\" (click)=\"selectImage(pictureUrl)\" [ngClass]=\"{'selected-header-image':selectedHeaderImage==pictureUrl}\">\n        </li>\n    </ul>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PostListService } from '../../services/post-list.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SearchService } from '../../services/search.service';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { ModuleInfo } from '../../moduleInfo';\nimport { Module } from '../../module';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-post-review',\n  templateUrl: './post-review.component.html',\n  styleUrls: ['./post-review.component.css']\n})\nexport class PostReviewComponent implements OnInit {\n\n  @ViewChild('ModuleInfo') ModuleInfo: any;\n  @ViewChild('ExtraInfo') ExtraInfo: any;\n  @ViewChild('ReviewAndRatings') ReviewAndRatings: any;\n  @ViewChild('HeaderImage') HeaderImage: any;\n\n  public reviewPost: ReviewPost;\n\n  public moduleCode: string = '';\n\n  constructor(public postListService: PostListService,\n    public route: Router,\n    public activatedRoute: ActivatedRoute,\n    public searchService: SearchService,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(data => {\n      if (data.moduleCode) {\n        this.moduleCode = data.moduleCode;\n      }\n    })\n  }\n\n  onSubmit() {\n    this.ModuleInfo.getModule().subscribe((module: Module) => {\n      if (module) {\n        var moduleInfo = new ModuleInfo(module.moduleCode, module.title, this.ModuleInfo.prof, this.ModuleInfo.acadYear, this.ModuleInfo.semester);\n        this.reviewPost = new ReviewPost(\n          moduleInfo,\n          this.ReviewAndRatings.reviewAndRatings,\n          this.ExtraInfo.extraInfo,\n          this.HeaderImage.selectedHeaderImage,\n          new Date().toLocaleDateString(),\n          new Date().toTimeString().slice(0, 8),\n        );\n        this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n          this.postListService.addPost(this.reviewPost).subscribe((post: ReviewPost) => {\n            this.route.navigate(['/LatestPosts']);\n          });\n        })\n      } else {\n        this.snackBar.open('Please choose a valid module!', 'Close', {\n          verticalPosition: 'top',\n          duration: 2000\n        })\n      }\n    });\n  }\n\n}\n","<main>\n    <mat-card class=\"left-panel\">\n        <app-module-info #ModuleInfo [moduleCode]=\"moduleCode\"></app-module-info>\n        <mat-divider></mat-divider>\n        <app-review-and-ratings #ReviewAndRatings></app-review-and-ratings>\n        <mat-divider></mat-divider>\n        <app-extra-info #ExtraInfo></app-extra-info>\n        <mat-divider></mat-divider>\n        <app-select-header-image #HeaderImage></app-select-header-image>\n        <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"onSubmit()\">submit</button>\n    </mat-card>\n    \n    <div class=\"right-panel\">\n        <app-data-collected></app-data-collected>\n    </div>\n</main>","export class ExtraInfo {\n    constructor(public gradeExpected: string, public gradeObtained: string){}\n}","export class Module {\n    constructor(\n        public moduleCode: string,\n        public title: string,\n        public moduleCredit: string,\n        public department: string,\n        public faculty: string,\n        public description: string,\n        public numOfReviews: number\n      ) { }\n}","export class ModuleInfo {\n    constructor(public moduleCode: String, public title: string, public prof: string, public acadYear: string, public semester: string) {}\n}","export class RefinementList {\n    static emptyRefinementList = new RefinementList([], [], [], []);\n    constructor(public Faculty: string[], \n        public Department: string[], \n        public ModuleCredit: string[], \n        public Level: string[]) {}\n    \n    isEmpty() {\n        return this.Faculty.length == 0 \n            && this.Department.length == 0 \n            && this.ModuleCredit.length == 0 \n            && this.Level.length == 0;\n    }\n}","export class ReviewAndRatings {\n    constructor(public review: string, \n        public general: number, \n        public difficulty: number, \n        public workload: number, \n        public recommend: number) {}\n}","import { ModuleInfo } from './moduleInfo';\nimport { ReviewAndRatings } from './reviewAndRatings';\nimport { ExtraInfo } from './extraInfo';\n\nexport class ReviewPost {\n    public moduleInfo: ModuleInfo;\n    public reviewAndRatings: ReviewAndRatings;\n    public extraInfo: ExtraInfo;\n    public headerImage: string;\n    public date: string;\n    public time: string;\n    public numOfLikes: number;\n    public numOfDislikes: number;\n    public numOfShares: number;\n    public _id: string;\n    constructor(\n        moduleInfo: ModuleInfo,\n        reviewAndRatings: ReviewAndRatings,\n        extraInfo: ExtraInfo,\n        headerImage: string,\n        date: string,\n        time: string) { \n            this.moduleInfo = moduleInfo;\n            this.reviewAndRatings = reviewAndRatings;\n            this.extraInfo = extraInfo;\n            this.headerImage = headerImage;\n            this.date = date;\n            this.time = time;\n            this.numOfDislikes = 0;\n            this.numOfLikes = 0;\n            this.numOfShares = 0;\n            this._id = '';\n        }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { AdminAccount } from '../adminAccount';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAccountService {\n\n  public cachedAdminAccountList: AdminAccount[] = [];\n\n  public adminAccount: AdminAccount;\n\n  constructor(public http: HttpClient) { }\n\n  getAdminAccount() {\n    return this.adminAccount;\n  }\n\n  getAdminAccountList() {\n    if (this.cachedAdminAccountList.length > 0) {\n      return of(this.cachedAdminAccountList);\n    } else {\n      return this.http.get('/adminAccounts').pipe(\n        map((adminAccountList: AdminAccount[]) => {\n          this.cachedAdminAccountList = adminAccountList;\n          return adminAccountList;\n        })\n      )\n    }\n  }\n\n  login(accountName: string, password: string) {\n    return this.getAdminAccountList().pipe(\n      map((adminAccountList: AdminAccount[]) => {\n        var filteredAdminAccountList = adminAccountList.filter((adminAccount: AdminAccount) => {\n          return adminAccount.accountName == accountName && adminAccount.password == password;\n        });\n        if (filteredAdminAccountList.length == 1) {\n          this.adminAccount = filteredAdminAccountList[0];\n        }\n        return filteredAdminAccountList.length == 1;\n      })\n    )\n  }\n\n  logout() {\n    this.adminAccount = undefined;\n  }\n\n  createAccount(adminAccount: AdminAccount) {\n    var httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n    return this.http.post('/adminAccounts/create', adminAccount, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PostListService } from './post-list.service';\nimport { ReviewPost } from '../reviewPost';\nimport { Module } from '../module';\nimport { map } from \"rxjs/operators\";\nimport { AverageRatings } from '../averageRatings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AverageRatingsService {\n\n  constructor(public postListService: PostListService) { }\n\n  public getAverageRatingsByReviewList(reviewList: ReviewPost[]) {\n\n    var averageRatings = new AverageRatings('0', '0', '0', '0');\n\n    var general = 0;\n    var difficulty = 0;\n    var workload = 0;\n    var recommend = 0;\n\n    if (reviewList.length > 0) {\n      reviewList.forEach((review: ReviewPost) => {\n        general = general + review.reviewAndRatings.recommend;\n        difficulty = difficulty + review.reviewAndRatings.difficulty;\n        workload = workload + review.reviewAndRatings.workload;\n        recommend = recommend + review.reviewAndRatings.general;\n      })\n\n      averageRatings.averageRecommend = (recommend / reviewList.length).toFixed(2);\n      averageRatings.averageDifficulty = (difficulty / reviewList.length).toFixed(2);\n      averageRatings.averageWorkload = (workload / reviewList.length).toFixed(2);\n      averageRatings.averageGeneral = (general / reviewList.length).toFixed(2);\n    }\n\n    return averageRatings;\n  }\n\n  public getAverageRatingsByModuleCode(moduleCode: string) {\n    return this.postListService.getPostListOfModule(moduleCode).pipe(\n      map((reviewList: ReviewPost[]) => {\n        return this.getAverageRatingsByReviewList(reviewList);\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Module } from '../module';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { PostListService } from '../services/post-list.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleListService {\n\n  public cachedModuleList: Module[] = [];\n\n  constructor(public http: HttpClient, public postListService: PostListService) { }\n\n  updateLocalStorage() {\n    this.http.get('/modules').subscribe((moduleList: Module[]) => {\n      localStorage.setItem('moduleList', JSON.stringify(moduleList));\n      this.cachedModuleList = moduleList;\n    });\n  }\n\n  getModuleList() {\n    if (this.cachedModuleList.length > 0) {\n      return of(this.cachedModuleList);\n    } else if (localStorage.getItem('moduleList')) {\n      this.cachedModuleList = JSON.parse(localStorage.getItem('moduleList'));\n      return of(this.cachedModuleList);\n    } else {\n      this.updateLocalStorage();\n      return this.http.get('/modules');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Module } from '../module';\nimport { SearchService } from './search.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyModulesService {\n\n  public myModuleList: Module[] = [];\n\n  constructor(public searchService: SearchService) { }\n\n  getMyModuleList() {\n    if (this.myModuleList.length == 0) {\n      if (localStorage.getItem('myModuleList')) {\n        this.myModuleList = JSON.parse(localStorage.getItem('myModuleList'));\n      } else {\n        this.updateLocalStorage();\n      }\n    } \n    return this.myModuleList;\n  }\n\n  addModule(module: Module) {\n    this.myModuleList.push(module);\n    this.updateLocalStorage();\n  }\n\n  deleteModule(moduleCode: string) {\n    this.myModuleList = this.myModuleList.filter((module: Module) => {\n      return module.moduleCode != moduleCode;\n    })\n    this.updateLocalStorage();\n  }\n\n  updateLocalStorage() {\n    localStorage.setItem('myModuleList', JSON.stringify(this.myModuleList));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ReviewPost } from \"../reviewPost\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { of } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { stringify } from 'querystring';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostListService {\n\n  public cachedPostList: ReviewPost[] = [];\n\n  constructor(public http: HttpClient) { }\n\n  getPostList() {\n    if (this.cachedPostList.length > 0) {\n      return of(JSON.parse(JSON.stringify(this.cachedPostList)));\n    } else {\n      return this.http.get('/posts').pipe(\n        map((postList: ReviewPost[]) => {\n          this.cachedPostList = postList;\n          return JSON.parse(JSON.stringify(this.cachedPostList));\n        })\n      );\n    }\n  }\n\n  likePost(postId: string) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList.filter((reviewPost: ReviewPost) => reviewPost._id == postId)[0].numOfLikes++;\n    })\n    var postListLike = this.getPostListLike();\n    postListLike.push(postId);\n    localStorage.setItem('postListLike', JSON.stringify(postListLike));\n    return this.http.put('/posts/like/' + postId, null);\n  }\n\n  cancelLikePost(postId: string) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList.filter((reviewPost: ReviewPost) => reviewPost._id == postId)[0].numOfLikes--;\n    })\n    localStorage.setItem('postListLike', JSON.stringify(this.getPostListLike().filter((id: string) => id != postId)));\n    return this.http.put('/posts/like/cancel/' + postId, null);\n  }\n\n  dislikePost(postId: string) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList.filter((reviewPost: ReviewPost) => reviewPost._id == postId)[0].numOfDislikes++;\n    })\n    var postListDislike = this.getPostListDislike();\n    postListDislike.push(postId);\n    localStorage.setItem('postListDislike', JSON.stringify(postListDislike));\n    return this.http.put('/posts/dislike/' + postId, null);\n  }\n\n  cancelDislikePost(postId: string) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList.filter((reviewPost: ReviewPost) => reviewPost._id == postId)[0].numOfDislikes--;\n    })\n    localStorage.setItem('postListDislike', JSON.stringify(this.getPostListDislike().filter((id: string) => id != postId)));\n    return this.http.put('/posts/dislike/cancel/' + postId, null);\n  }\n\n  sharePost(postId: string) {\n    this.getPostList().subscribe((reviewList: ReviewPost[]) => {\n      this.cachedPostList.filter((reviewPost: ReviewPost) => reviewPost._id == postId)[0].numOfShares++;\n    })\n    return this.http.put('/posts/share/' + postId, null);\n  }\n\n  getPostListLike() {\n    if (!localStorage.getItem('postListLike')) {\n      localStorage.setItem('postListLike', JSON.stringify([]));\n    }\n    return JSON.parse(localStorage.getItem('postListLike'));\n  }\n\n  getPostListDislike() {\n    if (!localStorage.getItem('postListDislike')) {\n      localStorage.setItem('postListDislike', JSON.stringify([]));\n    }\n    return JSON.parse(localStorage.getItem('postListDislike'));\n  }\n\n  countNumOfPosts() {\n    return this.http.get('/posts/count');\n  }\n\n  deletePost(postId: string) {\n    this.cachedPostList = this.cachedPostList.filter((post: ReviewPost) => {\n      return post._id != postId;\n    })\n    return this.http.delete('posts/delete/' + postId);\n  }\n\n  addPost(post: ReviewPost) {\n    var httpOptions = {\n      headers: new HttpHeaders({ \"Content-Type\": \"application/json\" })\n    };\n    return this.http.post('/posts', post, httpOptions).pipe(\n      map((reviewPost: ReviewPost) => {\n        this.cachedPostList.push(reviewPost);\n        return reviewPost;\n      })\n    );\n  }\n\n  countPostList(moduleCode: string) {\n    return this.http.get('/posts/' + moduleCode + '/count');\n  }\n\n  getPostListOfModule(moduleCode: string) {\n    return this.http.get('/posts/' + moduleCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Question } from '../Question';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionListService {\n\n  constructor(public http: HttpClient) { }\n\n  getQuestionListOfModule(moduleCode: string) {\n    return this.http.get('/questions/' + moduleCode);\n  }\n\n  countNumOfQuestions() {\n    return this.http.get('/questions/count');\n  }\n\n  addQuestion(question: Question) {\n    var httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }\n    return this.http.post('/questions', question, httpOptions);\n  }\n\n  deleteQuestion(questionId: string) {\n    return this.http.delete('/questions/delete/' + questionId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { RefinementList } from '../refinementList';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RefinementListService {\n\n  public refinementList: RefinementList = new RefinementList([], [], ['4 MC'], []);\n\n  public subject = new BehaviorSubject(this.refinementList);\n\n  constructor() { }\n\n  addRefinement(selector: string, refinement: string) {\n    if (!this.includes(selector, refinement)) {\n      this.refinementList[selector].push(refinement);\n      this.subject.next(this.refinementList);\n    }\n  }\n\n  getRefinementList() {\n    return this.subject;\n  }\n\n  deleteRefinement(selector: string, refinement: string) {\n    this.refinementList[selector].splice(this.refinementList[selector].indexOf(refinement), 1);\n    this.subject.next(this.refinementList);\n  }\n\n  includes(selector: string, refinement: string) {\n    return this.refinementList[selector].includes(refinement);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ModuleListService } from \"./module-list.service\";\nimport { RefinementList } from '../refinementList';\nimport { map } from \"rxjs/operators\";\nimport { Module } from \"../module\";\nimport { PostListService } from '../services/post-list.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  constructor(public moduleListService: ModuleListService,\n    public postListService: PostListService) { }\n\n  private belongsToFaculty = (module: Module, facultyList: string[]) => {\n    var flag = false;\n    for (let i = 0; i < facultyList.length; i++) {\n      if (module.faculty == facultyList[i]) {\n        flag = true;\n        break;\n      }\n    }\n    return facultyList.length == 0 || flag;\n  }\n\n  private belongsToDepartment(module: Module, departmentList: string[]) {\n    var flag = false;\n    for (let i = 0; i < departmentList.length; i++) {\n      if (module.department == departmentList[i]) {\n        flag = true;\n        break;\n      }\n    }\n    return departmentList.length == 0 || flag;\n  }\n\n  public belongsToLevel(module: Module, levelList: string[]) {\n    var flag = false;\n    for (let i = 0; i < levelList.length; i++) {\n      let level = levelList[i].charAt(0);\n      let levelOfModule = module.moduleCode.replace(/^[A-Z]+/, '').charAt(0);\n      if (level == levelOfModule) {\n        flag = true;\n        break;\n      }\n    }\n    return levelList.length == 0 || flag;\n  }\n\n  public hasModuleCredit(module: Module, moduleCreditList: string[]) {\n    var flag = false;\n    for (let i = 0; i < moduleCreditList.length; i++) {\n      let moduleCredit = parseInt(module.moduleCredit);\n      switch (moduleCreditList[i]) {\n        case '0-3 MC': flag = moduleCredit < 4; break;\n        case '4 MC': flag = moduleCredit == 4; break;\n        case '5-8 MC': flag = moduleCredit < 9 && moduleCredit > 4; break;\n        case 'More than 8 MC': flag = moduleCredit > 8; break;\n      }\n      if (flag) break;\n    }\n    return moduleCreditList.length == 0 || flag;\n  }\n\n  getFullModuleList() {\n    return this.moduleListService.getModuleList();\n  }\n\n  search(searchInput: string, refinementList: RefinementList) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        if (refinementList.isEmpty()) {\n          return moduleList;\n        } else {\n          return moduleList.filter((module: Module) => {\n            return this.belongsToFaculty(module, refinementList.Faculty) &&\n              this.belongsToDepartment(module, refinementList.Department) &&\n              this.hasModuleCredit(module, refinementList.ModuleCredit) &&\n              this.belongsToLevel(module, refinementList.Level);\n          })\n        }\n      }),\n      map((moduleList: Module[]) => {\n        if (searchInput == '') {\n          return moduleList;\n        } else {\n          let uppercaseSearchInput = searchInput.toUpperCase();\n          return moduleList.filter((module: Module) => {\n            let uppercaseModuleTitle = module.title.toUpperCase();\n            return uppercaseModuleTitle.search(uppercaseSearchInput) != -1 || module.moduleCode.search(uppercaseSearchInput) != -1;\n          });\n        }\n      })\n    );\n  }\n\n  getModule(moduleCode: string) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        let moduleFound: Module;\n        for (var i = 0; i < moduleList.length; i++) {\n          if (moduleList[i].moduleCode == moduleCode) {\n            moduleFound = moduleList[i];\n            break;\n          }\n        }\n        return moduleFound;\n      })\n    )\n  }\n\n  getMoreModuleList(moduleCode: String) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        let index = moduleList.map((module: Module) => {\n          return module.moduleCode;\n        }).findIndex((item: string) => item == moduleCode);\n        let start = index - 5 < 0\n          ? 0\n          : index + 5 > moduleList.length - 1\n            ? moduleList.length - 11\n            : index - 5;\n        return moduleList.slice(start, start + 11).filter((module: Module) => module.moduleCode != moduleCode);\n      })\n    )\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}