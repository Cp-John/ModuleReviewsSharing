{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/data-collected/data-collected.component.ts","./src/app/components/data-collected/data-collected.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/latest-posts/latest-posts.component.ts","./src/app/components/latest-posts/latest-posts.component.html","./src/app/components/my-modules/my-modules.component.ts","./src/app/components/my-modules/my-modules.component.html","./src/app/refinementList.ts","./src/app/services/module-list.service.ts","./src/app/services/my-modules.service.ts","./src/app/services/post-list.service.ts","./src/app/services/search.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LatestPostsComponent } from './components/latest-posts/latest-posts.component';\nimport { MyModulesComponent } from './components/my-modules/my-modules.component';\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'LatestPosts', component: LatestPostsComponent},\n  {path: 'MyModules', component: MyModulesComponent},\n  {path: '**', redirectTo: ''}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'nusmods';\n}\n","<div class=\"container\">\n  <header>\n      <app-header></app-header>\n  </header>\n  \n  <main>\n      <router-outlet></router-outlet>\n  </main>\n</div>\n\n<footer>\n  <app-footer></app-footer>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LatestPostsComponent } from './components/latest-posts/latest-posts.component';\nimport { DataCollectedComponent } from './components/data-collected/data-collected.component';\nimport { MyModulesComponent } from './components/my-modules/my-modules.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LatestPostsComponent,\n    DataCollectedComponent,\n    MyModulesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatCardModule,\n    MatDividerModule,\n    MatSidenavModule,\n    MatAutocompleteModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SearchService } from '../../services/search.service';\nimport { PostListService } from '../../services/post-list.service';\nimport { Module } from '../../module';\nimport { ReviewPost } from 'src/app/reviewPost';\n\n@Component({\n  selector: 'app-data-collected',\n  templateUrl: './data-collected.component.html',\n  styleUrls: ['./data-collected.component.css']\n})\nexport class DataCollectedComponent implements OnInit {\n\n  public numberOfModules: number = 0;\n  public numberOfReviews: number = 0;\n\n  constructor(public searchService: SearchService, public postListService: PostListService) { }\n\n  ngOnInit(): void {\n    this.searchService.getFullModuleList().subscribe((moduleList: Module[]) => {\n      this.numberOfModules = moduleList.length;\n    })\n\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.numberOfReviews = postList.length;\n    })\n  }\n}\n","<mat-card>\n    <mat-card-title>Data collected</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n        <div class=\"data-collected\">Number of modules: {{numberOfModules}}</div>\n        <div class=\"data-collected\">Number of reviews: {{numberOfReviews}}</div>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"mat-caption\">\n        Made By Cao Peng & Li Zhuoran, June 2020\n    </div>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public route: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goHome() {\n    this.route.navigate(['/']);\n  }\n\n  goModuleList() {\n    this.route.navigate(['/ModuleList']);\n  }\n\n  goPostReviews() {\n    this.route.navigate(['/PostReviews']);\n  }\n\n  goLatestPosts() {\n    this.route.navigate(['/LatestPosts']);\n  }\n\n  goMyModules() {\n    this.route.navigate(['/MyModules']);\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <div class=\"nusmods\">\n        <button mat-button>\n            <span class=\"mat-h1\" (click)=\"goHome()\">NUSMods</span>\n        </button>\n    </div>\n\n    <div class=\"btns\">\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goModuleList()\">Module List</span>\n        </button>\n\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goPostReviews()\">Post Reviews</span>\n        </button>\n\n        <button mat-button>\n            <span class=\"mat-h3\" (click)=\"goLatestPosts()\">Latest Posts</span>\n        </button>\n    </div>\n\n    <div class=\"my-modules\">\n        <button mat-raised-button (click)=\"goMyModules()\">My Modules</button>\n    </div>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationExtras, NavigationEnd } from '@angular/router';\nimport { SearchService } from '../../services/search.service';\nimport { Module } from '../../module';\nimport { RefinementList } from '../../refinementList';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public searchInput: string = '';\n\n  public selectedModule: Module;\n\n  public moduleListShown: Module[] = [];\n\n  public inputStatus: boolean = false;\n\n  constructor(public route: Router, public searchService: SearchService) { }\n\n  ngOnInit(): void {\n    this.search();\n  }\n\n  select(module: Module) {\n    this.selectedModule = module;\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: this.selectedModule.moduleCode\n      }\n    }\n    this.route.navigate(['/Module'], navigationExtras);\n  }\n\n  search() {\n    this.searchService.search(this.searchInput, RefinementList.emptyRefinementList).subscribe((searchResult: Module[]) => {\n      this.moduleListShown = searchResult.slice(0, 10);\n    })\n  }\n\n  goModuleList() {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        searchInput: this.searchInput\n      }\n    }\n    this.route.navigate(['/ModuleList'], navigationExtras);\n  }\n\n  goModuleListWithNoInput() {\n    this.route.navigate(['/ModuleList']);\n  }\n\n  goPostReviews() {\n    this.route.navigate(['/PostReviews']);\n  }\n\n  goLatestPosts() {\n    this.route.navigate(['/LatestPosts']);\n  }\n\n  inputStatusOn() {\n    this.inputStatus = true;\n  }\n\n}\n","<div>\n    <div class=\"headline mat-display-3\">NUSMods</div>\n    <div class=\"mat-caption\">reviews | ratings | recommend</div>\n    <div class=\"search-box\">\n        <mat-icon>search</mat-icon>\n        <mat-form-field>\n            <input \n                type=\"text\" \n                autocomplete=\"off\"\n                matInput \n                placeholder=\"Module code or title\" \n                (input)=\"search(); inputStatusOn()\"\n                [(ngModel)]=\"searchInput\">\n        </mat-form-field>\n    </div>\n    <div class=\"scrollable-container\" cdkScrollable *ngIf=\"inputStatus\">\n        <mat-option *ngFor=\"let module of moduleListShown\" (click)=\"select(module)\">\n            <div class=\"module-info\">\n                <div class=\"mat-h4\">{{module.moduleCode}} - {{module.title}} </div>\n                <div class=\"mat-caption\"> {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}MCs </div>\n            </div>\n        </mat-option>\n        <button class=\"more-btn\" mat-button color=\"primary\" (click)=\"goModuleList()\">More</button>\n    </div>\n    <div class=\"flex-container\">\n        <button mat-button (click)=\"goModuleListWithNoInput()\" class=\"colored-btn\">Module List</button>\n        <button mat-raised-button (click)=\"goPostReviews()\" color=\"primary\">Post Reviews</button>\n        <button mat-button (click)=\"goLatestPosts()\" class=\"colored-btn\">Latest Posts</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PostListService } from '../../services/post-list.service';\nimport { ReviewPost } from 'src/app/reviewPost';\nimport { Router, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-latest-posts',\n  templateUrl: './latest-posts.component.html',\n  styleUrls: ['./latest-posts.component.css']\n})\nexport class LatestPostsComponent implements OnInit {\n\n  public postList: ReviewPost[] = [];\n\n  public postListShown: ReviewPost[] = [];\n\n  public userName: string = \"Anonymous\";\n\n  constructor(public postListService: PostListService, public route: Router) { }\n\n  ngOnInit(): void {\n    this.postListService.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.postList = postList;\n      this.postListShown = postList.slice(0, 5);\n    });\n  }\n\n  goModule(moduleCode: String) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module'], navigationExtras);\n  }\n\n  updatePostListShown(event: any) {\n    var start = event.pageIndex * 5;\n    this.postListShown = this.postList.slice(start, start + 5);\n  }\n\n}\n","<main class=\"flex-container\">\n    <div class=\"left-panel\">\n        <div class=\"mat-display-1\">Latest Posts</div>\n        <mat-card class=\"no-reviews-yet mat-h1\" *ngIf=\"postList.length==0\">\n            No reviews yet!\n            <mat-icon>sentiment_very_dissatisfied</mat-icon>\n        </mat-card>\n        <mat-card *ngFor=\"let post of postListShown\">\n                \n                <mat-card-title class=\"flex-container\">\n                    <div class=\"header\">\n                        {{post.moduleInfo.moduleCode}} - {{post.moduleInfo.title}}\n                        <span class=\"mat-caption\">Under Prof {{post.moduleInfo.prof}}, {{post.moduleInfo.acadYear}}</span>\n                    </div>\n                    <div class=\"view-btn\">\n                        <button mat-icon-button matTooltip=\"view\" (click)=\"goModule(post.moduleInfo.moduleCode)\">\n                            <mat-icon>search</mat-icon>\n                        </button>\n                    </div>\n                </mat-card-title>\n\n                <mat-card-subtitle>\n                    {{post.date}} - {{post.time}} by {{userName}}\n                </mat-card-subtitle>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-content>\n                <div class=\"review\">\n                    {{post.reviewAndRatings.review}}\n                </div>\n    \n                <div class=\"extra-info mat-caption\">\n                    Expected Grade: {{post.extraInfo.gradeExpected}}\n                </div>\n    \n                <div class=\"extra-info mat-caption\">\n                    Grade Obtained: {{post.extraInfo.gradeObtained}}\n                </div>\n            </mat-card-content>\n\n            <mat-divider></mat-divider>\n\n            <mat-card-actions class=\"flex-container\">\n                <div class=\"flex-container ratings\">\n                    <div matTooltip=\"10 for most satisfied\">\n                        general: {{post.reviewAndRatings.general}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>2&&post.reviewAndRatings.general<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>4&&post.reviewAndRatings.general<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>6&&post.reviewAndRatings.general<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.general>8\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most difficult\">\n                        difficulty: {{post.reviewAndRatings.difficulty}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon\n                                *ngIf=\"post.reviewAndRatings.difficulty>6&&post.reviewAndRatings.difficulty<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon\n                                *ngIf=\"post.reviewAndRatings.difficulty>4&&post.reviewAndRatings.difficulty<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon\n                                *ngIf=\"post.reviewAndRatings.difficulty>2&&post.reviewAndRatings.difficulty<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.difficulty<3\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for heaviest workload\">\n                        workload: {{post.reviewAndRatings.workload}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>8\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>6&&post.reviewAndRatings.workload<9\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>4&&post.reviewAndRatings.workload<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload>2&&post.reviewAndRatings.workload<5\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.workload<3\">sentiment_very_satisfied</mat-icon>\n                        </div>\n                    </div>\n                    <div matTooltip=\"10 for most willing to recommend\">\n                        recommend: {{post.reviewAndRatings.recommend}} / 10\n                        <div class=\"icon\">\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend<3\">sentiment_very_dissatisfied\n                            </mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>2&&post.reviewAndRatings.recommend<5\">\n                                sentiment_dissatisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>4&&post.reviewAndRatings.recommend<7\">\n                                sentiment_satisfied</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>6&&post.reviewAndRatings.recommend<9\">\n                                sentiment_satisfied_alt</mat-icon>\n                            <mat-icon *ngIf=\"post.reviewAndRatings.recommend>8\">sentiment_very_satisfied\n                            </mat-icon>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"btns\">\n                    <button mat-icon-button matTooltip=\"like\">\n                        <mat-icon>thumb_up</mat-icon>\n                    </button>\n                    <button mat-icon-button matTooltip=\"dislike\">\n                        <mat-icon>thumb_down</mat-icon>\n                    </button>\n                    <button mat-icon-button matTooltip=\"share\">\n                        <mat-icon>share</mat-icon>\n                    </button>\n                </div>\n            </mat-card-actions>\n        </mat-card>\n        <mat-paginator \n            [length]=\"postList.length\" \n            pageSize=\"5\" \n            showFirstLastButtons=\"true\"\n            hidePageSize=\"true\"\n            (page)=\"updatePostListShown($event)\"></mat-paginator>\n    </div>\n    <div class=\"right-panel\">\n        <app-data-collected></app-data-collected>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { MyModulesService } from '../../services/my-modules.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Module } from 'src/app/module';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-my-modules',\n  templateUrl: './my-modules.component.html',\n  styleUrls: ['./my-modules.component.css']\n})\nexport class MyModulesComponent implements OnInit {\n\n  public myModuleList: Module[] = [];\n\n  public averageRatingsList: any[] = [];\n\n  constructor(public myModulesService: MyModulesService, public route: Router, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n      this.myModuleList = this.myModulesService.getMyModuleList();\n  }\n\n  goModule(moduleCode: string) {\n    var navigationExtras: NavigationExtras = {\n      queryParams: {\n        moduleCode: moduleCode\n      }\n    }\n    this.route.navigate(['/Module'], navigationExtras);\n  }\n\n  deleteModule(moduleCode: string) {\n    this.myModulesService.deleteModule(moduleCode);\n    this.myModuleList = this.myModulesService.getMyModuleList();\n    this.snackBar.open('Successfully deleted from my modules!', 'Close', {\n      verticalPosition: 'top',\n      duration: 1000\n    });\n  }\n\n  goModuleList() {\n    this.route.navigate(['ModuleList']);\n  }\n\n}\n","<main>\n    <mat-card *ngFor=\"let module of myModuleList; let key=index\">\n        <mat-card-title>\n            {{module.moduleCode}} - {{module.title}}\n        </mat-card-title>\n\n        <mat-card-subtitle>\n            {{module.faculty}} - {{module.department}} - {{module.moduleCredit}}\n        </mat-card-subtitle>\n\n        <mat-card-content>\n            Average Ratings:\n            <div class=\"average-ratings-container\">\n                <div class=\"average-rating\" matTooltip=\"10 for most satisfied\">\n                    general: {{averageRatingsList[key].averageGeneral}} / 10\n                </div>\n                <div class=\"average-rating\" matTooltip=\"10 for most difficult\">\n                    difficulty: {{averageRatingsList[key].averageDifficulty}} / 10\n                </div>\n            </div>\n            <div class=\"average-ratings-container\">\n                <div class=\"average-rating\" matTooltip=\"10 for heaviest workload\">\n                    workload: {{averageRatingsList[key].averageWorkload}} / 10\n                </div>\n                <div class=\"average-rating\" matTooltip=\"10 for most willing to recommend\">\n                    recommend: {{averageRatingsList[key].averageRecommend}} / 10\n                </div>\n            </div>\n\n            <div class=\"mat-caption\">\n                number of reviews: {{module.reviewList.length}}\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions>\n            <button mat-icon-button (click)=\"goModule(module.moduleCode)\">\n                <mat-icon matTooltip=\"view\">search</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)=\"deleteModule(module)\">\n                <mat-icon matTooltip=\"delete\">cancel</mat-icon>\n            </button>\n        </mat-card-actions>\n\n    </mat-card>\n\n    <mat-card class=\"no-modules-added-yet\" *ngIf=\"myModuleList.length==0\">\n        <mat-card-content>\n            <span class=\"mat-h1\">No modules added yet!</span>\n            <mat-icon>sentiment_very_dissatisfied</mat-icon>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button (click)=goModuleList() color=\"primary\">\n                Go to add my modules\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</main>","export class RefinementList {\n    static emptyRefinementList = new RefinementList([], [], [], []);\n    constructor(public Faculty: string[], \n        public Department: string[], \n        public ModuleCredit: string[], \n        public Level: string[]) {}\n    \n    isEmpty() {\n        return this.Faculty.length == 0 \n            && this.Department.length == 0 \n            && this.ModuleCredit.length == 0 \n            && this.Level.length == 0;\n    }\n}","import { Injectable } from '@angular/core';\nimport { Module } from '../module';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleListService {\n\n  public cachedModuleList: Module[] = [];\n\n  constructor(public http: HttpClient) { }\n\n  updateLocalStorage() {\n    this.http.get('/modules').subscribe((moduleList: Module[]) => {\n      localStorage.setItem('moduleList', JSON.stringify(moduleList));\n      this.cachedModuleList = moduleList;\n    });\n  }\n\n  getModuleList() {\n    if (this.cachedModuleList.length > 0) {\n      return of(this.cachedModuleList);\n    } else if (localStorage.getItem('moduleList')) {\n      this.cachedModuleList = JSON.parse(localStorage.getItem('moduleList'));\n      return of(this.cachedModuleList);\n    } else {\n      this.updateLocalStorage();\n      return this.http.get('/modules');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Module } from '../module';\nimport { SearchService } from './search.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyModulesService {\n\n  public myModuleList: Module[] = [];\n\n  constructor(public searchService: SearchService) { }\n\n  getMyModuleList() {\n    if (this.myModuleList.length == 0) {\n      if (localStorage.getItem('myModuleList')) {\n        this.myModuleList = JSON.parse(localStorage.getItem('myModuleList'));\n      } else {\n        this.updateLocalStorage();\n      }\n    } \n    return this.myModuleList;\n  }\n\n  addModule(module: Module) {\n    this.myModuleList.push(module);\n    this.updateLocalStorage();\n  }\n\n  deleteModule(moduleCode: string) {\n    this.myModuleList = this.myModuleList.filter((module: Module) => {\n      return module.moduleCode != moduleCode;\n    })\n    this.updateLocalStorage();\n  }\n\n  updateLocalStorage() {\n    localStorage.setItem('myModuleList', JSON.stringify(this.myModuleList));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ReviewPost } from \"../reviewPost\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { of } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostListService {\n\n  public cachedPostList: ReviewPost[] = [];\n\n  constructor(public http: HttpClient) { }\n\n  getPostList() {\n    if (this.cachedPostList.length > 0) {\n      return of(this.cachedPostList);\n    } else {\n      return this.http.get('/posts').pipe(\n        map((postList: ReviewPost[]) => {\n          this.cachedPostList = postList.reverse();\n          return this.cachedPostList;\n        })\n      );\n    }\n  }\n\n  addPost(post: ReviewPost) {\n    this.getPostList().subscribe((postList: ReviewPost[]) => {\n      this.cachedPostList.unshift(post);\n    })\n    var httpOptions = { \n      headers: new HttpHeaders({'Content-Type': 'application/json'}) \n    };\n    this.http.post('/posts', post, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ModuleListService } from \"./module-list.service\";\nimport { RefinementList } from '../refinementList';\nimport { map } from \"rxjs/operators\";\nimport { Module } from \"../module\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  constructor(public moduleListService: ModuleListService) { }\n\n  private belongsToFaculty = (module: Module, facultyList: string[]) => {\n    var flag = false;\n    for (let i = 0; i < facultyList.length; i++) {\n      if (module.faculty == facultyList[i]) {\n        flag = true;\n        break;\n      }\n    }\n    return facultyList.length == 0 || flag;\n  }\n\n  private belongsToDepartment(module: Module, departmentList: string[]) {\n    var flag = false;\n    for (let i = 0; i < departmentList.length; i++) {\n      if (module.department == departmentList[i]) {\n        flag = true;\n        break;\n      }\n    }\n    return departmentList.length == 0 || flag;\n  }\n\n  public belongsToLevel(module: Module, levelList: string[]) {\n    var flag = false;\n    for (let i = 0; i < levelList.length; i++) {\n      let level = levelList[i].charAt(0);\n      let levelOfModule = module.moduleCode.replace(/^[A-Z]+/, '').charAt(0);\n      if (level == levelOfModule) {\n        flag = true;\n        break;\n      }\n    }\n    return levelList.length == 0 || flag;\n  }\n\n  public hasModuleCredit(module: Module, moduleCreditList: string[]) {\n    var flag = false;\n    for (let i = 0; i < moduleCreditList.length; i++) {\n      let moduleCredit = parseInt(module.moduleCredit);\n      switch (moduleCreditList[i]) {\n        case '0-3 MC': flag = moduleCredit < 4; break;\n        case '4 MC': flag = moduleCredit == 4; break;\n        case '5-8 MC': flag = moduleCredit < 9 && moduleCredit > 4; break;\n        case 'More than 8 MC': flag = moduleCredit > 8; break;\n      }\n      if (flag) break;\n    }\n    return moduleCreditList.length == 0 || flag;\n  }\n\n  getFullModuleList() {\n    return this.moduleListService.getModuleList();\n  }\n\n  search(searchInput: string, refinementList: RefinementList) {\n    return this.getFullModuleList().pipe(\n      map((moduleList: Module[]) => {\n        if (refinementList.isEmpty()) {\n          return moduleList;\n        } else {\n          return moduleList.filter((module: Module) => {\n            return this.belongsToFaculty(module, refinementList.Faculty) &&\n              this.belongsToDepartment(module, refinementList.Department) &&\n              this.hasModuleCredit(module, refinementList.ModuleCredit) &&\n              this.belongsToLevel(module, refinementList.Level);\n          })\n        }\n      }),\n      map((moduleList: Module[]) => {\n        if (searchInput == '') {\n          return moduleList;\n        } else {\n          let uppercaseSearchInput = searchInput.toUpperCase();\n          return moduleList.filter((module: Module) => {\n            let uppercaseModuleTitle = module.title.toUpperCase();\n            return uppercaseModuleTitle.search(uppercaseSearchInput) != -1 || module.moduleCode.search(uppercaseSearchInput) != -1;\n          });\n        }\n      })\n    );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}